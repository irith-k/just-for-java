{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/BooleanLogic.js\";\nimport React from 'react';\n\nclass BooleanLogic extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }\n    }, \"welcome to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 16\n      }\n    }, \"boolean logic\"), \"! our goal for this page is for you to understand what \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 91\n      }\n    }, \"2B||!2B\"), \" means!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }\n    }), \"we are going to learn how to make our \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 43\n      }\n    }, \"if statements\"), \" more complex so that we can check multiple things at once (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 123\n      }\n    }, \"psst. need a reminder\"), \" on what in the world if statements are? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 223\n      }\n    }, \"if statements page\"), \"!). and of course, as the name suggests, we are going to work with \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 336\n      }\n    }, \"booleans\"), \"! (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 354\n      }\n    }, \"btw:\"), \" a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 385\n      }\n    }, \"boolean\"), \" is a variable type that has only two possible values: \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 454\n      }\n    }, \"true\"), \" or \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 469\n      }\n    }, \"false\"), \".)\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }), \"are you ready for a bunch of fun symbols like \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 51\n      }\n    }, \"!\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 61\n      }\n    }, \"&&\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 72\n      }\n    }, \"||\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 87\n      }\n    }, \"()\"), \"? are you ready for tons of tables filled with \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 143\n      }\n    }, \"true\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 159\n      }\n    }, \"false\"), \"? cool. let's do this.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }\n    }, \"! = not this\"), \"whenever you see \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 22\n      }\n    }, \"!\"), \", think \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 38\n      }\n    }, \"\\\"the opposite of this\\\"\"), \".\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"!\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, \"false\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \"!\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, \"true\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, \"ready to code? okay!\"), \" make a program that checks if a password that the user enters is not empty. (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 110\n      }\n    }, \"psst. need a reminder\"), \" on how in the world you can get and store user input? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 224\n      }\n    }, \"user input page\"), \"!) (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 271\n      }\n    }, \"psst. need a reminder\"), \" on how to check if a String is empty or not? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 376\n      }\n    }, \"Strings page\"), \"!)\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }\n    }), \"ready for the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, \"big reveal\"), \"? the first thing you need to do is import the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 83\n      }\n    }, \"Scanner\"), \" class to help you get user input. at the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 139\n      }\n    }, \"top of your program\"), \", you should have the following line of code:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, \"import java.util.Scanner;\"), \"and you should have something like the following in your \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 62\n      }\n    }, \"main method\"), \":\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }, \"//create a Scanner variable\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }), \"Scanner in = new Scanner(System.in);\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }, \"//ask the user for their password; make sure to use System.out.print so that the user can answer on the same line as the prompt; also make sure to add a space after the prompt\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }), \"System.out.print(\\\"Password: \\\");\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, \"//store the user input in a String variable called password\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }), \"String password = in.nextLine();\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, \"//use isEmpty() and ! to check if the password the user entered is not empty\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }), \"if(!password.isEmpty()) {\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }\n    }, \"//insert some code here\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }), \"}\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, \"//since we are done getting user input, we can close the Scanner\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }), \"in.close();\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }, \"&& = this and this\"), \"whenever you see \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 22\n      }\n    }, \"&&\"), \", think \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 39\n      }\n    }, \"\\\"only true if both this and this are true\\\"\"), \".\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"&&\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, \"true\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"&&\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, \"false\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"&&\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, \"false\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"&&\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, \"false\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }, \"it do be time to code.\"), \" make a program that creates two boolean variables: \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 86\n      }\n    }, \"isSunny\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 105\n      }\n    }, \"beachOpen\"), \". if it's sunny and the beach is open, then print out a message saying \\\"it's a great day to go to the beach!\\\" (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 232\n      }\n    }, \"psst. need a reminder\"), \" on how to print a message to the console? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 334\n      }\n    }, \"printing page\"), \"!)\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 10\n      }\n    }), \"ready for the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, \"big reveal\"), \"? you should have something like the following in your \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 91\n      }\n    }, \"main method\"), \":\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, \"//create your two boolean variables and set them to whatever values you want\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }), \"boolean isSunny = false;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }\n    }), \"boolean beachOpen = true;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }, \"//check if it is sunny and if the beach is open using &&\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }), \"if(isSunny && beachOpen) {\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 6\n      }\n    }, \"//print a message for the user telling them to go to the beach\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 6\n      }\n    }), \"System.out.println(\\\"it's a great day to go to the beach!\\\");\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }\n    }), \"}\"), \"you can set your variables to any values you like, but for my code above, \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 79\n      }\n    }, \"nothing\"), \" is printed out in the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 116\n      }\n    }, \"console\"), \".\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }\n    }, \"|| = this or this\"), \"whenever you see \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 22\n      }\n    }, \"||\"), \", think \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 39\n      }\n    }, \"\\\"only true if either this or this are true\\\"\"), \".\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, \"||\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, \"true\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, \"||\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, \"true\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, \"||\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, \"true\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, \"||\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, \"false\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 5\n      }\n    }, \"let's code!\"), \" make a program that checks if your favorite number is divisible by either 3 or 5 (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 106\n      }\n    }, \"psst. need a reminder\"), \" on how you can check divisiblity using the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 195\n      }\n    }, \"%\"), \" operator? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 228\n      }\n    }, \"arithmetics page\"), \" and the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 281\n      }\n    }, \"if statement page\"), \"!)\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 10\n      }\n    }), \"ready for the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, \"big reveal\"), \"? you should have something like the following in your \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 91\n      }\n    }, \"main method\"), \":\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 5\n      }\n    }, \"//create an integer variable that stores your favorite number\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }\n    }), \"int favoriteNumber = 101;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }\n    }, \"//check if favoriteNumber is divisible by 3 or by 5 using % and ||\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }\n    }, \"//remember, int a is divisible by int b if the remainder when you divide a by b is equal to 0, so a % b == 0\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }\n    }), \"if(favoriteNumber % 3 == 0 || favoriteNumber % 5 == 0) {\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 6\n      }\n    }, \"//insert some code here\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 5\n      }\n    }), \"}\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 5\n      }\n    }, \"() = do this first\"), \"whenever you see \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 22\n      }\n    }, \"()\"), \", think \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 39\n      }\n    }, \"\\\"hey! do this first!\\\"\"), \".\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }\n    }), \"if we combine \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }, \"!\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, \"&&\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 40\n      }\n    }, \"||\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 55\n      }\n    }, \"()\"), \" in a giant if statement, then there is a precedence on what happens first, just like how \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 154\n      }\n    }, \"*\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 164\n      }\n    }, \"/\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 178\n      }\n    }, \"%\"), \" happen before \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 201\n      }\n    }, \"+\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 214\n      }\n    }, \"-\"), \". (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 225\n      }\n    }, \"psst. need a reminder\"), \" on the order of operations? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 313\n      }\n    }, \"arithmetics page\"), \"!) let's take a look at \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 381\n      }\n    }, \"logical precedence\"), \":\", /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 6\n      }\n    }, \"()\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 6\n      }\n    }, \"!\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 6\n      }\n    }, \"&&\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 6\n      }\n    }, \"||\")), \"just like with arithmetic, \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 32\n      }\n    }, \"parentheses\"), \" are used to signify what needs to happen first. between \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 107\n      }\n    }, \"!\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 117\n      }\n    }, \"&&\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 132\n      }\n    }, \"||\"), \", you always do \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 157\n      }\n    }, \"!\"), \" first, then \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 178\n      }\n    }, \"&&\"), \", and finally \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 201\n      }\n    }, \"||\"), \".\", /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, \"()\"), \"? if so, then repeat each of these steps with the expression inside the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 102\n      }\n    }, \"()\"), \".\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, \"!\"), \"? if so, then simplify each \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 57\n      }\n    }, \"!\"), \" expression going from left to right.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, \"&&\"), \"? if so, then simplify each \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 58\n      }\n    }, \"&&\"), \" expression going from left to right.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, \"||\"), \"? if so, then simplify each \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 58\n      }\n    }, \"||\"), \" expression going from left to right.\")), \"after completing this blueprint, you should have a single boolean: \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 72\n      }\n    }, \"true\"), \" or \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 87\n      }\n    }, \"false\"), \". to better understand this blueprint, let's take a look at some \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 164\n      }\n    }, \"examples\"), \":\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 5\n      }\n    }, \"true || !false && false\"), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, \"()\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 32\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, \"!\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 31\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, \"!false = true, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 41\n      }\n    }, \"true || true && false\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, \"&&\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 32\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }\n    }, \"true && false = false, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 49\n      }\n    }, \"true || false\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, \"||\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 32\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }, \"true || false = true, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 48\n      }\n    }, \"true\")))), \"thus, true || !false && false = \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 37\n      }\n    }, \"true\"), \".\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 5\n      }\n    }, \"!(true && false || false)\"), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, \"()\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 32\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }\n    }, \"true && false || false should be done first\"), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 8\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 23\n      }\n    }, \"()\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 34\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 8\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 23\n      }\n    }, \"!\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 33\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 8\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 23\n      }\n    }, \"&&\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 34\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, \"true && false = false, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 51\n      }\n    }, \"false || false\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 8\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 23\n      }\n    }, \"||\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 34\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, \"false || false = false, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 52\n      }\n    }, \"false\")))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, \"so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 26\n      }\n    }, \"!false\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }, \"!\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 31\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }\n    }, \"!false = true, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 41\n      }\n    }, \"true\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, \"&&\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 32\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    }, \"||\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 32\n      }\n    }, \"no.\"))), \"thus, !(true && false || false) = \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 39\n      }\n    }, \"true\"), \".\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 5\n      }\n    }, \"false && (true || true) && true\"), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, \"()\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 32\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }\n    }, \"true || true should be done first\"), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 8\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 23\n      }\n    }, \"()\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 34\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 8\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 23\n      }\n    }, \"!\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 33\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 8\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 23\n      }\n    }, \"&&\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 34\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 8\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 23\n      }\n    }, \"||\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 34\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }\n    }, \"true || true = true, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 49\n      }\n    }, \"true\")))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 7\n      }\n    }, \"so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 26\n      }\n    }, \"false && true\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, \"!\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 31\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, \"&&\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 32\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 7\n      }\n    }, \"false && true && false = false && false = false, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 75\n      }\n    }, \"false\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 6\n      }\n    }, \"do we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }\n    }, \"||\"), \"? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 32\n      }\n    }, \"no.\"))), \"thus, false && (true || true) && true = \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 45\n      }\n    }, \"false\"), \".\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 10\n      }\n    }), \"hopefully after some examples the blueprint for solving boolean logic problems using logical precedence made sense. let's now combine everything we learned on this page for one final \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 188\n      }\n    }, \"it do be time to code\"), \"...\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 5\n      }\n    }, \"it do be time to code\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 5\n      }\n    }), \"make a program that checks if you can purchase the new outfit that you want. here is a list of steps you need to do to complete this program:\", /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 6\n      }\n    }, \"create two variables that store the prices of the top and bottom of your outfit\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 6\n      }\n    }, \"create a variable to store the total price of the outfit\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 6\n      }\n    }, \"create two variables that represent your minimum and maximum budget\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 6\n      }\n    }, \"create a boolean variable that represent if the top you want is in stock\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 6\n      }\n    }, \"repeat the previous step for your bottom\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 6\n      }\n    }, \"create a boolean variable that represents if the top you want is available for online delivery\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 6\n      }\n    }, \"repeat the previous step for your bottom\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 6\n      }\n    }, \"if both the top and bottom are in stock, or if both the top and bottom are available for online delivery, and if the total price for your outfit is in your budget range, then print out a message telling the user that they can purchase their new outfit\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 6\n      }\n    }, \"otherwise, print out a message telling the user that they can't purchase their new outfit\")), \"i know that was a lot of steps, but \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 41\n      }\n    }, \"you can do it!\"), \" good luck!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 10\n      }\n    }), \"ready for the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 19\n      }\n    }, \"big reveal\"), \"? you should have something like the following in your \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 91\n      }\n    }, \"main method\"), \":\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 5\n      }\n    }, \"//step 1\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 5\n      }\n    }), \"double topPrice = 9.99;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 5\n      }\n    }), \"double bottomPrice = 13.23;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 5\n      }\n    }, \"//step 2\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 5\n      }\n    }), \"double outfitPrice = topPrice + bottomPrice;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 5\n      }\n    }, \"//step 3\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 5\n      }\n    }), \"double minBudget = 10.00;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 5\n      }\n    }), \"double maxBudget = 24.99;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 5\n      }\n    }, \"//steps 4 and 5\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 5\n      }\n    }), \"boolean topInStock = true;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 5\n      }\n    }), \"boolean bottomInStock = false;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 5\n      }\n    }, \"//steps 6 and 7\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 5\n      }\n    }), \"boolean topAvailableForDelivery = true;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 5\n      }\n    }), \"boolean bottomAvailableForDelivery = true;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 5\n      }\n    }, \"//steps 8 and 9\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 5\n      }\n    }), \"if((topInStock && bottomInStock || topAvailableForDelivery && bottomAvailableForDelivery) && (outfitPrice >= minBudget && outfitPrice <= maxBudget)) {\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 5\n      }\n    }, \"System.out.println(\\\"You can purchase your new outfit! :)\\\");\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 5\n      }\n    }), \"} else {\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 5\n      }\n    }, \"System.out.println(\\\"You can't purchase your new outfit! :(\\\")\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 5\n      }\n    }), \"}\"), \"you can set your variables to any values you like, but for my code above, the following is printed out in the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 115\n      }\n    }, \"console\"), \":\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 5\n      }\n    }, \"You can purchase your new outfit! :)\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 5\n      }\n    }, \"!(!recap)\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 5\n      }\n    }, \"awesome!\"), \" you made it to recap!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 10\n      }\n    }), \"we can use \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 16\n      }\n    }, \"!\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 26\n      }\n    }, \"&&\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 37\n      }\n    }, \"||\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 52\n      }\n    }, \"()\"), \" to make our \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 74\n      }\n    }, \"if statements\"), \" more complex, allowing us to check multiple things in a single if statement. here is the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 184\n      }\n    }, \"logical precedence\"), \", meaning \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 219\n      }\n    }, \"which funky symbol you should perform first\"), \":\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 10\n      }\n    }, \"()\"), \" = do this first\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 10\n      }\n    }, \"!\"), \" = not this\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 10\n      }\n    }, \"&&\"), \" = this and this\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 10\n      }\n    }, \"||\"), \" = this or this\")), \"to end with, hamlet once said, \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 36\n      }\n    }, \"2B||!2B\"), \", that is the question... i guess shakespeare did have a knack for coding...\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 10\n      }\n    }), \"...we know \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 16\n      }\n    }, \"just for java\"), \" is as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 60\n      }\n    }, \"addicting\"), \" as the newest Netflix binge, so what are you waiting for? \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 135\n      }\n    }, \"keep coding!\"));\n  }\n\n}\n\nexport default BooleanLogic;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/BooleanLogic.js"],"names":["React","BooleanLogic","Component","constructor","props","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass BooleanLogic extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\twelcome to <b>boolean logic</b>! our goal for this page is for you to understand what <b>2B||!2B</b> means! \n\t\t\t\t<br/>\n\t\t\t\twe are going to learn how to make our <b>if statements</b> more complex so that we can check multiple things at once (<b className=\"note\">psst. need a reminder</b> on what in the world if statements are? check out the <b className=\"pageName\">if statements page</b>!). and of course, as the name suggests, we are going to work with <b>booleans</b>! (<b className=\"note\">btw:</b> a <b>boolean</b> is a variable type that has only two possible values: <b>true</b> or <b>false</b>.)\n\t\t\t\t<br/>\n\t\t\t\tare you ready for a bunch of fun symbols like <b>!</b>, <b>&&</b>, <b>||</b>, and <b>()</b>? are you ready for tons of tables filled with <b>true</b> and <b>false</b>? cool. let's do this.\n\t\t\t\t<br/><br/>\n\t\t\t\t<h3>! = not this</h3>\n\t\t\t\twhenever you see <b>!</b>, think <b>\"the opposite of this\"</b>.\n\t\t\t\t<br/><br/>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td><b>!</b></td>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t\t<td>=</td>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td><b>!</b></td>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t\t<td>=</td>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<br/>\n\t\t\t\t<b>ready to code? okay!</b> make a program that checks if a password that the user enters is not empty. (<b className=\"note\">psst. need a reminder</b> on how in the world you can get and store user input? check out the <b className=\"pageName\">user input page</b>!) (<b className=\"note\">psst. need a reminder</b> on how to check if a String is empty or not? check out the <b className=\"pageName\">Strings page</b>!)\n\t\t\t\t<br/><br/>\n\t\t\t\tready for the <b>big reveal</b>? the first thing you need to do is import the <b>Scanner</b> class to help you get user input. at the <b>top of your program</b>, you should have the following line of code:\n\t\t\t\t<div className=\"code\">\n\t\t\t\timport java.util.Scanner;\n\t\t\t\t</div>\n\t\t\t\tand you should have something like the following in your <b>main method</b>:\n\t\t\t\t<div className=\"code\">\n\t\t\t\t<div className=\"comment\">//create a Scanner variable</div>\n\t\t\t\t<br/>\n\t\t\t\tScanner in = new Scanner(System.in);\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"comment\">//ask the user for their password; make sure to use System.out.print so that the user can answer on the same line as the prompt; also make sure to add a space after the prompt</div>\n\t\t\t\t<br/>\n\t\t\t\tSystem.out.print(\"Password: \");\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"comment\">//store the user input in a String variable called password</div>\n\t\t\t\t<br/>\n\t\t\t\tString password = in.nextLine();\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"comment\">//use isEmpty() and ! to check if the password the user entered is not empty</div>\n\t\t\t\t<br/>\n\t\t\t\tif(!password.isEmpty()) &#123;\n\t\t\t\t<br/>\n\t\t\t\t<p>\n\t\t\t\t\t<div className=\"comment\">//insert some code here</div>\n\t\t\t\t</p>\n\t\t\t\t<br/>\n\t\t\t\t&#125;\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"comment\">//since we are done getting user input, we can close the Scanner</div>\n\t\t\t\t<br/>\n\t\t\t\tin.close();\n\t\t\t\t</div>\n\t\t\t\t<h3>&& = this and this</h3>\n\t\t\t\twhenever you see <b>&&</b>, think <b>\"only true if both this and this are true\"</b>.\n\t\t\t\t<br/><br/>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t\t<td><b>&&</b></td>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t\t<td>=</td>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t\t<td><b>&&</b></td>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t\t<td>=</td>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t\t<td><b>&&</b></td>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t\t<td>=</td>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t\t<td><b>&&</b></td>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t\t<td>=</td>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<br/>\n\t\t\t\t<b>it do be time to code.</b> make a program that creates two boolean variables: <i>isSunny</i> and <i>beachOpen</i>. if it's sunny and the beach is open, then print out a message saying \"it's a great day to go to the beach!\" (<b className=\"note\">psst. need a reminder</b> on how to print a message to the console? check out the <b className=\"pageName\">printing page</b>!)\n\t\t\t\t<br/><br/>\n\t\t\t\tready for the <b>big reveal</b>? you should have something like the following in your <b>main method</b>:\n\t\t\t\t<div className=\"code\">\n\t\t\t\t<div className=\"comment\">//create your two boolean variables and set them to whatever values you want</div>\n\t\t\t\t<br/>\n\t\t\t\tboolean isSunny = false;\n\t\t\t\t<br/>\n\t\t\t\tboolean beachOpen = true;\n\t\t\t\t<br/><br/>\n\t\t\t\t<div className=\"comment\">//check if it is sunny and if the beach is open using &&</div>\n\t\t\t\t<br/>\n\t\t\t\tif(isSunny && beachOpen) &#123;\n\t\t\t\t<br/>\n\t\t\t\t<p>\n\t\t\t\t\t<div className=\"comment\">//print a message for the user telling them to go to the beach</div>\n\t\t\t\t\t<br/>\n\t\t\t\t\tSystem.out.println(\"it's a great day to go to the beach!\");\n\t\t\t\t</p>\n\t\t\t\t<br/>\n\t\t\t\t&#125;\n\t\t\t\t</div>\n\t\t\t\tyou can set your variables to any values you like, but for my code above, <b>nothing</b> is printed out in the <b>console</b>.\n\t\t\t\t<h3>|| = this or this</h3>\n\t\t\t\twhenever you see <b>||</b>, think <b>\"only true if either this or this are true\"</b>.\n\t\t\t\t<br/><br/>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t\t<td><b>||</b></td>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t\t<td>=</td>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t\t<td><b>||</b></td>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t\t<td>=</td>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t\t<td><b>||</b></td>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t\t<td>=</td>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t\t<td><b>||</b></td>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t\t<td>=</td>\n\t\t\t\t\t\t<td>false</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<br/>\n\t\t\t\t<b>let's code!</b> make a program that checks if your favorite number is divisible by either 3 or 5 (<b className=\"note\">psst. need a reminder</b> on how you can check divisiblity using the <b>%</b> operator? check out the <b className=\"pageName\">arithmetics page</b> and the <b className=\"pageName\">if statement page</b>!)\n\t\t\t\t<br/><br/>\n\t\t\t\tready for the <b>big reveal</b>? you should have something like the following in your <b>main method</b>: \n\t\t\t\t<div className=\"code\">\n\t\t\t\t<div className=\"comment\">//create an integer variable that stores your favorite number</div>\n\t\t\t\t<br/>\n\t\t\t\tint favoriteNumber = 101;\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"comment\">//check if favoriteNumber is divisible by 3 or by 5 using % and ||</div>\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"comment\">//remember, int a is divisible by int b if the remainder when you divide a by b is equal to 0, so a % b == 0</div>\n\t\t\t\t<br/>\n\t\t\t\tif(favoriteNumber % 3 == 0 || favoriteNumber % 5 == 0) &#123;\n\t\t\t\t<br/>\n\t\t\t\t<p>\n\t\t\t\t\t<div className=\"comment\">//insert some code here</div>\n\t\t\t\t</p>\n\t\t\t\t<br/>\n\t\t\t\t&#125;\n\t\t\t\t</div>\n\t\t\t\t<h3>() = do this first</h3>\n\t\t\t\twhenever you see <b>()</b>, think <b>\"hey! do this first!\"</b>.\n\t\t\t\t<br/>\n\t\t\t\tif we combine <b>!</b>, <b>&&</b>, <b>||</b>, and <b>()</b> in a giant if statement, then there is a precedence on what happens first, just like how <b>*</b>, <b>/</b>, and <b>%</b> happen before <b>+</b> and <b>-</b>. (<b className=\"note\">psst. need a reminder</b> on the order of operations? check out the <b className=\"pageName\">arithmetics page</b>!) let's take a look at <b>logical precedence</b>:\n\t\t\t\t<ol>\n\t\t\t\t\t<li>()</li>\n\t\t\t\t\t<li>!</li>\n\t\t\t\t\t<li>&&</li>\n\t\t\t\t\t<li>||</li>\n\t\t\t\t</ol>\n\t\t\t\tjust like with arithmetic, <b>parentheses</b> are used to signify what needs to happen first. between <b>!</b>, <b>&&</b>, and <b>||</b>, you always do <b>!</b> first, then <b>&&</b>, and finally <b>||</b>. \n\t\t\t\t<ol>\n\t\t\t\t\t<li>do we have <b>()</b>? if so, then repeat each of these steps with the expression inside the <b>()</b>.</li>\n\t\t\t\t\t<li>do we have <b>!</b>? if so, then simplify each <b>!</b> expression going from left to right.</li>\n\t\t\t\t\t<li>do we have <b>&&</b>? if so, then simplify each <b>&&</b> expression going from left to right.</li>\n\t\t\t\t\t<li>do we have <b>||</b>? if so, then simplify each <b>||</b> expression going from left to right.</li>\n\t\t\t\t</ol>\n\t\t\t\tafter completing this blueprint, you should have a single boolean: <b>true</b> or <b>false</b>. to better understand this blueprint, let's take a look at some <b>examples</b>:\n\t\t\t\t<br/><br/>\n\t\t\t\t<b>true || !false && false</b>\n\t\t\t\t<ol>\n\t\t\t\t\t<li>do we have <b>()</b>? <b>no.</b></li>\n\t\t\t\t\t<li>do we have <b>!</b>? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>!false = true, so now we have <b>true || true && false</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li>do we have <b>&&</b>? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>true && false = false, so now we have <b>true || false</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li>do we have <b>||</b>? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>true || false = true, so now we have <b>true</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</ol>\n\t\t\t\tthus, true || !false && false = <b>true</b>.\n\t\t\t\t<br/><br/>\n\t\t\t\t<b>!(true && false || false)</b>\n\t\t\t\t<ol>\n\t\t\t\t\t<li>do we have <b>()</b>? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>true && false || false should be done first</li>\n\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t<li>do we have <b>()</b>? <b>no.</b></li>\n\t\t\t\t\t\t\t<li>do we have <b>!</b>? <b>no.</b></li>\n\t\t\t\t\t\t\t<li>do we have <b>&&</b>? <b>yes.</b></li>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>true && false = false, so now we have <b>false || false</b></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<li>do we have <b>||</b>? <b>yes.</b></li>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>false || false = false, so now we have <b>false</b></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t<li>so now we have <b>!false</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li>do we have <b>!</b>? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>!false = true, so now we have <b>true</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li>do we have <b>&&</b>? <b>no.</b></li>\n\t\t\t\t\t<li>do we have <b>||</b>? <b>no.</b></li>\n\t\t\t\t</ol>\n\t\t\t\tthus, !(true && false || false) = <b>true</b>.\n\t\t\t\t<br/><br/>\n\t\t\t\t<b>false && (true || true) && true</b>\n\t\t\t\t<ol>\n\t\t\t\t\t<li>do we have <b>()</b>? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>true || true should be done first</li>\n\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t<li>do we have <b>()</b>? <b>no.</b></li>\n\t\t\t\t\t\t\t<li>do we have <b>!</b>? <b>no.</b></li>\n\t\t\t\t\t\t\t<li>do we have <b>&&</b>? <b>no.</b></li>\n\t\t\t\t\t\t\t<li>do we have <b>||</b>? <b>yes.</b></li>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>true || true = true, so now we have <b>true</b></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t<li>so now we have <b>false && true</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li>do we have <b>!</b>? <b>no.</b></li>\n\t\t\t\t\t<li>do we have <b>&&</b>? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>false && true && false = false && false = false, so now we have <b>false</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li>do we have <b>||</b>? <b>no.</b></li>\n\t\t\t\t</ol>\n\t\t\t\tthus, false && (true || true) && true = <b>false</b>.\n\t\t\t\t<br/><br/>\n\t\t\t\thopefully after some examples the blueprint for solving boolean logic problems using logical precedence made sense. let's now combine everything we learned on this page for one final <b>it do be time to code</b>...\n\t\t\t\t<br/><br/>\n\t\t\t\t<b>it do be time to code</b>\n\t\t\t\t<br/>\n\t\t\t\tmake a program that checks if you can purchase the new outfit that you want. here is a list of steps you need to do to complete this program:\n\t\t\t\t<ol>\n\t\t\t\t\t<li>create two variables that store the prices of the top and bottom of your outfit</li>\n\t\t\t\t\t<li>create a variable to store the total price of the outfit</li>\n\t\t\t\t\t<li>create two variables that represent your minimum and maximum budget</li>\n\t\t\t\t\t<li>create a boolean variable that represent if the top you want is in stock</li>\n\t\t\t\t\t<li>repeat the previous step for your bottom</li>\n\t\t\t\t\t<li>create a boolean variable that represents if the top you want is available for online delivery</li>\n\t\t\t\t\t<li>repeat the previous step for your bottom</li>\n\t\t\t\t\t<li>if both the top and bottom are in stock, or if both the top and bottom are available for online delivery, and if the total price for your outfit is in your budget range, then print out a message telling the user that they can purchase their new outfit</li>\n\t\t\t\t\t<li>otherwise, print out a message telling the user that they can't purchase their new outfit</li>\n\t\t\t\t</ol>\n\t\t\t\ti know that was a lot of steps, but <b>you can do it!</b> good luck!\n\t\t\t\t<br/><br/>\n\t\t\t\tready for the <b>big reveal</b>? you should have something like the following in your <b>main method</b>: \n\t\t\t\t<div className=\"code\">\n\t\t\t\t<div className=\"comment\">//step 1</div>\n\t\t\t\t<br/>\n\t\t\t\tdouble topPrice = 9.99;\n\t\t\t\t<br/>\n\t\t\t\tdouble bottomPrice = 13.23;\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"comment\">//step 2</div>\n\t\t\t\t<br/>\n\t\t\t\tdouble outfitPrice = topPrice + bottomPrice;\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"comment\">//step 3</div>\n\t\t\t\t<br/>\n\t\t\t\tdouble minBudget = 10.00;\n\t\t\t\t<br/>\n\t\t\t\tdouble maxBudget = 24.99;\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"comment\">//steps 4 and 5</div>\n\t\t\t\t<br/>\n\t\t\t\tboolean topInStock = true;\n\t\t\t\t<br/>\n\t\t\t\tboolean bottomInStock = false;\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"comment\">//steps 6 and 7</div>\n\t\t\t\t<br/>\n\t\t\t\tboolean topAvailableForDelivery = true;\n\t\t\t\t<br/>\n\t\t\t\tboolean bottomAvailableForDelivery = true;\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"comment\">//steps 8 and 9</div>\n\t\t\t\t<br/>\n\t\t\t\tif((topInStock && bottomInStock || topAvailableForDelivery && bottomAvailableForDelivery) && (outfitPrice &gt;= minBudget && outfitPrice &lt;= maxBudget)) &#123;\n\t\t\t\t<br/>\n\t\t\t\t<p>\n\t\t\t\t\tSystem.out.println(\"You can purchase your new outfit! :)\");\n\t\t\t\t</p>\n\t\t\t\t<br/>\n\t\t\t\t&#125; else &#123;\n\t\t\t\t<br/>\n\t\t\t\t<p>\n\t\t\t\t\tSystem.out.println(\"You can't purchase your new outfit! :(\")\n\t\t\t\t</p>\n\t\t\t\t<br/>\n\t\t\t\t&#125;\n\t\t\t\t</div>\n\t\t\t\tyou can set your variables to any values you like, but for my code above, the following is printed out in the <b>console</b>:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tYou can purchase your new outfit! :)\n\t\t\t\t</div>\n\t\t\t\t<h3>!(!recap)</h3>\n\t\t\t\t<b>awesome!</b> you made it to recap!\n\t\t\t\t<br/><br/>\n\t\t\t\twe can use <b>!</b>, <b>&&</b>, <b>||</b>, and <b>()</b> to make our <b>if statements</b> more complex, allowing us to check multiple things in a single if statement. here is the <b>logical precedence</b>, meaning <b>which funky symbol you should perform first</b>:\n\t\t\t\t<br/>\n\t\t\t\t<ol>\n\t\t\t\t\t<li><b>()</b> = do this first</li>\n\t\t\t\t\t<li><b>!</b> = not this</li>\n\t\t\t\t\t<li><b>&&</b> = this and this</li>\n\t\t\t\t\t<li><b>||</b> = this or this</li>\n\t\t\t\t</ol>\n\t\t\t\tto end with, hamlet once said, <b>2B||!2B</b>, that is the question... i guess shakespeare did have a knack for coding...\n\t\t\t\t<br/><br/>\n\t\t\t\t...we know <b className=\"note\">just for java</b> is as <b>addicting</b> as the newest Netflix binge, so what are you waiting for? <b className=\"pageName\">keep coding!</b>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default BooleanLogic;"]},"metadata":{},"sourceType":"module"}