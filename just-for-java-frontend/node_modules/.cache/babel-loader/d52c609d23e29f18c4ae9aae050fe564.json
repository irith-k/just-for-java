{"ast":null,"code":"import _classCallCheck from\"/Users/irithkatiyar/Desktop/just-for-java-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/irithkatiyar/Desktop/just-for-java-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/irithkatiyar/Desktop/just-for-java-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/irithkatiyar/Desktop/just-for-java-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import withFirebaseAuth from'react-with-firebase-auth';import*as firebase from'firebase/app';import'firebase/auth';import firebaseConfig from'./firebaseConfig';import React from'react';import'./App.css';import SideButton from'./components/SideButton';import axios from'axios';import Content from'./components/Content';import Home from'./components/Home';import About from'./components/About';import ContactUs from'./components/ContactUs';import Variables from'./components/Variables';import Printing from'./components/Printing';import UserInput from'./components/UserInput';import IfStatement from'./components/IfStatement';import BooleanLogic from'./components/BooleanLogic';import ForLoop from'./components/ForLoop';import WhileLoop from'./components/WhileLoop';import Comments from'./components/Comments';import Functions from'./components/Functions';import RandomNumbers from'./components/RandomNumbers';import ASCII from'./components/ASCII';import Break from'./components/Break';import Strings from'./components/Strings';import Mathematics from'./components/Mathematics';import ArrayList from'./components/ArrayList';import HashMap from'./components/HashMap';import Arrays from'./components/Array';import Arithmetic from'./components/Arithmetic';import Nesting from'./components/Nesting';import GettingStarted from'./components/GettingStarted';import TwoDimArrays from'./components/TwoDimArrays';import Casting from'./components/Casting';import Constants from'./components/Constants';import Overloading from'./components/Overloading';import ForEachLoop from'./components/ForEachLoop';/*\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation,\n  Link,\n  withRouter\n} from \"react-router-dom\";\n*/var firebaseApp=firebase.initializeApp(firebaseConfig);var firebaseAppAuth=firebaseApp.auth();var providers={googleProvider:new firebase.auth.GoogleAuthProvider()};var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);var sideButtonText=[\"home\",\"about\",\"contact us\",\"getting started\",\"variables\",\"comments\",\"printing\",\"arithmetic\",\"strings\",\"escape sequences\",\"user input\",\"math\",\"if statement\",\"boolean logic\",\"constants\",\"for loop\",\"while loop\",\"nesting\",\"break\",\"functions\",\"overloading\",\"array\",\"for-each loop\",\"arraylist\",\"2d array\"/*, \"hashmap\", \"casting\", \"random-numbers\", \"ascii\"*/];/*var sideButtonText = [\"home\", \"about\", \"contact-us\", \"getting-started\", \"variables\", \"comments\", \"printing\", \"arithmetic\", \"strings\", \"escape-sequences\", \"user-input\", \"math\", \"if-statement\", \"boolean-logic\", \"constants\", \"for-loop\", \"while-loop\", \"nesting\", \"break\", \"functions\", \"overloading\", \"array\", \"for-each-loop\", \"arraylist\", \"2d-array\", \"hashmap\", \"casting\", \"random-numbers\", \"ascii\"];*/var selectedSideButton=\"home\";_this.state={sideButtonText:sideButtonText,selectedSideButton:selectedSideButton};return _this;}_createClass(App,[{key:\"click\",value:function click(text){var selectedSideButton=text;this.setState({selectedSideButton:selectedSideButton});}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,user=_this$props.user,signOut=_this$props.signOut,signInWithGoogle=_this$props.signInWithGoogle;return/*#__PURE__*/ (/*<Router>*/React.createElement(\"div\",{className:\"full\"},/*#__PURE__*/React.createElement(\"div\",{className:\"title\"},/*#__PURE__*/React.createElement(\"h1\",null,\"just for java\"),user?/*#__PURE__*/React.createElement(\"button\",{className:\"login\",onClick:signOut},\"sign out of account\"):/*#__PURE__*/React.createElement(\"button\",{className:\"login\",onClick:signInWithGoogle},\"sign in with google\")),/*#__PURE__*/React.createElement(\"div\",{className:\"bottom\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar\"},this.state.sideButtonText.map(function(text,i){return/*#__PURE__*/React.createElement(\"div\",{key:i},/*#__PURE__*/React.createElement(SideButton/*currentPathname={window.location.pathname} myPathname={text}*/,{text:text,click:function click(){return _this2.click(text);},isSelected:_this2.state.selectedSideButton===text}));})),/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},/*#__PURE__*/React.createElement(Content,{page:this.state.selectedSideButton,user:user}))))/*</Router>*/);}}]);return App;}(React.Component);export default withFirebaseAuth({providers:providers,firebaseAppAuth:firebaseAppAuth})(App);","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/App.js"],"names":["withFirebaseAuth","firebase","firebaseConfig","React","SideButton","axios","Content","Home","About","ContactUs","Variables","Printing","UserInput","IfStatement","BooleanLogic","ForLoop","WhileLoop","Comments","Functions","RandomNumbers","ASCII","Break","Strings","Mathematics","ArrayList","HashMap","Arrays","Arithmetic","Nesting","GettingStarted","TwoDimArrays","Casting","Constants","Overloading","ForEachLoop","firebaseApp","initializeApp","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider","App","props","sideButtonText","selectedSideButton","state","text","setState","user","signOut","signInWithGoogle","map","i","click","Component"],"mappings":"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","sourcesContent":["import withFirebaseAuth from 'react-with-firebase-auth'\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseConfig from './firebaseConfig';\nimport React from 'react';\nimport './App.css';\nimport SideButton from './components/SideButton';\nimport axios from 'axios';\nimport Content from './components/Content';\nimport Home from './components/Home';\nimport About from './components/About';\nimport ContactUs from './components/ContactUs';\nimport Variables from './components/Variables';\nimport Printing from './components/Printing';\nimport UserInput from './components/UserInput';\nimport IfStatement from './components/IfStatement';\nimport BooleanLogic from './components/BooleanLogic';\nimport ForLoop from './components/ForLoop';\nimport WhileLoop from './components/WhileLoop';\nimport Comments from './components/Comments';\nimport Functions from './components/Functions';\nimport RandomNumbers from './components/RandomNumbers';\nimport ASCII from './components/ASCII';\nimport Break from './components/Break';\nimport Strings from './components/Strings';\nimport Mathematics from './components/Mathematics';\nimport ArrayList from './components/ArrayList';\nimport HashMap from './components/HashMap';\nimport Arrays from './components/Array';\nimport Arithmetic from './components/Arithmetic';\nimport Nesting from './components/Nesting';\nimport GettingStarted from './components/GettingStarted';\nimport TwoDimArrays from './components/TwoDimArrays';\nimport Casting from './components/Casting';\nimport Constants from './components/Constants';\nimport Overloading from './components/Overloading';\nimport ForEachLoop from './components/ForEachLoop';\n/*\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation,\n  Link,\n  withRouter\n} from \"react-router-dom\";\n*/\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseAppAuth = firebaseApp.auth();\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nclass App extends React.Component{\n\n  constructor(props) {\n    super(props);\n    var sideButtonText = [\"home\", \"about\", \"contact us\", \"getting started\", \"variables\", \"comments\", \"printing\", \"arithmetic\", \"strings\", \"escape sequences\", \"user input\", \"math\", \"if statement\", \"boolean logic\", \"constants\", \"for loop\", \"while loop\", \"nesting\", \"break\", \"functions\", \"overloading\", \"array\", \"for-each loop\", \"arraylist\", \"2d array\"/*, \"hashmap\", \"casting\", \"random-numbers\", \"ascii\"*/];\n    /*var sideButtonText = [\"home\", \"about\", \"contact-us\", \"getting-started\", \"variables\", \"comments\", \"printing\", \"arithmetic\", \"strings\", \"escape-sequences\", \"user-input\", \"math\", \"if-statement\", \"boolean-logic\", \"constants\", \"for-loop\", \"while-loop\", \"nesting\", \"break\", \"functions\", \"overloading\", \"array\", \"for-each-loop\", \"arraylist\", \"2d-array\", \"hashmap\", \"casting\", \"random-numbers\", \"ascii\"];*/\n    var selectedSideButton = \"home\";\n    \n    this.state={\n      sideButtonText: sideButtonText,\n      selectedSideButton: selectedSideButton\n    }\n  }\n\n  click(text) {\n    var selectedSideButton = text;\n    this.setState({\n      selectedSideButton: selectedSideButton\n    })\n  }\n\n  render() {\n    const {\n      user,\n      signOut,\n      signInWithGoogle,\n    } = this.props;\n    return (\n      /*<Router>*/\n        <div className=\"full\">\n          <div className = \"title\">\n            <h1>\n              just for java\n            </h1>\n            {\n                user\n                  ? <button className=\"login\" onClick={signOut}>sign out of account</button>\n                  : <button className=\"login\" onClick={signInWithGoogle}>sign in with google</button>\n              }\n\n          </div>\n          <div className = \"bottom\">\n            <div className = \"sidebar\">\n              {this.state.sideButtonText.map((text, i) =>\n                <div key={i}>\n                  <SideButton /*currentPathname={window.location.pathname} myPathname={text}*/ text={text} click={()=>this.click(text)} isSelected={this.state.selectedSideButton === text} />\n                </div>\n              )}\n            </div>\n            <div className = \"content\"> \n              <Content \n                page={this.state.selectedSideButton}\n                user={user}\n              />\n              {/*\n              <h2>{this.state.selectedSideButton}:</h2>\n              <br/>\n              <Switch>\n                <Route exact path=\"/\">  \n                  <Home user={user}/>\n                </Route>\n                \n                <Route path=\"/home\">\n                  <Home user={user}/>\n                </Route>\n\n                <Route path=\"/constants\">\n                  <Constants user={user}/>\n                </Route>\n\n                <Route path=\"/about\">\n                  <About user={user}/>\n                </Route>\n\n                <Route path=\"/contact-us\">\n                  <ContactUs user={user}/>\n                </Route>\n\n                <Route path=\"/variables\">\n                  <Variables user={user}/>\n                </Route>\n\n                <Route path=\"/printing\">\n                  <Printing user={user}/>\n                </Route>\n\n                <Route path=\"/user-input\">\n                  <UserInput user={user}/>\n                </Route>\n\n                <Route path=\"/if-statement\">\n                  <IfStatement user={user}/>\n                </Route>\n\n                <Route path=\"/boolean-logic\">\n                  <BooleanLogic user={user}/>\n                </Route>\n\n                <Route path=\"/for-loop\">\n                  <ForLoop user={user}/>\n                </Route>\n\n                <Route path=\"/while-loop\">\n                  <WhileLoop user={user}/>\n                </Route>\n\n                <Route path=\"/comments\">\n                  <Comments user={user}/>\n                </Route>\n\n                <Route path=\"/functions\">\n                  <Functions user={user}/>\n                </Route>\n\n                <Route path=\"/for-each-loop\">\n                  <ForEachLoop user={user}/>\n                </Route>\n\n                <Route path=\"/random-numbers\">\n                  <RandomNumbers user={user}/>\n                </Route>\n\n                <Route path=\"/ascii\">\n                  <ASCII user={user}/>\n                </Route>\n\n                <Route path=\"/hashmap\">\n                  <HashMap user={user}/>\n                </Route>\n\n                <Route path=\"/array\">\n                  <Arrays user={user}/>\n                </Route>\n\n                <Route path=\"/math\">\n                  <Mathematics user={user}/>\n                </Route>\n\n                <Route path=\"/strings\">\n                  <Strings user={user}/>\n                </Route>\n\n                <Route path=\"/arraylist\">\n                  <ArrayList user={user}/>\n                </Route>\n\n                <Route path=\"/arithmetic\">\n                  <Arithmetic user={user}/>\n                </Route>\n\n                <Route path=\"/break\">\n                  <Break user={user}/>\n                </Route>\n\n                <Route path=\"/getting-started\">\n                  <GettingStarted user={user}/>\n                </Route>\n\n                <Route path=\"/nesting\">\n                  <Nesting user={user}/>\n                </Route>\n\n                <Route path=\"/2d-array\">\n                  <TwoDimArrays user={user}/>\n                </Route>\n\n                <Route path=\"/casting\">\n                  <Casting user={user}/>\n                </Route>\n\n                <Route path=\"/overloading\">\n                  <Overloading user={user}/>\n                </Route>\n              </Switch>\n              */}\n            </div>\n          </div>\n        </div>\n      /*</Router>*/\n    );\n  }\n\n}\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(App);"]},"metadata":{},"sourceType":"module"}