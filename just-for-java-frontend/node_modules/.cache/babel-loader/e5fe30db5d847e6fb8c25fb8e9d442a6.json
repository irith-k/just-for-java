{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Variables.js\";\nimport React from 'react';\n\nclass Variables extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }\n    }, \"variables are used to store information.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 10\n      }\n    }), \"to create a variable, type: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }\n    }, \" <type> <name> = <value>\"))), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 75\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }), \"there are multiple types of things that variables can store:\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 6\n      }\n    }, \"integer\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 6\n      }\n    }, \"double\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 6\n      }\n    }, \"string\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 6\n      }\n    }, \"character\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }\n    }, \"boolean\")), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, \"integers\"), \" stores any whole number, such as 1, 2, 3, etc. to make an integer variable, you need to write \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 115\n      }\n    }, \"int\"), \" as the type. below is an example of an integer variable with the name \\\"number\\\" being used to store the value 5.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 103\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }, \"int number = 5;\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, \"doubles\"), \" store any number with decimal, such as 0.1 or 123.5. to make a double variable, you need to write \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 118\n      }\n    }, \" double\"), \" as they type. below is an example of a double variable with the name \\\"number\\\" being used to store the value 3.5.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 103\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, \"double number = 3.5;\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, \"strings\"), \" store text, and is denoted using double quotation marks. to make a string variable, you need to write \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 122\n      }\n    }, \"String\"), \" as the type. below is an example of a string variable with the name \\\"word\\\" being used to store the value\\\"hello world\\\".\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 110\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, \"String word = \\\"hello world\\\"; \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 35\n      }\n    }, \"//note that the value is surrounded by double quotation marks\")), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, \"characters\"), \" store a single letter, digit, or symbol, and is denoted using single quotation marks. to make a character variable, you need to write \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 157\n      }\n    }, \"char\"), \" as the type. below is an example of a character variable with the name \\\"letter\\\" being used to store the value 'a'.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 106\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, \"char letter = 'a'; \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, \"//note that the value is surrounded by single quotation marks\")), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, \"booleans\"), \" store either a value of true or false. to make a boolean variable, you need to write \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 106\n      }\n    }, \" boolean\"), \" as the type. below is an example of a boolean variable with the name \\\"isFun\\\" being used to store the value true.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 104\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, \"boolean isFun = true;\"));\n  }\n\n}\n\nexport default Variables;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Variables.js"],"names":["React","Variables","Component","constructor","props","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAuC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA;;AAGDC,EAAAA,MAAM,GAAE;AACP,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,+CAG6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH7B,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAN,CAAH,CAJD,oBAIuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJvE,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALD,+EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJD,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALD,CAPD,eAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdD,kHAc+G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAd/G,qIAemG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfnG,eAgBC;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAhBD,eAmBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAnBD,sHAmBkH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAnBlH,sIAoBmG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBnG,eAqBC;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BArBD,eAwBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAxBD,0HAwBsH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBtH,8IAyB0G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzB1G,eA0BC;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAC8B;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAD9B,CA1BD,eA6BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7BD,0JA6ByJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BzJ,wIA8BsG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BtG,eA+BC;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACoB;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEADpB,CA/BD,eAkCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlCD,yGAkCsG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlCtG,sIAmCoG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCpG,eAoCC;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BApCD,CADD;AA0CA;;AAjDqC;;AAoDvC,eAAeJ,SAAf","sourcesContent":["import React from 'react';\n\nclass Variables extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tvariables are used to store information. \n\t\t\t\t<br/><br/>\n\t\t\t\tto create a variable, type: <br/>\n\t\t\t\t<b><code><i> &lt;type&gt; &lt;name&gt; = &lt;value&gt;</i></code></b> <br/>\n\t\t\t\t<br/>\n\t\t\t\tthere are multiple types of things that variables can store:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>integer</li>\n\t\t\t\t\t<li>double</li>\n\t\t\t\t\t<li>string</li>\n\t\t\t\t\t<li>character</li>\n\t\t\t\t\t<li>boolean</li>\n\t\t\t\t</ul>\n\t\t\t\t<b>integers</b> stores any whole number, such as 1, 2, 3, etc. to make an integer variable, you need to write <b>int</b> as the type. \n\t\t\t\tbelow is an example of an integer variable with the name \"number\" being used to store the value 5.<br/>\n\t\t\t\t<div className = \"code\">\n\t\t\t\t\tint number = 5;\n\t\t\t\t</div> \n\t\t\t\t<b>doubles</b> store any number with decimal, such as 0.1 or 123.5. to make a double variable, you need to write <b> double</b> as they type.\n\t\t\t\tbelow is an example of a double variable with the name \"number\" being used to store the value 3.5.<br/>\n\t\t\t\t<div className = \"code\">\n\t\t\t\t\tdouble number = 3.5;\n\t\t\t\t</div>\n\t\t\t\t<b>strings</b> store text, and is denoted using double quotation marks. to make a string variable, you need to write <b>String</b> as the type.\n\t\t\t\tbelow is an example of a string variable with the name \"word\" being used to store the value\"hello world\".<br/>\n\t\t\t\t<div className = \"code\">\n\t\t\t\t\tString word = \"hello world\"; <div className = \"comment\">//note that the value is surrounded by double quotation marks</div>\n\t\t\t\t</div>\n\t\t\t\t<b>characters</b> store a single letter, digit, or symbol, and is denoted using single quotation marks. to make a character variable, you need to write <b>char</b> as the type.\n\t\t\t\tbelow is an example of a character variable with the name \"letter\" being used to store the value 'a'.<br/>\n\t\t\t\t<div className = \"code\">\n\t\t\t\t\tchar letter = 'a'; <div className = \"comment\">//note that the value is surrounded by single quotation marks</div>\n\t\t\t\t</div>\n\t\t\t\t<b>booleans</b> store either a value of true or false. to make a boolean variable, you need to write <b> boolean</b> as the type.\n\t\t\t\tbelow is an example of a boolean variable with the name \"isFun\" being used to store the value true.<br/>\n\t\t\t\t<div className = \"code\">\n\t\t\t\t\tboolean isFun = true;\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Variables;"]},"metadata":{},"sourceType":"module"}