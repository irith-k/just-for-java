{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/ForEachLoop.js\";\nimport React from 'react';\nimport ProgressUpdater from './ProgressUpdater';\nimport Hint from './Hint';\n\nclass ForEachLoop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: \"todo\"\n    };\n  }\n\n  updateProgressState(progress) {\n    this.setState({\n      progress: progress\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ProgressUpdater, {\n      page: this.props.page,\n      user: this.props.user,\n      progress: this.state.progress,\n      update: progress => this.updateProgressState(progress),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }), \"remember when we talked about \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 44\n      }\n    }, \"good ol' for loops\"), \"? (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 72\n      }\n    }, \"psst. need a reminder\"), \" on what these good ol' for loops are? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 170\n      }\n    }, \"for loop page\"), \"!) well there's actually another type of for loop that we haven't talked about yet. (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 296\n      }\n    }, \"btw:\"), \" sry for hiding secrets from you... do you forgive us?) it's called a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 394\n      }\n    }, \"for-each loop\"), \"!\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }\n    }, \"a for-each loop? ngl that sounds kinda lame\"), \"well it isn't.\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }\n    }, \"System.out.print(\\\"haters. back. off.\\\");\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }\n    }, \"only positive vibes allowed beyond this point\"), \"for-each loops are used to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 41\n      }\n    }, \"iterate through arrays and other collections that we will talk about later\"), \". (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 125\n      }\n    }, \"psst. need a reminder\"), \" on what an array is? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 206\n      }\n    }, \"array page\"), \"!) burning to know how to make one yourself? here is the blueprint for constructing a for-each loop:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }\n    }, \"for(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }\n    }, \"<type>\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 38\n      }\n    }, \"<item>\"), \" : \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 60\n      }\n    }, \"<array>\"), \"){\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"*code*\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }\n    }), \"}\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }\n    }), \"let's walk through each of these components\\xA0\\u2013 but in a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 69\n      }\n    }, \"backwards order\"), \" because that makes it the easiest to understand:\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, \"array\"), \" \\u2013 the array or collection you want to iterate through\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, \"item\"), \" \\u2013 each value in the array or collection is stored in this variable each iteration\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, \"type\"), \" \\u2013 the type of the values in the array or collection\")), \"here's a common example of the use of a for-each loop: \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 69\n      }\n    }, \"print the elements of an array\"), \". let's say the array we want to print out is the \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 156\n      }\n    }, \"rainbow\"), \" array:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }\n    }, \"//ooh! it's a rainbow\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 66\n      }\n    }), \"String[] rainbow = {\\\"red\\\", \\\"orange\\\", \\\"yellow\\\", \\\"green\\\", \\\"blue\\\", \\\"indigo\\\", \\\"violet\\\"};\"), \"what should our for-each loop look like? (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 56\n      }\n    }, \"hint:\"), \" what would each of the components be?) let's walk through what each of the components should be:\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, \"array\"), \" \\u2013 the array we want to iterate through is \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 74\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 77\n      }\n    }, \"rainbow\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, \"item\"), \" \\u2013 we can call this variable whatever we want; we can call it \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 92\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 95\n      }\n    }, \"color\")), \", since it stores each value in our array\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, \"type\"), \" \\u2013 our array holds String values, so the type is \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 79\n      }\n    }, \"String\"))), \"inside our loop, we can simply \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 45\n      }\n    }, \"print out \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 58\n      }\n    }, \"color\")), \". check out the code below with our completed for-each loop:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }\n    }, \"//loop through each String color in rainbow\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }\n    }), \"for(String color : rainbow) {\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }\n    }, \"//print out color\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }), \"System.out.println(color);\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }\n    }), \"}\"), \"can you guess what shows up in the console? (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 59\n      }\n    }, \"hint:\"), \" what is \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 97\n      }\n    }, \"color\"), \" storing? an index or the actual value?) take a look at the console below, which \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 190\n      }\n    }, \"displays each value in our \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 220\n      }\n    }, \"rainbow\"), \" array\"), \":\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 14\n      }\n    }, \"red\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), \"orange\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 20\n      }\n    }), \"yellow\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }\n    }), \"green\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }), \"blue\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 18\n      }\n    }), \"indigo\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }\n    }), \"violet\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }\n    }, \"woah! printing arrays are so much easier with a for-each loop!\"), \"ikr?! here is the function we coded on the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 57\n      }\n    }, \"arrays page\"), \" that \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 102\n      }\n    }, \"prints out an array using a standard for loop\"), \":\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 14\n      }\n    }, \"//this function prints a char array using a for loop\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 14\n      }\n    }), \"public static void printArray1(char[] arr) {\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, \"//loop through the indexes in arr\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }), \"for(int i = 0; i < arr.length; i++) {\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"indent1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 16\n      }\n    }, \"//print out the element at index i in arr\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 16\n      }\n    }), \"System.out.println(arr[i]);\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }), \"}\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 14\n      }\n    }), \"}\"), \"and here is the function that \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 44\n      }\n    }, \"prints out an array using a for-each loop\"), \" (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 94\n      }\n    }, \"btw:\"), \" the parameter and return type for both functions are the same):\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 14\n      }\n    }, \"//this function prints a char array using a for-each loop\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 14\n      }\n    }), \"public static void printArray2(char[] arr) {\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"//loop through each char c in arr\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }), \"for(char c : arr) {\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"indent1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 16\n      }\n    }, \"//print out c\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 16\n      }\n    }), \"System.out.println(c);\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }), \"}\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 14\n      }\n    }), \"}\"), \"the function using a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 35\n      }\n    }, \"for-each loop\"), \" is much more \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 69\n      }\n    }, \"concise\"), \" than the function using a standard \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 119\n      }\n    }, \"for loop\"), \". let's test both of these functions in our main method and see if they yield the same result:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 14\n      }\n    }, \"public static void main(String[] args) {\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, \"//we made our char array spell out unicorn cause unicorns do be radiating positive vibes\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }), \"char[] unicorn = {'u', 'n', 'i', 'c', 'o', 'r', 'n'};\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }), \"printArray1(unicorn); \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }, \"//prints unicorn array using for loop\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }), \"System.out.println(); \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    }, \"//this print statement simply enters for white space\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }), \"printArray2(unicorn); \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }, \"//prints unicorn array using for-each loop\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 14\n      }\n    }), \"}\"), \"can you guess what prints in the console? (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 57\n      }\n    }, \"hint:\"), \" if you're unsure, review what the functions printArray1 and printArray2 do.) check out the console below:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 14\n      }\n    }, \"u\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }), \"n\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }), \"i\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 27\n      }\n    }), \"c\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }), \"o\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 39\n      }\n    }), \"r\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 45\n      }\n    }), \"n\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 56\n      }\n    }), \"u\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 62\n      }\n    }), \"n\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 68\n      }\n    }), \"i\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 74\n      }\n    }), \"c\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 80\n      }\n    }), \"o\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 86\n      }\n    }), \"r\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 92\n      }\n    }), \"n\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 14\n      }\n    }, \"why do you even need for loops anyway when you have for-each loops?\"), \"though for-each loops are great if your program just needs the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 77\n      }\n    }, \"values of each element in the array\"), \", such as for tasks like printing an array, they do have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 176\n      }\n    }, \"three limitations\"), \" that you should be aware of:\", /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, \"for-each loops \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 34\n      }\n    }, \"don't keep track of the index\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 16\n      }\n    }, \"if you need to use the index in your program, use a for loop\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, \"for-each loops \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 34\n      }\n    }, \"can't be used to modify an array\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 16\n      }\n    }, \"on the other hand, for loops can be used to modiify an array\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, \"for-each loops only loop in \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 47\n      }\n    }, \"one fixed way\"), \": through every value in the whole array from start to end\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 16\n      }\n    }, \"for loops however provide flexibility so that you can loop backwards, through only a part of the array, or through every other element\"))), \"however, if none of these conditions apply to the program that you want to make, using a for-each loop can make your code more \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 141\n      }\n    }, \"concise\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 160\n      }\n    }, \"readable\"), \". let's look through a couple \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 205\n      }\n    }, \"scenarios\"), \" to practice when we should implement a for loop versus a for-each loop. (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 295\n      }\n    }, \"btw:\"), \" just to go with that \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 345\n      }\n    }, \"rainbow unicorn positivity theme\"), \" we got going here, we'll use the \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 418\n      }\n    }, \"rainbow\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 437\n      }\n    }, \"unicorn\"), \" arrays we created above.)\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 14\n      }\n    }, \"roygbiv\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 14\n      }\n    }, \"uni & corn\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 5\n      }\n    }, \"backwards rainbow\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }\n    }, \"you're getting the hang of this!\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 5\n      }\n    }, \"recap\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 5\n      }\n    }, \"you got this!\"), \" you made it to recap!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 10\n      }\n    }), \"here is the blueprint for constructing a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 46\n      }\n    }, \"for-each loop\"), \", a type of for loop used to iterate through collections such as arrays:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 14\n      }\n    }, \"for(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 18\n      }\n    }, \"<type>\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 38\n      }\n    }, \"<item>\"), \" : \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 60\n      }\n    }, \"<array>\"), \"){\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, \"*code*\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 14\n      }\n    }), \"}\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 14\n      }\n    }), \"need a refresher on what each of these components mean? we gotchu:\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, \"array\"), \" \\u2013 the array or collection you want to iterate through\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }, \"item\"), \" \\u2013 each value in the array or collection is stored in this variable each iteration\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, \"type\"), \" \\u2013 the type of the values in the array or collection\")), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 14\n      }\n    }, \"for-each loops are great\"), \" if your program just needs the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 77\n      }\n    }, \"values\"), \" of each element in the array. however, if you need to access the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 156\n      }\n    }, \"indexes\"), \" of the array, or if you need to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 203\n      }\n    }, \"modify the array\"), \", or if you want to iterate through the array in a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 277\n      }\n    }, \"specific order or fashion\"), \", then you should use your \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 336\n      }\n    }, \"standard for loop\"), \".\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 14\n      }\n    }, \"pit stop\"), \"double trouble \\u2013\\xA0double each double in a double array in the main method \\u2013 for loop or for-each loop?\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 14\n      }\n    }), \"opposite \\u2013 create a function that returns a new array with all the booleans flipped (!)\", /*#__PURE__*/React.createElement(ProgressUpdater, {\n      page: this.props.page,\n      user: this.props.user,\n      progress: this.state.progress,\n      update: progress => this.updateProgressState(progress),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 14\n      }\n    }), \"...we know \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, \"just for java\"), \" is as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 69\n      }\n    }, \"addicting\"), \" as the newest Netflix binge, so what are you waiting for? \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 144\n      }\n    }, \"keep coding!\"));\n  }\n\n}\n\nexport default ForEachLoop;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/ForEachLoop.js"],"names":["React","ProgressUpdater","Hint","ForEachLoop","Component","constructor","props","state","progress","updateProgressState","setState","render","page","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProgressUpdater from './ProgressUpdater';\nimport Hint from './Hint';\n\nclass ForEachLoop extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state={\n\t\t\tprogress: \"todo\"\n\t\t}\n\t}\n\n\tupdateProgressState(progress){\n\t\tthis.setState({\n\t\t\tprogress: progress\n\t\t});\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ProgressUpdater\n\t              page={this.props.page} \n\t              user={this.props.user}\n\t              progress={this.state.progress}\n\t              update={(progress)=>this.updateProgressState(progress)}\n\t            />\n\t            remember when we talked about <b>good ol' for loops</b>? (<b className=\"note\">psst. need a reminder</b> on what these good ol' for loops are? check out the <b className=\"pageName\">for loop page</b>!) well there's actually another type of for loop that we haven't talked about yet. (<b className=\"note\">btw:</b> sry for hiding secrets from you... do you forgive us?) it's called a <b>for-each loop</b>!\n\t            <h3>a for-each loop? ngl that sounds kinda lame</h3>\n\t            well it isn't.\n\t            <div className=\"code\">\n\t            System.out.print(\"haters. back. off.\");\n\t            </div>\n\t            <h3>only positive vibes allowed beyond this point</h3>\n\t            for-each loops are used to <b>iterate through arrays and other collections that we will talk about later</b>. (<b className=\"note\">psst. need a reminder</b> on what an array is? check out the <b className=\"pageName\">array page</b>!) burning to know how to make one yourself? here is the blueprint for constructing a for-each loop:\n\t            <br/>\n\t            <b>\n\t            for(<i>&lt;type&gt;</i> <i>&lt;item&gt;</i> : <i>&lt;array&gt;</i>)&#123;\n\t            <br/>\n\t        \t<p>\n\t        \t\t*code*\n\t        \t</p>\n\t            <br/>\n\t            &#125;\n\t            </b>\n\t            <br/>\n\t            <br/>\n\t            let's walk through each of these components – but in a <b>backwards order</b> because that makes it the easiest to understand:\n\t            <ul>\n\t            \t<li><b>array</b> – the array or collection you want to iterate through</li>\n\t            \t<li><b>item</b> – each value in the array or collection is stored in this variable each iteration</li>\n\t            \t<li><b>type</b> – the type of the values in the array or collection</li>\n\t            </ul>\n\t            here's a common example of the use of a for-each loop: <b>print the elements of an array</b>. let's say the array we want to print out is the <i>rainbow</i> array:\n\t            <div className=\"code\">\n\t            <div className=\"comment\">//ooh! it's a rainbow</div><br/>\n\t            String[] rainbow = &#123;\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"&#125;;\n\t            </div>\n\t            what should our for-each loop look like? (<b className=\"note\">hint:</b> what would each of the components be?) let's walk through what each of the components should be:\n\t            <ul>\n\t            \t<li><b>array</b> – the array we want to iterate through is <b><i>rainbow</i></b></li>\n\t            \t<li><b>item</b> – we can call this variable whatever we want; we can call it <b><i>color</i></b>, since it stores each value in our array</li>\n\t            \t<li><b>type</b> – our array holds String values, so the type is <b>String</b></li>\n\t            </ul>\n\t            inside our loop, we can simply <b>print out <i>color</i></b>. check out the code below with our completed for-each loop:\n\t            <div className=\"code\">\n\t            <div className=\"comment\">//loop through each String color in rainbow</div>\n\t            <br/>\n\t            for(String color : rainbow) &#123;\n\t\t\t\t<br/>\n\t\t\t\t<p>\n\t\t\t\t\t<div className=\"comment\">//print out color</div>\n\t            \t<br/>\n\t\t\t\t\tSystem.out.println(color);\n\t\t\t\t</p>\n\t\t\t\t<br/>\n\t\t\t\t&#125;\n\t            </div>\n\t            can you guess what shows up in the console? (<b className=\"note\">hint:</b> what is <i>color</i> storing? an index or the actual value?) take a look at the console below, which <b>displays each value in our <i>rainbow</i> array</b>:\n\t            <div className=\"code\">\n\t            red<br/>\n\t            orange<br/>\n\t            yellow<br/>\n\t            green<br/>\n\t            blue<br/>\n\t            indigo<br/>\n\t            violet\n\t            </div>\n\t            <h3>woah! printing arrays are so much easier with a for-each loop!</h3>\n\t            ikr?! here is the function we coded on the <b className=\"pageName\">arrays page</b> that <b>prints out an array using a standard for loop</b>:\n\t            <div className=\"code\">\n\t            <div className=\"comment\">//this function prints a char array using a for loop</div>\n\t            <br/>\n\t            public static void printArray1(char[] arr) &#123;\n\t            <br/>\n\t            <p>\n\t            \t<div className=\"comment\">//loop through the indexes in arr</div>\n\t            \t<br/>\n\t            \tfor(int i = 0; i &lt; arr.length; i++) &#123;\n\t            \t<br/>\n\t            \t<p className=\"indent1\">\n\t            \t\t<div className=\"comment\">//print out the element at index i in arr</div>\n\t            \t\t<br/>\n\t            \t\tSystem.out.println(arr[i]);\n\t            \t</p>\n\t            \t<br/>\n\t            \t&#125;\n\t            </p>\n\t            <br/>\n\t            &#125;\n\t            </div>\n\t            and here is the function that <b>prints out an array using a for-each loop</b> (<b className=\"note\">btw:</b> the parameter and return type for both functions are the same):\n\t            <div className=\"code\">\n\t            <div className=\"comment\">//this function prints a char array using a for-each loop</div>\n\t            <br/>\n\t            public static void printArray2(char[] arr) &#123;\n\t            <br/>\n\t            <p>\n\t            \t<div className=\"comment\">//loop through each char c in arr</div>\n\t            \t<br/>\n\t            \tfor(char c : arr) &#123;\n\t            \t<br/>\n\t            \t<p className=\"indent1\">\n\t            \t\t<div className=\"comment\">//print out c</div>\n\t            \t\t<br/>\n\t            \t\tSystem.out.println(c);\n\t            \t</p>\n\t            \t<br/>\n\t            \t&#125;\n\t            </p>\n\t            <br/>\n\t            &#125;\n\t            </div>\n\t            the function using a <b>for-each loop</b> is much more <b>concise</b> than the function using a standard <b>for loop</b>. let's test both of these functions in our main method and see if they yield the same result:\n\t            <div className=\"code\">\n\t            public static void main(String[] args) &#123;\n\t            <br/>\n\t            <p>\n\t            \t<div className=\"comment\">//we made our char array spell out unicorn cause unicorns do be radiating positive vibes</div>\n\t            \t<br/>\n\t            \tchar[] unicorn = &#123;'u', 'n', 'i', 'c', 'o', 'r', 'n'&#125;;\n\t            \t<br/>\n\t            \tprintArray1(unicorn); <div className=\"comment\">//prints unicorn array using for loop</div>\n\t            \t<br/>\n\t            \tSystem.out.println(); <div className=\"comment\">//this print statement simply enters for white space</div>\n\t            \t<br/>\n\t            \tprintArray2(unicorn); <div className=\"comment\">//prints unicorn array using for-each loop</div>\n\t            </p>\n\t            <br/>\n\t            &#125;\n\t            </div>\n\t            can you guess what prints in the console? (<b className=\"note\">hint:</b> if you're unsure, review what the functions printArray1 and printArray2 do.) check out the console below:\n\t            <div className=\"code\">\n\t            u<br/>n<br/>i<br/>c<br/>o<br/>r<br/>n<br/><br/>u<br/>n<br/>i<br/>c<br/>o<br/>r<br/>n\n\t            </div>\n\t            <h3>why do you even need for loops anyway when you have for-each loops?</h3>\n\t            though for-each loops are great if your program just needs the <b>values of each element in the array</b>, such as for tasks like printing an array, they do have <b>three limitations</b> that you should be aware of:\n\t            <ol>\n\t            \t<li>for-each loops <b>don't keep track of the index</b></li>\n\t            \t<ul>\n\t            \t\t<li>if you need to use the index in your program, use a for loop</li>\n\t            \t</ul>\n\t            \t<li>for-each loops <b>can't be used to modify an array</b></li>\n\t            \t<ul>\n\t            \t\t<li>on the other hand, for loops can be used to modiify an array</li>\n\t            \t</ul>\n\t            \t<li>for-each loops only loop in <b>one fixed way</b>: through every value in the whole array from start to end</li>\n\t            \t<ul>\n\t            \t\t<li>for loops however provide flexibility so that you can loop backwards, through only a part of the array, or through every other element</li>\n\t            \t</ul>\n\t            </ol>\n\t            however, if none of these conditions apply to the program that you want to make, using a for-each loop can make your code more <b>concise</b> and <b>readable</b>. let's look through a couple <b>scenarios</b> to practice when we should implement a for loop versus a for-each loop. (<b className=\"note\">btw:</b> just to go with that <b>rainbow unicorn positivity theme</b> we got going here, we'll use the <i>rainbow</i> and <i>unicorn</i> arrays we created above.)\n\t            <h3>roygbiv</h3>\n\t            <h3>uni & corn</h3>\n\t\t\t\t<h3>backwards rainbow</h3>\n\t\t\t\t<h3>you're getting the hang of this!</h3>\n\t\t\t\t\n\t\t\t\t<h3>recap</h3>\n\t\t\t\t<b>you got this!</b> you made it to recap!\n\t\t\t\t<br/><br/>\n\t\t\t\there is the blueprint for constructing a <b>for-each loop</b>, a type of for loop used to iterate through collections such as arrays:\n\t\t\t\t<br/>\n\t            <b>\n\t            for(<i>&lt;type&gt;</i> <i>&lt;item&gt;</i> : <i>&lt;array&gt;</i>)&#123;\n\t            <br/>\n\t        \t<p>\n\t        \t\t*code*\n\t        \t</p>\n\t            <br/>\n\t            &#125;\n\t            </b>\n\t            <br/>\n\t            <br/>\n\t            need a refresher on what each of these components mean? we gotchu:\n\t            <ul>\n\t            \t<li><b>array</b> – the array or collection you want to iterate through</li>\n\t            \t<li><b>item</b> – each value in the array or collection is stored in this variable each iteration</li>\n\t            \t<li><b>type</b> – the type of the values in the array or collection</li>\n\t            </ul>\n\t            <b>for-each loops are great</b> if your program just needs the <b>values</b> of each element in the array. however, if you need to access the <b>indexes</b> of the array, or if you need to <b>modify the array</b>, or if you want to iterate through the array in a <b>specific order or fashion</b>, then you should use your <b>standard for loop</b>.\n\t            <h3>pit stop</h3>\n\t            double trouble – double each double in a double array in the main method – for loop or for-each loop?\n\t            <br/>\n\t            opposite – create a function that returns a new array with all the booleans flipped (!)\n\t            <ProgressUpdater\n\t              page={this.props.page} \n\t              user={this.props.user}\n\t              progress={this.state.progress}\n\t              update={(progress)=>this.updateProgressState(progress)}\n\t            />\n\t            ...we know <b className=\"note\">just for java</b> is as <b>addicting</b> as the newest Netflix binge, so what are you waiting for? <b className=\"pageName\">keep coding!</b>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ForEachLoop;"]},"metadata":{},"sourceType":"module"}