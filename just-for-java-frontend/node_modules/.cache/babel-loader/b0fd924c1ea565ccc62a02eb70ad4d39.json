{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/App.js\";\nimport withFirebaseAuth from 'react-with-firebase-auth';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseConfig from './firebaseConfig';\nimport React from 'react';\nimport './App.css';\nimport SideButton from './components/SideButton';\nimport axios from 'axios';\nimport Content from './components/Content';\nimport Home from './components/Home';\nimport About from './components/About';\nimport ContactUs from './components/ContactUs';\nimport Variables from './components/Variables';\nimport Printing from './components/Printing';\nimport UserInput from './components/UserInput';\nimport IfStatement from './components/IfStatement';\nimport BooleanLogic from './components/BooleanLogic';\nimport ForLoop from './components/ForLoop';\nimport WhileLoop from './components/WhileLoop';\nimport Comments from './components/Comments';\nimport Functions from './components/Functions';\nimport RandomNumbers from './components/RandomNumbers';\nimport ASCII from './components/ASCII';\nimport Break from './components/Break';\nimport Strings from './components/Strings';\nimport Mathematics from './components/Mathematics';\nimport ArrayList from './components/ArrayList';\nimport HashMap from './components/HashMap';\nimport Arrays from './components/Array';\nimport Arithmetic from './components/Arithmetic';\nimport Nesting from './components/Nesting';\nimport GettingStarted from './components/GettingStarted';\nimport TwoDimArrays from './components/TwoDimArrays';\nimport Casting from './components/Casting';\nimport Constants from './components/Constants';\nimport Overloading from './components/Overloading';\nimport ForEachLoop from './components/ForEachLoop';\n/*\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation,\n  Link,\n  withRouter\n} from \"react-router-dom\";\n*/\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseAppAuth = firebaseApp.auth();\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider()\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    var sideButtonText = [\"home\", \"about\", \"contact us\", \"getting started\", \"variables\", \"comments\", \"printing\", \"arithmetic\", \"strings\", \"user input\", \"math\", \"if statement\", \"boolean logic\", \"constants\", \"for loop\", \"while loop\", \"nesting\", \"break\", \"functions\", \"overloading\", \"array\", \"for-each loop\", \"arraylist\", \"2d array\"\n    /*, \"hashmap\", \"casting\", \"random-numbers\", \"ascii\"*/\n    ];\n    /*var sideButtonText = [\"home\", \"about\", \"contact-us\", \"getting-started\", \"variables\", \"comments\", \"printing\", \"arithmetic\", \"strings\", \"user-input\", \"math\", \"if-statement\", \"boolean-logic\", \"constants\", \"for-loop\", \"while-loop\", \"nesting\", \"break\", \"functions\", \"overloading\", \"array\", \"for-each-loop\", \"arraylist\", \"2d-array\", \"hashmap\", \"casting\", \"random-numbers\", \"ascii\"];*/\n\n    var selectedSideButton = \"home\";\n    this.state = {\n      sideButtonText: sideButtonText,\n      selectedSideButton: selectedSideButton\n    };\n  }\n\n  click(text) {\n    var selectedSideButton = text;\n    this.setState({\n      selectedSideButton: selectedSideButton\n    });\n  }\n\n  render() {\n    const {\n      user,\n      signOut,\n      signInWithGoogle\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"just for java\"), user ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"login\",\n      onClick: signOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"sign out of account\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"login\",\n      onClick: signInWithGoogle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"sign in with google\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, this.state.sideButtonText.map((text, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SideButton\n    /*currentPathname={window.location.pathname} myPathname={text}*/\n    , {\n      text: text,\n      click: () => this.click(text),\n      isSelected: this.state.selectedSideButton === text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Content, {\n      page: this.state.sideButtonSelected,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth\n})(App);","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/App.js"],"names":["withFirebaseAuth","firebase","firebaseConfig","React","SideButton","axios","Content","Home","About","ContactUs","Variables","Printing","UserInput","IfStatement","BooleanLogic","ForLoop","WhileLoop","Comments","Functions","RandomNumbers","ASCII","Break","Strings","Mathematics","ArrayList","HashMap","Arrays","Arithmetic","Nesting","GettingStarted","TwoDimArrays","Casting","Constants","Overloading","ForEachLoop","firebaseApp","initializeApp","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider","App","Component","constructor","props","sideButtonText","selectedSideButton","state","click","text","setState","render","user","signOut","signInWithGoogle","map","i","sideButtonSelected"],"mappings":"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","sourcesContent":["import withFirebaseAuth from 'react-with-firebase-auth'\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseConfig from './firebaseConfig';\nimport React from 'react';\nimport './App.css';\nimport SideButton from './components/SideButton';\nimport axios from 'axios';\nimport Content from './components/Content';\nimport Home from './components/Home';\nimport About from './components/About';\nimport ContactUs from './components/ContactUs';\nimport Variables from './components/Variables';\nimport Printing from './components/Printing';\nimport UserInput from './components/UserInput';\nimport IfStatement from './components/IfStatement';\nimport BooleanLogic from './components/BooleanLogic';\nimport ForLoop from './components/ForLoop';\nimport WhileLoop from './components/WhileLoop';\nimport Comments from './components/Comments';\nimport Functions from './components/Functions';\nimport RandomNumbers from './components/RandomNumbers';\nimport ASCII from './components/ASCII';\nimport Break from './components/Break';\nimport Strings from './components/Strings';\nimport Mathematics from './components/Mathematics';\nimport ArrayList from './components/ArrayList';\nimport HashMap from './components/HashMap';\nimport Arrays from './components/Array';\nimport Arithmetic from './components/Arithmetic';\nimport Nesting from './components/Nesting';\nimport GettingStarted from './components/GettingStarted';\nimport TwoDimArrays from './components/TwoDimArrays';\nimport Casting from './components/Casting';\nimport Constants from './components/Constants';\nimport Overloading from './components/Overloading';\nimport ForEachLoop from './components/ForEachLoop';\n/*\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation,\n  Link,\n  withRouter\n} from \"react-router-dom\";\n*/\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseAppAuth = firebaseApp.auth();\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nclass App extends React.Component{\n\n  constructor(props) {\n    super(props);\n    var sideButtonText = [\"home\", \"about\", \"contact us\", \"getting started\", \"variables\", \"comments\", \"printing\", \"arithmetic\", \"strings\", \"user input\", \"math\", \"if statement\", \"boolean logic\", \"constants\", \"for loop\", \"while loop\", \"nesting\", \"break\", \"functions\", \"overloading\", \"array\", \"for-each loop\", \"arraylist\", \"2d array\"/*, \"hashmap\", \"casting\", \"random-numbers\", \"ascii\"*/];\n    /*var sideButtonText = [\"home\", \"about\", \"contact-us\", \"getting-started\", \"variables\", \"comments\", \"printing\", \"arithmetic\", \"strings\", \"user-input\", \"math\", \"if-statement\", \"boolean-logic\", \"constants\", \"for-loop\", \"while-loop\", \"nesting\", \"break\", \"functions\", \"overloading\", \"array\", \"for-each-loop\", \"arraylist\", \"2d-array\", \"hashmap\", \"casting\", \"random-numbers\", \"ascii\"];*/\n    var selectedSideButton = \"home\";\n    \n    this.state={\n      sideButtonText: sideButtonText,\n      selectedSideButton: selectedSideButton\n    }\n  }\n\n  click(text) {\n    var selectedSideButton = text;\n    this.setState({\n      selectedSideButton: selectedSideButton\n    })\n  }\n\n  render() {\n    const {\n      user,\n      signOut,\n      signInWithGoogle,\n    } = this.props;\n    return (\n      <Router>\n        <div className=\"full\">\n          <div className = \"title\">\n            <h1>\n              just for java\n            </h1>\n            {\n                user\n                  ? <button className=\"login\" onClick={signOut}>sign out of account</button>\n                  : <button className=\"login\" onClick={signInWithGoogle}>sign in with google</button>\n              }\n\n          </div>\n          <div className = \"bottom\">\n            <div className = \"sidebar\">\n              {this.state.sideButtonText.map((text, i) =>\n                <div key={i}>\n                  <SideButton /*currentPathname={window.location.pathname} myPathname={text}*/ text={text} click={()=>this.click(text)} isSelected={this.state.selectedSideButton === text} />\n                </div>\n              )}\n            </div>\n            <div className = \"content\"> \n              <Content \n                page={this.state.sideButtonSelected}\n                user={user}\n              />\n              {/*\n              <h2>{this.state.selectedSideButton}:</h2>\n              <br/>\n              <Switch>\n                <Route exact path=\"/\">  \n                  <Home user={user}/>\n                </Route>\n                \n                <Route path=\"/home\">\n                  <Home user={user}/>\n                </Route>\n\n                <Route path=\"/constants\">\n                  <Constants user={user}/>\n                </Route>\n\n                <Route path=\"/about\">\n                  <About user={user}/>\n                </Route>\n\n                <Route path=\"/contact-us\">\n                  <ContactUs user={user}/>\n                </Route>\n\n                <Route path=\"/variables\">\n                  <Variables user={user}/>\n                </Route>\n\n                <Route path=\"/printing\">\n                  <Printing user={user}/>\n                </Route>\n\n                <Route path=\"/user-input\">\n                  <UserInput user={user}/>\n                </Route>\n\n                <Route path=\"/if-statement\">\n                  <IfStatement user={user}/>\n                </Route>\n\n                <Route path=\"/boolean-logic\">\n                  <BooleanLogic user={user}/>\n                </Route>\n\n                <Route path=\"/for-loop\">\n                  <ForLoop user={user}/>\n                </Route>\n\n                <Route path=\"/while-loop\">\n                  <WhileLoop user={user}/>\n                </Route>\n\n                <Route path=\"/comments\">\n                  <Comments user={user}/>\n                </Route>\n\n                <Route path=\"/functions\">\n                  <Functions user={user}/>\n                </Route>\n\n                <Route path=\"/for-each-loop\">\n                  <ForEachLoop user={user}/>\n                </Route>\n\n                <Route path=\"/random-numbers\">\n                  <RandomNumbers user={user}/>\n                </Route>\n\n                <Route path=\"/ascii\">\n                  <ASCII user={user}/>\n                </Route>\n\n                <Route path=\"/hashmap\">\n                  <HashMap user={user}/>\n                </Route>\n\n                <Route path=\"/array\">\n                  <Arrays user={user}/>\n                </Route>\n\n                <Route path=\"/math\">\n                  <Mathematics user={user}/>\n                </Route>\n\n                <Route path=\"/strings\">\n                  <Strings user={user}/>\n                </Route>\n\n                <Route path=\"/arraylist\">\n                  <ArrayList user={user}/>\n                </Route>\n\n                <Route path=\"/arithmetic\">\n                  <Arithmetic user={user}/>\n                </Route>\n\n                <Route path=\"/break\">\n                  <Break user={user}/>\n                </Route>\n\n                <Route path=\"/getting-started\">\n                  <GettingStarted user={user}/>\n                </Route>\n\n                <Route path=\"/nesting\">\n                  <Nesting user={user}/>\n                </Route>\n\n                <Route path=\"/2d-array\">\n                  <TwoDimArrays user={user}/>\n                </Route>\n\n                <Route path=\"/casting\">\n                  <Casting user={user}/>\n                </Route>\n\n                <Route path=\"/overloading\">\n                  <Overloading user={user}/>\n                </Route>\n              </Switch>\n              */}\n            </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n\n}\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(App);"]},"metadata":{},"sourceType":"module"}