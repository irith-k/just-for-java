{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/EscapeSequences.js\";\nimport React from 'react';\nimport ProgressUpdater from './ProgressUpdater';\nimport Hint from './Hint';\n\nclass EscapeSequences extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: \"todo\"\n    };\n  }\n\n  updateProgressState(progress) {\n    this.setState({\n      progress: progress\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ProgressUpdater, {\n      page: this.props.page,\n      user: this.props.user,\n      progress: this.state.progress,\n      update: progress => this.updateProgressState(progress),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }), \"believe it or not, we're gonna spend a whole page talking about \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 78\n      }\n    }, \"a backslash: \\\\\"), \". if you're like me and don't know the difference between a forward slash and a back slash, here ya go:\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }, \"/\"), \" = forward slash\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }\n    }, \"\\\\\"), \" = backslash\")), \"a \\\\ is basically a flag that tells the compiler, \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 63\n      }\n    }, \"\\\"yo! hey! something real special's bout to come up next.\\\"\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }\n    }, \"what comes next?! you left me in suspense bro!\"), \"a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }\n    }, \"\\\\ followed by another character\"), \" is called an \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 68\n      }\n    }, \"escape sequence\"), \", or an \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 98\n      }\n    }, \"escape character\"), \". here is the blueprint to write an esacpe sequence, or escape character:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }\n    }, \"\\\\\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, \"<char>\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }), \"depending on what \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 32\n      }\n    }, \"char\"), \" follows the \\\\, escape sequences have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 81\n      }\n    }, \"different meanings\"), \" to the compiler. here is a list of \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 142\n      }\n    }, \"commonly used escape sequences\"), \":\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }\n    }, \"\\\\n\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }\n    }, \"inserts a new line\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }\n    }, \"\\\\t\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    }, \"inserts a tab\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 20\n      }\n    }, \"\\\\'\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }\n    }, \"inserts a single quote\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }\n    }, \"\\\\\\\"\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }\n    }, \"inserts a double quote\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }\n    }, \"\\\\\\\\\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }\n    }, \"inserts a backslash\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }\n    }), \"it's important to note that \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 42\n      }\n    }, \"escape sequences are characters themselves\"), \" \\u2013 that's why another name for an escape sequence is an \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 147\n      }\n    }, \"escape character\"), \". check out the code below, where we store each escape character in a char variable:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }\n    }, \"char newLine = '\\\\n';\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 34\n      }\n    }), \"char tab = '\\\\t';\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 30\n      }\n    }), \"char singleQuote = '\\\\'';\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 38\n      }\n    }), \"char doubleQuote = '\\\\\\\"';\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 38\n      }\n    }), \"char backslash = '\\\\\\\\';\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }\n    }), \"in java, there are other escape sequences; however, we won't discuss them here because their function differs between different compilers. (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 154\n      }\n    }, \"btw:\"), \" also, you'll likely never need to use those escape sequences anyway hahaha so you aren't missing out on much.)\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }), \"now, are you ready for some \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 42\n      }\n    }, \"fun examples with escape sequences\"), \"? let's get right into it...\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, \"e   m   p   h   a   s   i   s\"), \"let's print out \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"\\\"emphasis\\\"\"), \", except after each character there is a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 79\n      }\n    }, \"tab\"), \". (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 92\n      }\n    }, \"hint:\"), \" which escape sequence can we use?) if you guess \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 170\n      }\n    }, \"\\\\t\"), \", you're absolutely right! check out the code below:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, \"System.out.println(\\\"e\\\\tm\\\\tp\\\\th\\\\ta\\\\ts\\\\ti\\\\ts\\\");\"), \"now, this may look kinda \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 30\n      }\n    }, \"suss\"), \". will something scary like \\\"etmtpthtatstits\\\" print out in the console? the answer \\u2013 luckily \\u2013\\xA0is \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 139\n      }\n    }, \"no\"), \". to help you feel more comfortable working with escape sequences, think of \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 224\n      }\n    }, \"\\\\t\"), \" as a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 239\n      }\n    }, \"single character\"), \" that means \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 274\n      }\n    }, \"tab\"), \". with this thought process in mind, now take a look at what actually prints out in the console:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, \"e   m   p   h   a   s   i   s\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), \"ready for another example with a different escape sequence? let's do this.\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }\n    }, \"\\\"real programmers count from 0\\\"\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    }, \"/recap\"), /*#__PURE__*/React.createElement(ProgressUpdater, {\n      page: this.props.page,\n      user: this.props.user,\n      progress: this.state.progress,\n      update: progress => this.updateProgressState(progress),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    }), \"...we know \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, \"just for java\"), \" is as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 69\n      }\n    }, \"addicting\"), \" as the newest Netflix binge, so what are you waiting for? \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 144\n      }\n    }, \"keep coding!\"));\n  }\n\n}\n\nexport default EscapeSequences;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/EscapeSequences.js"],"names":["React","ProgressUpdater","Hint","EscapeSequences","Component","constructor","props","state","progress","updateProgressState","setState","render","page","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProgressUpdater from './ProgressUpdater';\nimport Hint from './Hint';\n\nclass EscapeSequences extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state={\n\t\t\tprogress: \"todo\"\n\t\t}\n\t}\n\n\tupdateProgressState(progress){\n\t\tthis.setState({\n\t\t\tprogress: progress\n\t\t});\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ProgressUpdater\n\t              page={this.props.page} \n\t              user={this.props.user}\n\t              progress={this.state.progress}\n\t              update={(progress)=>this.updateProgressState(progress)}\n\t            />\n\t            believe it or not, we're gonna spend a whole page talking about <b>a backslash: \\</b>. if you're like me and don't know the difference between a forward slash and a back slash, here ya go:\n\t            <ul>\n\t            \t<li><b>/</b> = forward slash</li>\n\t            \t<li><b>\\</b> = backslash</li>\n\t            </ul>\n\t            a \\ is basically a flag that tells the compiler, <b>\"yo! hey! something real special's bout to come up next.\"</b>\n\t            <h3>what comes next?! you left me in suspense bro!</h3>\n\t            a <b>\\ followed by another character</b> is called an <b>escape sequence</b>, or an <b>escape character</b>. here is the blueprint to write an esacpe sequence, or escape character:\n\t            <br/>\n\t            <b>\n\t            \\<i>&lt;char&gt;</i>\n\t            </b>\n\t            <br/><br/>\n\t            depending on what <i>char</i> follows the \\, escape sequences have <b>different meanings</b> to the compiler. here is a list of <b>commonly used escape sequences</b>:\n\t            <br/><br/>\n\t            <table>\n\t            \t<tr>\n\t            \t\t<td><b>\\n</b></td>\n\t            \t\t<td>inserts a new line</td>\n\t            \t</tr>\n\t            \t<tr>\n\t            \t\t<td><b>\\t</b></td>\n\t            \t\t<td>inserts a tab</td>\n\t            \t</tr>\n\t            \t<tr>\n\t            \t\t<td><b>\\'</b></td>\n\t            \t\t<td>inserts a single quote</td>\n\t            \t</tr>\n\t            \t<tr>\n\t            \t\t<td><b>\\\"</b></td>\n\t            \t\t<td>inserts a double quote</td>\n\t            \t</tr>\n\t            \t<tr>\n\t            \t\t<td><b>\\\\</b></td>\n\t            \t\t<td>inserts a backslash</td>\n\t            \t</tr>\n\t            </table>\n\t            <br/>\n\t            it's important to note that <b>escape sequences are characters themselves</b> – that's why another name for an escape sequence is an <b>escape character</b>. check out the code below, where we store each escape character in a char variable:\n\t            <div className=\"code\">\n\t            char newLine = '\\n';<br/>\n\t            char tab = '\\t';<br/>\n\t            char singleQuote = '\\'';<br/>\n\t            char doubleQuote = '\\\"';<br/>\n\t            char backslash = '\\\\';\n\t            </div>\n\t            <br/>\n\t            in java, there are other escape sequences; however, we won't discuss them here because their function differs between different compilers. (<b className=\"note\">btw:</b> also, you'll likely never need to use those escape sequences anyway hahaha so you aren't missing out on much.)\n\t            <br/><br/>\n\t            now, are you ready for some <b>fun examples with escape sequences</b>? let's get right into it...\n\t\t\t\t<h3>e   m   p   h   a   s   i   s</h3>\n\t\t\t\tlet's print out <b>\"emphasis\"</b>, except after each character there is a <b>tab</b>. (<b className=\"note\">hint:</b> which escape sequence can we use?) if you guess <b>\\t</b>, you're absolutely right! check out the code below:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tSystem.out.println(\"e\\tm\\tp\\th\\ta\\ts\\ti\\ts\");\n\t\t\t\t</div>\n\t\t\t\tnow, this may look kinda <b>suss</b>. will something scary like \"etmtpthtatstits\" print out in the console? the answer – luckily – is <b>no</b>. to help you feel more comfortable working with escape sequences, think of <b>\\t</b> as a <b>single character</b> that means <b>tab</b>. with this thought process in mind, now take a look at what actually prints out in the console:\n\t\t\t\t<div className=\"code\">\n\t\t\t\te   m   p   h   a   s   i   s\n\t\t\t\t</div><br/>\n\t\t\t\tready for another example with a different escape sequence? let's do this.\n\t\t\t\t<h3>\"real programmers count from 0\"</h3>\n\n\t\t\t\t<h3>/recap</h3>\n\t\t\t\t<ProgressUpdater\n\t              page={this.props.page} \n\t              user={this.props.user}\n\t              progress={this.state.progress}\n\t              update={(progress)=>this.updateProgressState(progress)}\n\t            />\n\t            ...we know <b className=\"note\">just for java</b> is as <b>addicting</b> as the newest Netflix binge, so what are you waiting for? <b className=\"pageName\">keep coding!</b>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default EscapeSequences;"]},"metadata":{},"sourceType":"module"}