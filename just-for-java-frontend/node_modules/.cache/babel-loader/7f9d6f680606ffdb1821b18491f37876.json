{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Mathematics.js\";\nimport React from 'react';\nimport ProgressUpdater from './ProgressUpdater';\nimport Hint from './Hint';\n\nclass Mathematics extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ProgressUpdater, {\n      page: this.props.page,\n      user: this.props.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }\n    }), \"we've already discussed \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 29\n      }\n    }, \"+\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 39\n      }\n    }, \"-\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 49\n      }\n    }, \"*\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 59\n      }\n    }, \"/\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 73\n      }\n    }, \"%\"), \" (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 83\n      }\n    }, \"psst. need a reminder\"), \" on what these operators mean? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 173\n      }\n    }, \"arithmetics page\"), \"!). but what if we want to do more \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 252\n      }\n    }, \"complex math operations\"), \", such as raising a number to a power, or getting the absolute value of a number? luckily for us, the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 384\n      }\n    }, \"Math\"), \" library provides us with a variety of math constants and complex functions. let's take a look at all of the brand new and super cool functionality the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 547\n      }\n    }, \"Math\"), \" library gives us!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }\n    }), \"(\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 6\n      }\n    }, \"btw:\"), \" if you don't understand some of the mathematical concepts discussed below, that is \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 118\n      }\n    }, \"completely okay\"), \". knowing every single aspect of the Math library isn't essential to your programming journey. the goal of talking about the Math library is simply to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 291\n      }\n    }, \"add more tools into your programming toolbox\"), \". you may never use some of the functionality, but you may use other functionality frequently.)\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }, \"i'm hungry, is there any leftover pie?\"), \"no, sorry! but we do have two mathematical constants \\u2013 \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 60\n      }\n    }, \"pi\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 74\n      }\n    }, \"e\"), \" \\u2013 that the Math library gives us access to. (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 128\n      }\n    }, \"btw:\"), \" just some quick technical definitions \\u2013\\xA0pi is the circumference of a circle divided by its diameter, and e is the base of the natural logarithm.) here is the blueprint for \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 329\n      }\n    }, \"retrieving the double value of pi or e\"), \":\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, \"Math.PI\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }), \"Math.E\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }\n    }), \"now let's try to use this blueprint in code! create a program that creates a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 82\n      }\n    }, \"double\"), \" variable to store the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 118\n      }\n    }, \"radius\"), \" of a circle. then your program should create another \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 185\n      }\n    }, \"double\"), \" variable to store the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 221\n      }\n    }, \"circumference\"), \" of the circle. (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 258\n      }\n    }, \"hint:\"), \" the formula for the circumference of a circle is 2*pi*\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 342\n      }\n    }, \"r\"), \", where \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 358\n      }\n    }, \"r\"), \" is its radius.)\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }), \"your program should look something like this:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, \"double radius = 3.0; \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 26\n      }\n    }, \"//can be any value you want\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }), \"double circumference = 2 * Math.PI * radius;\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, \"which one is greater? which one is smaller?\"), \"let's learn how to get the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 32\n      }\n    }, \"maximum value\"), \" and the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 61\n      }\n    }, \"minimum value\"), \" between two numbers using the Math library. the two numbers you are comparing can either both be \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 179\n      }\n    }, \"integers\"), \" or both be \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 206\n      }\n    }, \"doubles\"), \" (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 222\n      }\n    }, \"psst. need a reminder\"), \" on what the difference is between an \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 305\n      }\n    }, \"int\"), \" and a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 322\n      }\n    }, \"double\"), \"? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 351\n      }\n    }, \"variables page\"), \"!). here is the blueprint for getting the max and min between two numbers:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, \"Math.max(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }\n    }, \"<first int or double>\"), \", \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 50\n      }\n    }, \"<second int or double>\"), \")\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }), \"Math.min(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }\n    }, \"<first int or double>\"), \", \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 50\n      }\n    }, \"<second int or double>\"), \")\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }\n    }), \"here's a basic example of some code using \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 47\n      }\n    }, \"Math.min()\"), \" that prints out the younger age between two variables: \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 120\n      }\n    }, \"myAge\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 137\n      }\n    }, \"yourAge\"), \" (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 153\n      }\n    }, \"psst. need a reminder\"), \" on why there's a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 216\n      }\n    }, \"+\"), \" sign after the String in the print statement at the bottom of the code? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 311\n      }\n    }, \"Strings page\"), \"!). try to predict what will be printed out to the console!\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, \"int myAge = 18;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }), \"int yourAge = 16;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }), \"System.out.print(\\\"the younger age is \\\" + Math.min(myAge, yourAge));\"), \"got your prediction of what will get printed out? let's take a look at the console and see if you were right:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, \"the younger age is 16\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }), \"now let's do an advanced example \\u2013\\xA0\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 40\n      }\n    }, \"try to find the max integer between three integers.\"), \" you might be thinking, doesn't \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 130\n      }\n    }, \"Math.max()\"), \" only take in \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 161\n      }\n    }, \"two\"), \" integers? you're right... and that's where the challenge comes in. (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 240\n      }\n    }, \"hint:\"), \" you may need to use Math.max() more than once...) think you have an answer? let's take a look at the code below:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, \"int maxedOut = Math.max(5, Math.max(-1, 13)); \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 51\n      }\n    }, \"//maxedOut will store 13\")), \"the variable \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 18\n      }\n    }, \"maxedOut\"), \" will store the max integer between \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 69\n      }\n    }, \"5\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 82\n      }\n    }, \"Math.max(-1, 13)\"), \". and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 111\n      }\n    }, \"Math.max(-1, 13)\"), \" is equivalent to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 152\n      }\n    }, \"13\"), \". so now we know that \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 183\n      }\n    }, \"maxedOut\"), \" will store \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 210\n      }\n    }, \"Math.max(5, 13)\"), \", which is equivalent to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 257\n      }\n    }, \"13\"), \". and there you have it! you're a max/min master!\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, \"boom! pow! time for some exponents\"), \"how can we \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }\n    }, \"raise a number to a power\"), \"? (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 51\n      }\n    }, \"btw:\"), \" raising a number, \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 98\n      }\n    }, \"base\"), \", to a power, \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 123\n      }\n    }, \"exponent\"), \", can be denoted as \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 158\n      }\n    }, \"base^exponent\"), \". which means that we are multiplying \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 216\n      }\n    }, \"base\"), \" by itself \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 238\n      }\n    }, \"exponent\"), \" times.) we can use \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 273\n      }\n    }, \"Math.pow()\"), \"! here is the blueprint for raising a number, \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 336\n      }\n    }, \"base\"), \", to a power, \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 361\n      }\n    }, \"exponent\"), \":\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }\n    }, \"Math.pow(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 22\n      }\n    }, \"<base>\"), \", \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 43\n      }\n    }, \"<exponent>\"), \")\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 10\n      }\n    }), \"ready to try it out in code? let's go:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, \"System.out.println(Math.pow(5, 2));\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }), \"System.out.println(Math.pow(2, 3));\"), \"what prints out in the console?\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, \"25.0\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }), \"8.0\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }, \"you're halfway through! i'm rooting for you!\"), \"let's learn how to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 24\n      }\n    }, \"square root\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 47\n      }\n    }, \"cube root\"), \" a number using \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 79\n      }\n    }, \"Math.sqrt()\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 102\n      }\n    }, \"Math.cbrt()\"), \", respectively. (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 137\n      }\n    }, \"btw:\"), \" square rooting a number is the exact opposite of raising a number to the power of 2; cube rooting a number is the exact opposite of raising a number to the power of 3.) here is the blueprint for calculating the square root and cube root of a number, \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 416\n      }\n    }, \"num\"), \":\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, \"Math.sqrt(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"<num>\"), \")\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }), \"Math.cbrt(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"<num>\"), \")\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 10\n      }\n    }), \"ready to try it out in code? let's go:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    }, \"System.out.println(Math.sqrt(25));\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    }), \"System.out.println(Math.cbrt(8));\"), \"what prints out in the console?\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, \"5.0\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }\n    }), \"2.0\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }, \"six packs, more like absolute value (abs, get it?)\"), \"i wish i had a six pack, but instead i get to talk about \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 62\n      }\n    }, \"absolute value\"), \" with you! (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 95\n      }\n    }, \"btw:\"), \" the absolute value of a number is its magnitude; in other words, the absolute value of a number is the number without its sign, so the number is always positive.) you can use \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 299\n      }\n    }, \"Math.abs()\"), \" to get the absolute value of either an \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 356\n      }\n    }, \"integer\"), \" or a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 376\n      }\n    }, \"double\"), \". here is the blueprint for getting absolute value using the Math library:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }, \"Math.abs(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"<int or double>\"), \")\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }\n    }), \"pretty simple, right? let's see \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }\n    }, \"abs in action\"), \"!\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }, \"int numberOfAbsIHave = Math.abs(-6); \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 42\n      }\n    }, \"//Math.abs(-6) = 6\")), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }, \"trigonometry haters can skip this section\"), \"but if you aren't a trig hater, then let's get into \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 57\n      }\n    }, \"SOHCAHTOA\"), \" (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 75\n      }\n    }, \"btw:\"), \" sin = opposite/hypotenuse, cos = adjacent/hypotenuse, tan = opposite/adjacent)! here is the blueprint for calculating \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 222\n      }\n    }, \"sine\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 235\n      }\n    }, \"cosine\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 254\n      }\n    }, \"tangent\"), \" of an angle, in radians:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }, \"Math.sin(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 14\n      }\n    }, \"<angle_in_radians>\"), \")\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }\n    }), \"Math.cos(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 14\n      }\n    }, \"<angle_in_radians>\"), \")\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }\n    }), \"Math.tan(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 14\n      }\n    }, \"<angle_in_radians>\"), \")\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 10\n      }\n    }), \"and here's some sample code using all three of these trigonometric functions \\u2013 and using Math.PI:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }\n    }, \"double soh = Math.sin(Math.PI/2); \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 39\n      }\n    }, \"//soh = 1.0\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }\n    }), \"double cah = Math.cos(Math.PI/3); \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 39\n      }\n    }, \"//cah = 0.5\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }), \"double toa = Math.tan(Math.PI); \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    }, \"//toa = 0.0\")), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }\n    }, \"from floor to ceiling\"), \"to end our discussion of the Math library, we are going to mention the concepts of \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 88\n      }\n    }, \"flooring\"), \" a double, or \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 117\n      }\n    }, \"rounding it down\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 146\n      }\n    }, \"ceiling\"), \" a double, or \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 174\n      }\n    }, \"rounding it up\"), \". (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 198\n      }\n    }, \"btw:\"), \" the floor is below you, or down, so you round down when you floor, while the ceiling is above you, or up, so you round up when you ceil.) here is the blueprint for \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 391\n      }\n    }, \"flooring and ceiling a double\"), \":\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    }, \"Math.floor(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 16\n      }\n    }, \"<double>\"), \")\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }), \"Math.ceil(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"<double>\"), \")\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 10\n      }\n    }), \"it's important to note that when flooring or ceiling a double, \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 68\n      }\n    }, \"you round the double either up or down to the nearest integer, but the type is still a double\"), \". if you're super confused right now, don't worry!! an example coded out will definitely help you understand what i mean. take a look at the following code, which prints the result of flooring and ceiling the double, \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 385\n      }\n    }, \"decimal\"), \":\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }\n    }, \"double decimal = 9.8;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }\n    }), \"System.out.println(Math.floor(decimal));\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }\n    }), \"System.out.println(Math.ceil(decimal));\"), \"what do you think will get printed out into the console? let's take a look:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }\n    }, \"9.0\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }\n    }), \"10.0\"), \"we expected that \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 22\n      }\n    }, \"flooring 9.8 would get 9\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 59\n      }\n    }, \"ceiling 9.8 would get 10\"), \", but do you notice something peculiar? 9 wasn't printed; rather, \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 156\n      }\n    }, \"9.0\"), \" was printed. similarly, 10 wasn't printed; rather, \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 218\n      }\n    }, \"10.0\"), \" was printed. what's the difference? 9 and 10 are both \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 284\n      }\n    }, \"integers\"), \" while 9.0 and 10.0 are both \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 328\n      }\n    }, \"doubles\"), \". this means that the double we pass into \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 45\n      }\n    }, \"Math.floor()\"), \" or \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 68\n      }\n    }, \"Math.ceil()\"), \" will get rounded down or up, respectively, but will \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 139\n      }\n    }, \"still stay as a double\"), \". it won't be rounded into an int. this also means that when we store the result of \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 252\n      }\n    }, \"Math.floor()\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 276\n      }\n    }, \"Math.ceil()\"), \" in a variable, we will store it in a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 332\n      }\n    }, \"double\"), \", not an \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 354\n      }\n    }, \"int\"), \". here's a short example illustrating this:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 5\n      }\n    }, \"double decimal = 9.8;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }\n    }, \"//flooringDecimal = 9.0 and ceilingDecimal = 10.0\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }\n    }), \"double flooringDecimal = Math.floor(decimal);\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }\n    }), \"double ceilingDecimal = Math.ceil(decimal);\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 5\n      }\n    }, \"and that's it! for now...\"), \"there is so much more cool and complex math functions you can utilize with the Math library! (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 99\n      }\n    }, \"btw:\"), \" if you love trigonometry, the Math library has even more trig functions that you can play with.) unfortunately, we didn't have room to talk about everything in the Math library on this page, but \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 323\n      }\n    }, \"if you want to learn more about the Math library, simply search online\"), \"!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }\n    }), \"there is one more topic in the Math library \\u2013 generating random numbers\\xA0\\u2013 which is so important that we have dedicated a whole separate \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 141\n      }\n    }, \"random numbers page\"), \" just for that topic. it's a bit more \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 226\n      }\n    }, \"advanced\"), \" than everything we've talked about so far, so you'll see it after some more pages. \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 325\n      }\n    }, \"exciting times ahead!\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }\n    }, \"Math.recap()\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }\n    }, \"woohoo!\"), \" you made it to recap!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 10\n      }\n    }), \"you know what? after learning about all that \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 50\n      }\n    }, \"Math\"), \" i bet you're feeling \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 83\n      }\n    }, \"lazy like me\"), \" (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 104\n      }\n    }, \"btw:\"), \" i guess that's why i don't have a six pack...), so i'll keep this recap short.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 10\n      }\n    }), \"imma just leave a table of all the constants and functions from the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 73\n      }\n    }, \"Math library\"), \" we learned about today. and don't even bother reading through it; it's simply there for \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 181\n      }\n    }, \"reference\"), \". with that, we're done with recap! pretty short, eh?\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }, \"Math.PI\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }\n    }, \"the double value of the mathematical constant pi\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, \"Math.E\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }\n    }, \"the double value of the mathematical constant e\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, \"Math.max(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 20\n      }\n    }, \"<first int or double>\"), \", \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 56\n      }\n    }, \"<second int or double>\"), \")\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }\n    }, \"returns the greater value between \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 45\n      }\n    }, \"<first int or double>\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 84\n      }\n    }, \"<second int or double>\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, \"Math.min(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 20\n      }\n    }, \"<first int or double>\"), \", \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 56\n      }\n    }, \"<second int or double>\"), \")\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, \"returns the smaller value between \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 45\n      }\n    }, \"<first int or double>\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 84\n      }\n    }, \"<second int or double>\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }, \"Math.pow(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 20\n      }\n    }, \"<base>\"), \", \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 41\n      }\n    }, \"<exponent>\"), \")\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, \"returns \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, \"<base>\"), \" raised to the power of \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 62\n      }\n    }, \"<exponent>\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }, \"Math.sqrt(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, \"<num>\"), \")\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, \"returns the square root of \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 38\n      }\n    }, \"<num>\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }\n    }, \"Math.cbrt(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, \"<num>\"), \")\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }\n    }, \"returns the cube root of \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 36\n      }\n    }, \"<num>\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }\n    }, \"Math.abs(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 20\n      }\n    }, \"<int or double>\"), \")\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }\n    }, \"returns the absolute value of \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 41\n      }\n    }, \"<int or double>\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }, \"Math.sin(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 20\n      }\n    }, \"<angle_in_radians>\"), \")\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }\n    }, \"returns the sine of \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 31\n      }\n    }, \"<angle_in_radians>\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, \"Math.cos(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 20\n      }\n    }, \"<angle_in_radians>\"), \")\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }\n    }, \"returns the cosine of \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 33\n      }\n    }, \"<angle_in_radians>\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }\n    }, \"Math.tan(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 20\n      }\n    }, \"<angle_in_radians>\"), \")\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }\n    }, \"returns the tangent of \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 34\n      }\n    }, \"<angle_in_radians>\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }\n    }, \"Math.floor(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 22\n      }\n    }, \"<double>\"), \")\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }\n    }, \"returns a double that holds \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 39\n      }\n    }, \"<double>\"), \" rounded down to the nearest integer\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 7\n      }\n    }, \"Math.ceil(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, \"<double>\"), \")\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }\n    }, \"returns a double that holds \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 39\n      }\n    }, \"<double>\"), \" rounded up to the nearest integer\"))), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 5\n      }\n    }, \"pit stop\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"problem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 6\n      }\n    }, \"leftover pie:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 48\n      }\n    }), \"if you're still hungry, we discovered a whole pie leftover! your \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 71\n      }\n    }, \"goal\"), \" is to use \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 93\n      }\n    }, \"Math\"), \" to find the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 117\n      }\n    }, \"area of the leftover pie using pi and some other Math functions\"), \". this will require two steps:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 217\n      }\n    }), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, \"create a variable to store the radius of the leftover pie\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }\n    }, \"calculate the area of the leftover pie and store it in a new variable\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 8\n      }\n    }, \"here's the formula for calculating the area of a circle: A = \\u03C0 * r ^ 2\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 8\n      }\n    }, \"print out the area variable after creating it\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hints\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    }, \"hint:\"), \" for \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 41\n      }\n    }, \"step 2\"), \", you can retrieve the value of pi by using Math.PI\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 105\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 110\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }\n    }, \"hint:\"), \" for \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 41\n      }\n    }, \"step 2\"), \", you can square the radius by using Math.pow(radius, 2), where radius is the base and 2 is the exponent\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 158\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 163\n      }\n    })), /*#__PURE__*/React.createElement(Hint, {\n      hints: [\"for step 2, you can retrieve the value of pi by using Math.PI\", \"for step 2, you can square the radius by using Math.pow(radius, 2), where radius is the base and 2 is the exponent\"],\n      id: \"if-statement-traffic-lights\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"repl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      height: \"400px\",\n      width: \"100%\",\n      src: \"https://repl.it/@justforjava/Math-leftover-pie?lite=true\",\n      scrolling: \"no\",\n      frameborder: \"no\",\n      allowtransparency: \"true\",\n      allowfullscreen: \"true\",\n      sandbox: \"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 7\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"solution\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 5\n      }\n    }, \"our solution:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 47\n      }\n    }), \"below is \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 14\n      }\n    }, \"our solution\"), \" for the problem above. the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 61\n      }\n    }, \"comments\"), \" help to explain how to code each step. hopefully your code looks somewhat similar \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 159\n      }\n    }, \":)\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 169\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 174\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"repl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      height: \"400px\",\n      width: \"100%\",\n      src: \"https://repl.it/@justforjava/Math-leftover-pie-solution?lite=true\",\n      scrolling: \"no\",\n      frameborder: \"no\",\n      allowtransparency: \"true\",\n      allowfullscreen: \"true\",\n      sandbox: \"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(ProgressUpdater, {\n      page: this.props.page,\n      user: this.props.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 5\n      }\n    }), \"...we know \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 16\n      }\n    }, \"just for java\"), \" is as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 60\n      }\n    }, \"addicting\"), \" as the newest Netflix binge, so what are you waiting for? \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 135\n      }\n    }, \"keep coding!\"));\n  }\n\n}\n\nexport default Mathematics;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Mathematics.js"],"names":["React","ProgressUpdater","Hint","Mathematics","Component","constructor","props","render","page","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProgressUpdater from './ProgressUpdater';\nimport Hint from './Hint';\n\nclass Mathematics extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ProgressUpdater \n\t              page={this.props.page} \n\t              user={this.props.user}\n\t            />\n\t\t\t\twe've already discussed <b>+</b>, <b>-</b>, <b>*</b>, <b>/</b>, and <b>%</b> (<b className=\"note\">psst. need a reminder</b> on what these operators mean? check out the <b className=\"pageName\">arithmetics page</b>!). but what if we want to do more <b>complex math operations</b>, such as raising a number to a power, or getting the absolute value of a number? luckily for us, the <b>Math</b> library provides us with a variety of math constants and complex functions. let's take a look at all of the brand new and super cool functionality the <b>Math</b> library gives us! \n\t\t\t\t<br/>\n\t\t\t\t(<b className=\"note\">btw:</b> if you don't understand some of the mathematical concepts discussed below, that is <b>completely okay</b>. knowing every single aspect of the Math library isn't essential to your programming journey. the goal of talking about the Math library is simply to <b>add more tools into your programming toolbox</b>. you may never use some of the functionality, but you may use other functionality frequently.)\n\t\t\t\t<br/>\n\t\t\t\t<h3>i'm hungry, is there any leftover pie?</h3>\n\t\t\t\tno, sorry! but we do have two mathematical constants – <b>pi</b> and <b>e</b> – that the Math library gives us access to. (<b className=\"note\">btw:</b> just some quick technical definitions – pi is the circumference of a circle divided by its diameter, and e is the base of the natural logarithm.) here is the blueprint for <b>retrieving the double value of pi or e</b>:\n\t\t\t\t<br/>\n\t\t\t\t<b>\n\t\t\t\tMath.PI\n\t\t\t\t<br/>\n\t\t\t\tMath.E\n\t\t\t\t</b>\n\t\t\t\t<br/><br/>\n\t\t\t\tnow let's try to use this blueprint in code! create a program that creates a <b>double</b> variable to store the <b>radius</b> of a circle. then your program should create another <b>double</b> variable to store the <b>circumference</b> of the circle. (<b className=\"note\">hint:</b> the formula for the circumference of a circle is 2*pi*<i>r</i>, where <i>r</i> is its radius.)\n\t\t\t\t<br/>\n\t\t\t\tyour program should look something like this:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tdouble radius = 3.0; <div className=\"comment\">//can be any value you want</div>\n\t\t\t\t<br/>\n\t\t\t\tdouble circumference = 2 * Math.PI * radius;\n\t\t\t\t</div>\n\t\t\t\t<h3>which one is greater? which one is smaller?</h3>\n\t\t\t\tlet's learn how to get the <b>maximum value</b> and the <b>minimum value</b> between two numbers using the Math library. the two numbers you are comparing can either both be <b>integers</b> or both be <b>doubles</b> (<b className=\"note\">psst. need a reminder</b> on what the difference is between an <b>int</b> and a <b>double</b>? check out the <b className=\"pageName\">variables page</b>!). here is the blueprint for getting the max and min between two numbers:\n\t\t\t\t<br/>\n\t\t\t\t<b>\n\t\t\t\tMath.max(<i>&lt;first int or double&gt;</i>, <i>&lt;second int or double&gt;</i>)\n\t\t\t\t<br/>\n\t\t\t\tMath.min(<i>&lt;first int or double&gt;</i>, <i>&lt;second int or double&gt;</i>)\n\t\t\t\t</b>\n\t\t\t\t<br/><br/>\n\t\t\t\there's a basic example of some code using <b>Math.min()</b> that prints out the younger age between two variables: <i>myAge</i> and <i>yourAge</i> (<b className=\"note\">psst. need a reminder</b> on why there's a <b>+</b> sign after the String in the print statement at the bottom of the code? check out the <b className=\"pageName\">Strings page</b>!). try to predict what will be printed out to the console!\n\t\t\t\t<div className=\"code\">\n\t\t\t\tint myAge = 18;\n\t\t\t\t<br/>\n\t\t\t\tint yourAge = 16;\n\t\t\t\t<br/>\n\t\t\t\tSystem.out.print(\"the younger age is \" + Math.min(myAge, yourAge));\n\t\t\t\t</div>\n\t\t\t\tgot your prediction of what will get printed out? let's take a look at the console and see if you were right:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tthe younger age is 16\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\tnow let's do an advanced example – <b>try to find the max integer between three integers.</b> you might be thinking, doesn't <b>Math.max()</b> only take in <b>two</b> integers? you're right... and that's where the challenge comes in. (<b className=\"note\">hint:</b> you may need to use Math.max() more than once...) think you have an answer? let's take a look at the code below:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tint maxedOut = Math.max(5, Math.max(-1, 13)); <div className=\"comment\">//maxedOut will store 13</div>\n\t\t\t\t</div>\n\t\t\t\tthe variable <i>maxedOut</i> will store the max integer between <b>5</b> and <b>Math.max(-1, 13)</b>. and <b>Math.max(-1, 13)</b> is equivalent to <b>13</b>. so now we know that <i>maxedOut</i> will store <b>Math.max(5, 13)</b>, which is equivalent to <b>13</b>. and there you have it! you're a max/min master!\n\t\t\t\t<h3>boom! pow! time for some exponents</h3>\n\t\t\t\thow can we <b>raise a number to a power</b>? (<b className=\"note\">btw:</b> raising a number, <i>base</i>, to a power, <i>exponent</i>, can be denoted as <i>base^exponent</i>. which means that we are multiplying <i>base</i> by itself <i>exponent</i> times.) we can use <b>Math.pow()</b>! here is the blueprint for raising a number, <i>base</i>, to a power, <i>exponent</i>:\n\t\t\t\t<br/><b>Math.pow(<i>&lt;base&gt;</i>, <i>&lt;exponent&gt;</i>)</b>\n\t\t\t\t<br/><br/>\n\t\t\t\tready to try it out in code? let's go:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tSystem.out.println(Math.pow(5, 2));\n\t\t\t\t<br/>\n\t\t\t\tSystem.out.println(Math.pow(2, 3));\n\t\t\t\t</div>\n\t\t\t\twhat prints out in the console?\n\t\t\t\t<div className=\"code\">\n\t\t\t\t25.0\n\t\t\t\t<br/>\n\t\t\t\t8.0\n\t\t\t\t</div>\n\t\t\t\t<h3>you're halfway through! i'm rooting for you!</h3>\n\t\t\t\tlet's learn how to <b>square root</b> and <b>cube root</b> a number using <b>Math.sqrt()</b> and <b>Math.cbrt()</b>, respectively. (<b className=\"note\">btw:</b> square rooting a number is the exact opposite of raising a number to the power of 2; cube rooting a number is the exact opposite of raising a number to the power of 3.) here is the blueprint for calculating the square root and cube root of a number, <i>num</i>:\n\t\t\t\t<br/>\n\t\t\t\t<b>\n\t\t\t\tMath.sqrt(<i>&lt;num&gt;</i>)\n\t\t\t\t<br/>\n\t\t\t\tMath.cbrt(<i>&lt;num&gt;</i>)\n\t\t\t\t</b>\n\t\t\t\t<br/><br/>\n\t\t\t\tready to try it out in code? let's go:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tSystem.out.println(Math.sqrt(25));\n\t\t\t\t<br/>\n\t\t\t\tSystem.out.println(Math.cbrt(8));\n\t\t\t\t</div>\n\t\t\t\twhat prints out in the console?\n\t\t\t\t<div className=\"code\">\n\t\t\t\t5.0\n\t\t\t\t<br/>\n\t\t\t\t2.0\n\t\t\t\t</div>\n\t\t\t\t<h3>six packs, more like absolute value (abs, get it?)</h3>\n\t\t\t\ti wish i had a six pack, but instead i get to talk about <b>absolute value</b> with you! (<b className=\"note\">btw:</b> the absolute value of a number is its magnitude; in other words, the absolute value of a number is the number without its sign, so the number is always positive.) you can use <b>Math.abs()</b> to get the absolute value of either an <b>integer</b> or a <b>double</b>. here is the blueprint for getting absolute value using the Math library:\n\t\t\t\t<br/>\n\t\t\t\t<b>Math.abs(<i>&lt;int or double&gt;</i>)</b>\n\t\t\t\t<br/><br/>\n\t\t\t\tpretty simple, right? let's see <b>abs in action</b>!\n\t\t\t\t<div className=\"code\">\n\t\t\t\tint numberOfAbsIHave = Math.abs(-6); <div className=\"comment\">//Math.abs(-6) = 6</div>\n\t\t\t\t</div>\n\t\t\t\t<h3>trigonometry haters can skip this section</h3>\n\t\t\t\tbut if you aren't a trig hater, then let's get into <b>SOHCAHTOA</b> (<b className=\"note\">btw:</b> sin = opposite/hypotenuse, cos = adjacent/hypotenuse, tan = opposite/adjacent)! here is the blueprint for calculating <b>sine</b>, <b>cosine</b>, and <b>tangent</b> of an angle, in radians:\n\t\t\t\t<br/>\n\t\t\t\t<b>\n\t\t\t\tMath.sin(<i>&lt;angle_in_radians&gt;</i>)\n\t\t\t\t<br/>\n\t\t\t\tMath.cos(<i>&lt;angle_in_radians&gt;</i>)\n\t\t\t\t<br/>\n\t\t\t\tMath.tan(<i>&lt;angle_in_radians&gt;</i>)\n\t\t\t\t</b>\n\t\t\t\t<br/><br/>\n\t\t\t\tand here's some sample code using all three of these trigonometric functions – and using Math.PI:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tdouble soh = Math.sin(Math.PI/2); <div className=\"comment\">//soh = 1.0</div>\n\t\t\t\t<br/>\n\t\t\t\tdouble cah = Math.cos(Math.PI/3); <div className=\"comment\">//cah = 0.5</div>\n\t\t\t\t<br/>\n\t\t\t\tdouble toa = Math.tan(Math.PI); <div className=\"comment\">//toa = 0.0</div>\n\t\t\t\t</div>\n\t\t\t\t<h3>from floor to ceiling</h3>\n\t\t\t\tto end our discussion of the Math library, we are going to mention the concepts of <b>flooring</b> a double, or <b>rounding it down</b>, and <b>ceiling</b> a double, or <b>rounding it up</b>. (<b className=\"note\">btw:</b> the floor is below you, or down, so you round down when you floor, while the ceiling is above you, or up, so you round up when you ceil.) here is the blueprint for <b>flooring and ceiling a double</b>:\n\t\t\t\t<br/>\n\t\t\t\t<b>\n\t\t\t\tMath.floor(<i>&lt;double&gt;</i>)\n\t\t\t\t<br/>\n\t\t\t\tMath.ceil(<i>&lt;double&gt;</i>)\n\t\t\t\t</b>\n\t\t\t\t<br/><br/>\n\t\t\t\tit's important to note that when flooring or ceiling a double, <b>you round the double either up or down to the nearest integer, but the type is still a double</b>. if you're super confused right now, don't worry!! an example coded out will definitely help you understand what i mean. take a look at the following code, which prints the result of flooring and ceiling the double, <i>decimal</i>:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tdouble decimal = 9.8;\n\t\t\t\t<br/>\n\t\t\t\tSystem.out.println(Math.floor(decimal));\n\t\t\t\t<br/>\n\t\t\t\tSystem.out.println(Math.ceil(decimal));\n\t\t\t\t</div>\n\t\t\t\twhat do you think will get printed out into the console? let's take a look:\n\t\t\t\t<div className=\"code\">\n\t\t\t\t9.0\n\t\t\t\t<br/>\n\t\t\t\t10.0\n\t\t\t\t</div>\n\t\t\t\twe expected that <b>flooring 9.8 would get 9</b>, and <b>ceiling 9.8 would get 10</b>, but do you notice something peculiar? 9 wasn't printed; rather, <b>9.0</b> was printed. similarly, 10 wasn't printed; rather, <b>10.0</b> was printed. what's the difference? 9 and 10 are both <b>integers</b> while 9.0 and 10.0 are both <b>doubles</b>.\n\t\t\t\tthis means that the double we pass into <b>Math.floor()</b> or <b>Math.ceil()</b> will get rounded down or up, respectively, but will <b>still stay as a double</b>. it won't be rounded into an int. this also means that when we store the result of <b>Math.floor()</b> and <b>Math.ceil()</b> in a variable, we will store it in a <b>double</b>, not an <b>int</b>. here's a short example illustrating this:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tdouble decimal = 9.8;\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"comment\">//flooringDecimal = 9.0 and ceilingDecimal = 10.0</div>\n\t\t\t\t<br/>\n\t\t\t\tdouble flooringDecimal = Math.floor(decimal);\n\t\t\t\t<br/>\n\t\t\t\tdouble ceilingDecimal = Math.ceil(decimal);\n\t\t\t\t</div>\n\t\t\t\t<h3>and that's it! for now...</h3>\n\t\t\t\tthere is so much more cool and complex math functions you can utilize with the Math library! (<b className=\"note\">btw:</b> if you love trigonometry, the Math library has even more trig functions that you can play with.) unfortunately, we didn't have room to talk about everything in the Math library on this page, but <b>if you want to learn more about the Math library, simply search online</b>!\n\t\t\t\t<br/>\n\t\t\t\tthere is one more topic in the Math library – generating random numbers – which is so important that we have dedicated a whole separate <b className=\"pageName\">random numbers page</b> just for that topic. it's a bit more <b>advanced</b> than everything we've talked about so far, so you'll see it after some more pages. <b>exciting times ahead!</b>\n\t\t\t\t<h3>Math.recap()</h3>\n\t\t\t\t<b>woohoo!</b> you made it to recap!\n\t\t\t\t<br/><br/>\n\t\t\t\tyou know what? after learning about all that <b>Math</b> i bet you're feeling <b>lazy like me</b> (<b className=\"note\">btw:</b> i guess that's why i don't have a six pack...), so i'll keep this recap short.\n\t\t\t\t<br/><br/>\n\t\t\t\timma just leave a table of all the constants and functions from the <b>Math library</b> we learned about today. and don't even bother reading through it; it's simply there for <b>reference</b>. with that, we're done with recap! pretty short, eh?\n\t\t\t\t<br/><br/>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Math.PI</td>\n\t\t\t\t\t\t<td>the double value of the mathematical constant pi</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Math.E</td>\n\t\t\t\t\t\t<td>the double value of the mathematical constant e</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Math.max(<i>&lt;first int or double&gt;</i>, <i>&lt;second int or double&gt;</i>)</td>\n\t\t\t\t\t\t<td>returns the greater value between <i>&lt;first int or double&gt;</i> and <i>&lt;second int or double&gt;</i></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Math.min(<i>&lt;first int or double&gt;</i>, <i>&lt;second int or double&gt;</i>)</td>\n\t\t\t\t\t\t<td>returns the smaller value between <i>&lt;first int or double&gt;</i> and <i>&lt;second int or double&gt;</i></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Math.pow(<i>&lt;base&gt;</i>, <i>&lt;exponent&gt;</i>)</td>\n\t\t\t\t\t\t<td>returns <i>&lt;base&gt;</i> raised to the power of <i>&lt;exponent&gt;</i></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Math.sqrt(<i>&lt;num&gt;</i>)</td>\n\t\t\t\t\t\t<td>returns the square root of <i>&lt;num&gt;</i></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Math.cbrt(<i>&lt;num&gt;</i>)</td>\n\t\t\t\t\t\t<td>returns the cube root of <i>&lt;num&gt;</i></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Math.abs(<i>&lt;int or double&gt;</i>)</td>\n\t\t\t\t\t\t<td>returns the absolute value of <i>&lt;int or double&gt;</i></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Math.sin(<i>&lt;angle_in_radians&gt;</i>)</td>\n\t\t\t\t\t\t<td>returns the sine of <i>&lt;angle_in_radians&gt;</i></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Math.cos(<i>&lt;angle_in_radians&gt;</i>)</td>\n\t\t\t\t\t\t<td>returns the cosine of <i>&lt;angle_in_radians&gt;</i></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Math.tan(<i>&lt;angle_in_radians&gt;</i>)</td>\n\t\t\t\t\t\t<td>returns the tangent of <i>&lt;angle_in_radians&gt;</i></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Math.floor(<i>&lt;double&gt;</i>)</td>\n\t\t\t\t\t\t<td>returns a double that holds <i>&lt;double&gt;</i> rounded down to the nearest integer</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Math.ceil(<i>&lt;double&gt;</i>)</td>\n\t\t\t\t\t\t<td>returns a double that holds <i>&lt;double&gt;</i> rounded up to the nearest integer</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<h3>pit stop</h3>\n\t\t\t\t<div className=\"problem\">\n\t\t\t\t\t<b className=\"note\">leftover pie:</b><br/><br/>\n\t\t\t\t\tif you're still hungry, we discovered a whole pie leftover! your <b>goal</b> is to use <b>Math</b> to find the <b>area of the leftover pie using pi and some other Math functions</b>. this will require two steps:<br/>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t<li>create a variable to store the radius of the leftover pie</li>\n\t\t\t\t\t\t<li>calculate the area of the leftover pie and store it in a new variable</li>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>here's the formula for calculating the area of a circle: A = π * r ^ 2</li>\n\t\t\t\t\t\t\t<li>print out the area variable after creating it</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</ol>\n\t\t\t\t\t<div className=\"hints\">\n\t\t\t\t\t\t<b className=\"note\">hint:</b> for <b>step 2</b>, you can retrieve the value of pi by using Math.PI<br/><br/>\n\t\t\t\t\t\t<b className=\"note\">hint:</b> for <b>step 2</b>, you can square the radius by using Math.pow(radius, 2), where radius is the base and 2 is the exponent<br/><br/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Hint\n\t\t\t\t\t\thints={[\n\t\t\t\t\t\t\t\"for step 2, you can retrieve the value of pi by using Math.PI\",\n\t\t\t\t\t\t\t\"for step 2, you can square the radius by using Math.pow(radius, 2), where radius is the base and 2 is the exponent\"\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tid=\"if-statement-traffic-lights\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"repl\">\n\t\t\t\t\t\t<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@justforjava/Math-leftover-pie?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"solution\">\n\t\t\t\t<b className=\"note\">our solution:</b><br/><br/>\n\t\t\t\tbelow is <b>our solution</b> for the problem above. the <b>comments</b> help to explain how to code each step. hopefully your code looks somewhat similar <b>:)</b> <br/><br/>\n\t\t\t\t\t<div className=\"repl\">\n\t\t\t\t\t\t<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@justforjava/Math-leftover-pie-solution?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\t<ProgressUpdater \n\t              page={this.props.page} \n\t              user={this.props.user}\n\t            />\n\t\t\t\t...we know <b className=\"note\">just for java</b> is as <b>addicting</b> as the newest Netflix binge, so what are you waiting for? <b className=\"pageName\">keep coding!</b>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Mathematics;"]},"metadata":{},"sourceType":"module"}