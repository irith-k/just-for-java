{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/ProgressUpdater.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nconst options = [{\n  label: \"todo\",\n  value: \"todo\"\n}, {\n  label: \"in progress\",\n  value: \"in progress\"\n}, {\n  label: \"complete\",\n  value: \"complete\"\n}];\nconst customStyles = {\n  option: (provided, state) => ({ ...provided,\n    border: '1px solid #172A3A',\n    cornerRadius: '10px',\n    color: state.isSelected ? '#172A3A' : '#FFA69E',\n    backgroundColor: state.isSelected ? '#FFA69E' : '#172A3A'\n  }),\n  control: () => ({\n    // none of react-select's styles are passed to <Control />\n    width: 150\n  }),\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n    return { ...provided,\n      opacity,\n      transition\n    };\n  }\n};\n\nclass ProgressUpdater extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption: selectedOption,\n        message: \"\"\n      }, () => {\n        axios.post(\"http://localhost:5001/just-for-java/us-central1/app/api/update-topic-status\", {\n          id: this.props.user.uid,\n          topic: this.props.page,\n          status: this.state.selectedOption.value\n        }).then(res => {\n          console.log(res.data);\n          this.setState({\n            message: \"progress saved!\"\n          });\n        });\n      });\n    };\n\n    this.state = {\n      selectedOption: {\n        label: \"todo\",\n        value: \"todo\"\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.getTopicStatus();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.user && !prevProps.user) {\n      this.getTopicStatus();\n    }\n  }\n\n  getTopicStatus() {\n    axios.get(\"http://localhost:5001/just-for-java/us-central1/app/api/get-topic-status\", {\n      params: {\n        id: this.props.user.uid,\n        topic: this.props.page\n      }\n    }).then(res => {\n      console.log(res.data);\n\n      if (!res.data.status) {\n        this.setState({\n          selectedOption: {\n            label: \"todo\",\n            value: \"todo\"\n          },\n          message: \"\"\n        });\n      } else {\n        this.setState({\n          selectedOption: {\n            label: res.data.status,\n            value: res.data.status\n          },\n          message: \"\"\n        });\n      }\n    });\n  }\n\n  updateTopicStatus() {\n    var status = document.getElementById(\"myProgressUpdater\").value;\n    this.setState({\n      selectedOption: status,\n      message: \"\"\n    }, () => {\n      axios.post(\"http://localhost:5001/just-for-java/us-central1/app/api/update-topic-status\", {\n        id: this.props.user.uid,\n        topic: this.props.page,\n        status: this.state.selectedOption\n      }).then(res => {\n        console.log(res.data);\n        this.setState({\n          message: \"progress saved!\"\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 4\n      }\n    }, this.props.user ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      styles: customStyles,\n      value: this.state.selectedOption,\n      onChange: this.handleChange,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }), this.state.message) : \"sign in to save your progress!\");\n  }\n\n}\n\nexport default ProgressUpdater;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/ProgressUpdater.js"],"names":["React","axios","Select","options","label","value","customStyles","option","provided","state","border","cornerRadius","color","isSelected","backgroundColor","control","width","singleValue","opacity","isDisabled","transition","ProgressUpdater","Component","constructor","props","handleChange","selectedOption","setState","message","post","id","user","uid","topic","page","status","then","res","console","log","data","componentDidMount","getTopicStatus","componentDidUpdate","prevProps","get","params","updateTopicStatus","document","getElementById","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\n\nconst options = [\n  { label: \"todo\", value: \"todo\" },\n  { label: \"in progress\", value: \"in progress\" },\n  { label: \"complete\", value: \"complete\" }\n];\n\nconst customStyles = {\n  option: (provided, state) => ({\n    ...provided,\n    border: '1px solid #172A3A',\n    cornerRadius: '10px',\n    color: state.isSelected ? '#172A3A' : '#FFA69E',\n    backgroundColor: state.isSelected ? '#FFA69E' : '#172A3A',\n  }),\n  control: () => ({\n    // none of react-select's styles are passed to <Control />\n    width: 150,\n  }),\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return { ...provided, opacity, transition };\n  }\n}\n\nclass ProgressUpdater extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state={\n\t      selectedOption: { label: \"todo\", value: \"todo\" },\n\t      message: \"\"\n\t    }\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.user) {\n\t\t\tthis.getTopicStatus();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif(this.props.user && !prevProps.user) {\n\t    \tthis.getTopicStatus();\n\t\t}\n\t}\n\n\thandleChange = selectedOption => {\n    \tthis.setState({ \n    \t\tselectedOption: selectedOption,\n    \t\tmessage: \"\"\n    \t}, () => {\n\t    \taxios.post(\"http://localhost:5001/just-for-java/us-central1/app/api/update-topic-status\", { \n\t\t\t\tid: this.props.user.uid,\n\t\t\t\ttopic: this.props.page,\n\t\t\t\tstatus: this.state.selectedOption.value\n\t\t\t})\n\t\t      .then(res => {\n\t\t        console.log(res.data);\n\t\t        this.setState({\n\t\t        \tmessage: \"progress saved!\"\n\t\t        })\n\t\t      })\n\t    })\n\t};\n\n\tgetTopicStatus() {\n    \taxios.get(\"http://localhost:5001/just-for-java/us-central1/app/api/get-topic-status\", { \n\t\t\tparams: {\n      \t\t\tid: this.props.user.uid,\n\t\t\t\ttopic: this.props.page\n    \t\t}\n\t\t})\n\t      .then(res => {\n\t        console.log(res.data);\n\t        if(!res.data.status) {\n\t        \tthis.setState({\n\t        \t\tselectedOption: { label: \"todo\", value: \"todo\" },\n\t        \t\tmessage: \"\"\n\t        \t})\n\t        } else {\n\t        \tthis.setState({\n\t        \t\tselectedOption: { label: res.data.status, value: res.data.status },\n\t        \t\tmessage: \"\"\n\t        \t})\n\t        }\n\t      })\n\t}\n\n\tupdateTopicStatus(){\n\t\tvar status = document.getElementById(\"myProgressUpdater\").value;\n\t\tthis.setState({\n\t      selectedOption: status,\n\t      message: \"\"\n\t    }, () => {\n\t    \taxios.post(\"http://localhost:5001/just-for-java/us-central1/app/api/update-topic-status\", { \n\t\t\t\tid: this.props.user.uid,\n\t\t\t\ttopic: this.props.page,\n\t\t\t\tstatus: this.state.selectedOption\n\t\t\t})\n\t\t      .then(res => {\n\t\t        console.log(res.data);\n\t\t        this.setState({\n\t\t        \tmessage: \"progress saved!\"\n\t\t        })\n\t\t      })\n\t    })\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"progress\">\n\t\t\t\t{this.props.user ? \n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tstyles={customStyles}\n\t\t\t\t\t      \tvalue={this.state.selectedOption}\n\t\t\t\t\t      \tonChange={this.handleChange}\n\t\t\t\t\t      \toptions={options}\n\t\t\t\t\t    />\n\t\t\t\t\t\t{this.state.message}\n\t\t\t\t\t</div>\n\t\t\t\t\t: \"sign in to save your progress!\"\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default ProgressUpdater;"]},"metadata":{},"sourceType":"module"}