{"ast":null,"code":"export const pages = [{\n  name: \"home\",\n  displayName: \"home\",\n  isConceptPage: false\n}, {\n  name: \"about\",\n  displayName: \"about\",\n  isConceptPage: false\n}, {\n  name: \"contact-us\",\n  displayName: \"contact us\",\n  isConceptPage: false\n}, {\n  name: \"getting-started\",\n  displayName: \"getting started\",\n  isConceptPage: true\n}, {\n  name: \"variables\",\n  displayName: \"variables\",\n  isConceptPage: true\n}, {\n  name: \"comments\",\n  displayName: \"comments\",\n  isConceptPage: true\n}, {\n  name: \"printing\",\n  displayName: \"printing\",\n  isConceptPage: true\n}, {\n  name: \"arithmetic\",\n  displayName: \"arithmetic\",\n  isConceptPage: true\n}, {\n  name: \"strings\",\n  displayName: \"strings\",\n  isConceptPage: true\n}, {\n  name: \"escape-sequences\",\n  displayName: \"escape sequences\",\n  isConceptPage: true\n}, {\n  name: \"user-input\",\n  displayName: \"user input\",\n  isConceptPage: true\n}, {\n  name: \"math\",\n  displayName: \"math\",\n  isConceptPage: true\n}, {\n  name: \"if-statement\",\n  displayName: \"if statement\",\n  isConceptPage: true\n}, {\n  name: \"boolean-logic\",\n  displayName: \"boolean logic\",\n  isConceptPage: true\n}, {\n  name: \"constants\",\n  displayName: \"constants\",\n  isConceptPage: true\n}, {\n  name: \"for-loop\",\n  displayName: \"for loop\",\n  isConceptPage: true\n}, {\n  name: \"while-loop\",\n  displayName: \"while loop\",\n  isConceptPage: true\n}, {\n  name: \"nesting\",\n  displayName: \"nesting\",\n  isConceptPage: true\n}, {\n  name: \"break\",\n  displayName: \"break\",\n  isConceptPage: true\n}, {\n  name: \"functions\",\n  displayName: \"functions\",\n  isConceptPage: true\n}, {\n  name: \"overloading\",\n  displayName: \"overloading\",\n  isConceptPage: true\n}, {\n  name: \"array\",\n  displayName: \"array\",\n  isConceptPage: true\n}, {\n  name: \"for-each-loop\",\n  displayName: \"for-each loop\",\n  isConceptPage: true\n}, {\n  name: \"2d-array\",\n  displayName: \"2d array\",\n  isConceptPage: true\n}, {\n  name: \"arraylist\",\n  displayName: \"arraylist\",\n  isConceptPage: true\n}\n/*\n{name: \"hashmap\", displayName: \"hashmap\", isConceptPage: true},\n{name: \"searching\", displayName: \"searching\", isConceptPage: true},\n{name: \"random-numbers\", displayName: \"random numbers\", isConceptPage: true},\n{name: \"ascii\", displayName: \"ascii\", isConceptPage: true}\n*/\n];","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/constants/pages.js"],"names":["pages","name","displayName","isConceptPage"],"mappings":"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","sourcesContent":["export const pages = [\n\t{name: \"home\", displayName: \"home\", isConceptPage: false},\n\t{name: \"about\", displayName: \"about\", isConceptPage: false},\n\t{name: \"contact-us\", displayName: \"contact us\", isConceptPage: false},\n\t{name: \"getting-started\", displayName: \"getting started\", isConceptPage: true},\n\t{name: \"variables\", displayName: \"variables\", isConceptPage: true},\n\t{name: \"comments\", displayName: \"comments\", isConceptPage: true},\n\t{name: \"printing\", displayName: \"printing\", isConceptPage: true},\n\t{name: \"arithmetic\", displayName: \"arithmetic\", isConceptPage: true},\n\t{name: \"strings\", displayName: \"strings\", isConceptPage: true},\n\t{name: \"escape-sequences\", displayName: \"escape sequences\", isConceptPage: true},\n\t{name: \"user-input\", displayName: \"user input\", isConceptPage: true},\n\t{name: \"math\", displayName: \"math\", isConceptPage: true},\n\t{name: \"if-statement\", displayName: \"if statement\", isConceptPage: true},\n\t{name: \"boolean-logic\", displayName: \"boolean logic\", isConceptPage: true},\n\t{name: \"constants\", displayName: \"constants\", isConceptPage: true},\n\t{name: \"for-loop\", displayName: \"for loop\", isConceptPage: true},\n\t{name: \"while-loop\", displayName: \"while loop\", isConceptPage: true},\n\t{name: \"nesting\", displayName: \"nesting\", isConceptPage: true},\n\t{name: \"break\", displayName: \"break\", isConceptPage: true},\n\t{name: \"functions\", displayName: \"functions\", isConceptPage: true},\n\t{name: \"overloading\", displayName: \"overloading\", isConceptPage: true},\n\t{name: \"array\", displayName: \"array\", isConceptPage: true},\n\t{name: \"for-each-loop\", displayName: \"for-each loop\", isConceptPage: true},\n\t{name: \"2d-array\", displayName: \"2d array\", isConceptPage: true},\n\t{name: \"arraylist\", displayName: \"arraylist\", isConceptPage: true},\n\t/*\n\t{name: \"hashmap\", displayName: \"hashmap\", isConceptPage: true},\n\t{name: \"searching\", displayName: \"searching\", isConceptPage: true},\n\t{name: \"random-numbers\", displayName: \"random numbers\", isConceptPage: true},\n\t{name: \"ascii\", displayName: \"ascii\", isConceptPage: true}\n\t*/\n];"]},"metadata":{},"sourceType":"module"}