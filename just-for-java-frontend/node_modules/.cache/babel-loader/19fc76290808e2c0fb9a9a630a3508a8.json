{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/ProgressUpdater.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nconst options = [{\n  label: \"todo\",\n  value: \"todo\"\n}, {\n  label: \"in progress\",\n  value: \"in progress\"\n}, {\n  label: \"complete\",\n  value: \"complete\"\n}];\n\nclass ProgressUpdater extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        status: selectedOption\n      });\n      console.log(\"Option selected:\", selectedOption);\n    };\n\n    this.state = {\n      status: \"todo\",\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.getTopicStatus();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.user && !prevProps.user) {\n      this.getTopicStatus();\n    }\n  }\n\n  getTopicStatus() {\n    axios.get(\"http://localhost:5001/just-for-java/us-central1/app/api/get-topic-status\", {\n      params: {\n        id: this.props.user.uid,\n        topic: this.props.page\n      }\n    }).then(res => {\n      console.log(res.data);\n\n      if (!res.data.status) {\n        this.setState({\n          status: \"todo\",\n          message: \"\"\n        });\n      } else {\n        this.setState({\n          status: res.data.status,\n          message: \"\"\n        });\n      }\n    });\n  }\n\n  updateTopicStatus() {\n    var status = document.getElementById(\"myProgressUpdater\").value;\n    this.setState({\n      status: status,\n      message: \"\"\n    }, () => {\n      axios.post(\"http://localhost:5001/just-for-java/us-central1/app/api/update-topic-status\", {\n        id: this.props.user.uid,\n        topic: this.props.page,\n        status: this.state.status\n      }).then(res => {\n        console.log(res.data);\n        this.setState({\n          message: \"progress saved!\"\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      selectedOption\n    } = this.state.status;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 4\n      }\n    }, this.props.user ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      onChange: this.handleChange,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"myProgressUpdater\",\n      className: \"dropdown\",\n      onChange: this.handleChange,\n      value: this.state.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"todo\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"in progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"in progress\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"complete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, \"complete\")), this.state.message) : \"sign in to save your progress!\");\n  }\n\n}\n\nexport default ProgressUpdater;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/ProgressUpdater.js"],"names":["React","axios","Select","options","label","value","ProgressUpdater","Component","constructor","props","handleChange","selectedOption","setState","status","console","log","state","message","componentDidMount","user","getTopicStatus","componentDidUpdate","prevProps","get","params","id","uid","topic","page","then","res","data","updateTopicStatus","document","getElementById","post","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\n\nconst options = [\n  { label: \"todo\", value: \"todo\" },\n  { label: \"in progress\", value: \"in progress\" },\n  { label: \"complete\", value: \"complete\" }\n];\n\nclass ProgressUpdater extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state={\n\t      status: \"todo\",\n\t      message: \"\"\n\t    }\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.user) {\n\t\t\tthis.getTopicStatus();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif(this.props.user && !prevProps.user) {\n\t    \tthis.getTopicStatus();\n\t\t}\n\t}\n\n\thandleChange = selectedOption => {\n    \tthis.setState({ \n    \t\tstatus: selectedOption \n    \t});\n    \tconsole.log(\"Option selected:\", selectedOption);\n\t  };\n\n\tgetTopicStatus() {\n    \taxios.get(\"http://localhost:5001/just-for-java/us-central1/app/api/get-topic-status\", { \n\t\t\tparams: {\n      \t\t\tid: this.props.user.uid,\n\t\t\t\ttopic: this.props.page\n    \t\t}\n\t\t})\n\t      .then(res => {\n\t        console.log(res.data);\n\t        if(!res.data.status) {\n\t        \tthis.setState({\n\t        \t\tstatus: \"todo\",\n\t        \t\tmessage: \"\"\n\t        \t})\n\t        } else {\n\t        \tthis.setState({\n\t        \t\tstatus: res.data.status,\n\t        \t\tmessage: \"\"\n\t        \t})\n\t        }\n\t      })\n\t}\n\n\tupdateTopicStatus(){\n\t\tvar status = document.getElementById(\"myProgressUpdater\").value;\n\t\tthis.setState({\n\t      status: status,\n\t      message: \"\"\n\t    }, () => {\n\t    \taxios.post(\"http://localhost:5001/just-for-java/us-central1/app/api/update-topic-status\", { \n\t\t\t\tid: this.props.user.uid,\n\t\t\t\ttopic: this.props.page,\n\t\t\t\tstatus: this.state.status\n\t\t\t})\n\t\t      .then(res => {\n\t\t        console.log(res.data);\n\t\t        this.setState({\n\t\t        \tmessage: \"progress saved!\"\n\t\t        })\n\t\t      })\n\t    })\n\t}\n\n\trender(){\n\t\tconst { selectedOption } = this.state.status;\n\t\treturn (\n\t\t\t<div className=\"progress\">\n\t\t\t\t{this.props.user ? \n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t      \n\t\t\t\t\t      onChange={this.handleChange}\n\t\t\t\t\t      options={options}\n\t\t\t\t\t    />\n\t\t\t\t\t\t<select id=\"myProgressUpdater\" className=\"dropdown\" onChange={this.handleChange} value={this.state.status}>\n\t\t\t\t\t\t  <option value=\"todo\">todo</option>\n\t\t\t\t\t\t  <option value=\"in progress\">in progress</option>\n\t\t\t\t\t\t  <option value=\"complete\">complete</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t{this.state.message}\n\t\t\t\t\t</div>\n\t\t\t\t\t: \"sign in to save your progress!\"\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default ProgressUpdater;"]},"metadata":{},"sourceType":"module"}