{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Mathematics.js\";\nimport React from 'react';\n\nclass Mathematics extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }\n    }, \"we've already discussed \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 29\n      }\n    }, \"+\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 39\n      }\n    }, \"-\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 49\n      }\n    }, \"*\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 59\n      }\n    }, \"/\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 73\n      }\n    }, \"%\"), \" (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 83\n      }\n    }, \"psst. need a reminder\"), \" on what these operators mean? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 173\n      }\n    }, \"arithmetics page\"), \"!). but what if we want to do more \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 252\n      }\n    }, \"complex math operations\"), \", such as raising a number to a power, or getting the absolute value of a number? luckily for us, the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 384\n      }\n    }, \"Math\"), \" library provides us with a variety of math constants and complex functions. let's take a look at all of the brand new and super cool functionality the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 547\n      }\n    }, \"Math\"), \" library gives us!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }\n    }), \"(\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 6\n      }\n    }, \"btw:\"), \" if you don't understand some of the mathematical concepts discussed below, that is \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 118\n      }\n    }, \"completely okay\"), \". knowing every single aspect of the Math library isn't essential to your programming journey. the goal of talking about the Math library is simply to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 291\n      }\n    }, \"add more tools into your programming toolbox\"), \". you may never use some of the functionality, but you may use other functionality frequently.)\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }, \"when you just want to eat some good pie\"), \"let's first talk about two \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 32\n      }\n    }, \"mathematical constants\"), \" that the Math library gives us access to: \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 104\n      }\n    }, \"pi\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 118\n      }\n    }, \"e\"), \". (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 129\n      }\n    }, \"btw:\"), \" just some quick technical definitions \\u2013\\xA0pi is the circumference of a circle divided by its diameter, and e is the base of the natural logarithm.) here is the blueprint for \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 330\n      }\n    }, \"retrieving the double value of pi or e\"), \":\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }\n    }, \"Math.PI\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }), \"Math.E\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 10\n      }\n    }), \"now let's try to use this blueprint in code! create a program that creates a double variable to store the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 111\n      }\n    }, \"radius\"), \" of a circle. then your program should create another double variable to store the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 207\n      }\n    }, \"circumference\"), \" of the circle. (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 244\n      }\n    }, \"hint:\"), \" the formula for the circumference of a circle is 2*pi*\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 328\n      }\n    }, \"r\"), \", where \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 344\n      }\n    }, \"r\"), \" is its radius.)\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }), \"your program should look something like this:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, \"double radius = 3.0; \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 26\n      }\n    }, \"//can be any value you want\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }), \"double circumference = 2 * Math.PI * radius;\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, \"when you maxed out your credit card on a shopping spree\"), \"let's learn how to get the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 32\n      }\n    }, \"maximum value\"), \" and the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 61\n      }\n    }, \"minimum value\"), \" between two numbers using the Math library. the two numbers you are comparing can either both be \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 179\n      }\n    }, \"integers\"), \" or both be \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 206\n      }\n    }, \"doubles\"), \" (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 222\n      }\n    }, \"psst. need a reminder\"), \" on what the difference is between an \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 305\n      }\n    }, \"int\"), \" and a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 322\n      }\n    }, \"double\"), \"? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 351\n      }\n    }, \"variables page\"), \"!). here is the blueprint for getting the max and min between two numbers:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, \"Math.max(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }\n    }, \"<first int or double>\"), \", \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 50\n      }\n    }, \"<second int or double>\"), \")\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }), \"Math.min(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }\n    }, \"<first int or double>\"), \", \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 50\n      }\n    }, \"<second int or double>\"), \")\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }\n    }), \"here's a basic example of some code using \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 47\n      }\n    }, \"Math.min()\"), \" that prints out the younger age between two variables: \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 120\n      }\n    }, \"myAge\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 137\n      }\n    }, \"yourAge\"), \" (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 153\n      }\n    }, \"psst. need a reminder\"), \" on why there's a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 216\n      }\n    }, \"+\"), \" sign after the String in the print statement at the bottom of the code? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 311\n      }\n    }, \"Strings page\"), \"!). try to predict what will be printed out to the console!\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }, \"int myAge = 18;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }), \"int yourAge = 16;\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }), \"System.out.print(\\\"the younger age is \\\" + Math.min(myAge, yourAge));\"), \"got your prediction of what will get printed out? let's take a look at the console and see if you were right:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }, \"the younger age is 16\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }), \"now let's do an advanced example \\u2013\\xA0\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 40\n      }\n    }, \"try to find the max integer between three integers.\"), \" you might be thinking, doesn't \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 130\n      }\n    }, \"Math.max()\"), \" only take in \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 161\n      }\n    }, \"two\"), \" integers? you're right... and that's where the challenge comes in. (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 240\n      }\n    }, \"hint:\"), \" you may need to use Math.max() more than once...) think you have an answer? let's take a look at the code below:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, \"int maxedOut = Math.max(5, Math.max(-1, 13)); \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 51\n      }\n    }, \"//maxedOut will store 13\")), \"the variable \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }\n    }, \"maxedOut\"), \" will store the max integer between \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 69\n      }\n    }, \"5\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 82\n      }\n    }, \"Math.max(-1, 13)\"), \". and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 111\n      }\n    }, \"Math.max(-1, 13)\"), \" is equivalent to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 152\n      }\n    }, \"13\"), \". so now we know that \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 183\n      }\n    }, \"maxedOut\"), \" will store \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 210\n      }\n    }, \"Math.max(5, 13)\"), \", which is equivalent to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 257\n      }\n    }, \"13\"), \". and there you have it! you're a max/min master!\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, \"when you have all the power in the world\"), \"how can we \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    }, \"raise a number to a power\"), \"? (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 51\n      }\n    }, \"btw:\"), \" raising a number, \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 98\n      }\n    }, \"base\"), \", to a power, \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 123\n      }\n    }, \"exponent\"), \", can be denoted as \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 158\n      }\n    }, \"base^exponent\"), \". which means that we are multiplying \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 216\n      }\n    }, \"base\"), \" by itself \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 238\n      }\n    }, \"exponent\"), \" times.) we can use \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 273\n      }\n    }, \"Math.pow()\"), \"! here is the blueprint for raising a number, \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 336\n      }\n    }, \"base\"), \", to a power, \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 361\n      }\n    }, \"exponent\"), \":\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }\n    }, \"Math.pow(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 22\n      }\n    }, \"<base>\"), \", \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 43\n      }\n    }, \"<exponent>\"), \")\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }\n    }), \"ready to try it out in code? let's go:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, \"System.out.println(Math.pow(5, 2));\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }), \"System.out.println(Math.pow(2, 3));\"), \"what prints in the console?\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, \"25.0\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }), \"8.0\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }\n    }, \"when you're rooting for your favorite team\"), \"can we do the opposite of raising a number to a power? yes yes yes! we can \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 80\n      }\n    }, \"square root\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 103\n      }\n    }, \"cube root\"), \" a number using \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 135\n      }\n    }, \"Math.sqrt()\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 158\n      }\n    }, \"Math.cbrt()\"), \", respectively. (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 193\n      }\n    }, \"btw:\"), \" square rooting a number is the exact opposite of raising a number to the power of 2; cube rooting a number is the exact opposite of raising a number to the power of 3.) here is the blueprint for calculating the square root and cube root of a number, \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 472\n      }\n    }, \"num\"), \":\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, \"Math.sqrt(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, \"<num>\"), \")\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }), \"Math.cbrt(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"<num>\"), \")\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 10\n      }\n    }), \"ready to try it out in code? let's go:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, \"System.out.println(Math.sqrt(25));\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }), \"System.out.println(Math.cbrt(8));\"), \"what prints in the console?\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    }, \"5.0\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }\n    }), \"2.0\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }, \"when you wish you had a six pack\"), \"next up: \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 14\n      }\n    }, \"absolute value\"), \"! (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 38\n      }\n    }, \"btw:\"), \" the absolute value of a number is its magnitude; in other words, the absolute value of a number is the number without its sign, so the number is always positive.) you can use \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 242\n      }\n    }, \"Math.abs()\"), \" to get the absolute value of either an \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 299\n      }\n    }, \"integer\"), \" or a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 319\n      }\n    }, \"double\"), \". here is the blueprint for getting absolute value using the Math library:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }, \"Math.abs(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"<int or double>\"), \")\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 10\n      }\n    }), \"pretty simple, right? let's see \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, \"abs in action\"), \"!\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }, \"int numberOfAbsIHave = Math.abs(-6); \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 42\n      }\n    }, \"//Math.abs(-6) = 6\")), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }\n    }, \"when you forgot everything you learned in trigonometry\"), \"if you don't know, don't like, or don't care about trigonometry, feel free to skip this section. otherwise, let's get into \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 128\n      }\n    }, \"SOHCAHTOA\"), \" (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 146\n      }\n    }, \"btw:\"), \" sin = opposite/hypotenuse, cos = adjacent/hypotenuse, tan = opposite/adjacent)! here is the blueprint for calculating \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 293\n      }\n    }, \"sine\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 306\n      }\n    }, \"cosine\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 325\n      }\n    }, \"tangent\"), \" of an angle, in radians:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, \"Math.sin(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 14\n      }\n    }, \"<angle_in_radians>\"), \")\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }), \"Math.cos(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 14\n      }\n    }, \"<angle_in_radians>\"), \")\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }), \"Math.tan(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 14\n      }\n    }, \"<angle_in_radians>\"), \")\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 10\n      }\n    }), \"and here's some sample code using all three of these trigonometric functions \\u2013 and using Math.PI:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }\n    }, \"double soh = Math.sin(Math.PI/2); \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 39\n      }\n    }, \"//soh = 1.0\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }\n    }), \"double cah = Math.cos(Math.PI/3); \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 39\n      }\n    }, \"//cah = 0.5\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }\n    }), \"double toa = Math.tan(Math.PI); \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, \"//toa = 0.0\")), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }\n    }, \"when you're partying on the dance floor\"), \"floor\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }\n    }, \"when you're lying in bed staring at the ceiling\"), \"ceil\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }, \"when you're going round and round on the carousel\"), \"round\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }\n    }, \"when you want to buy everything in the mall\"), \"there is so much more cool and complex math functions you can utilize with the Math library! (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 99\n      }\n    }, \"btw:\"), \" if you love trigonometry, the Math library has even more trig functions that you can play with.) unfortunately, we didn't have room to talk about everything in the Math library on this page, but \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 323\n      }\n    }, \"if you want to learn more about the Math library, simply search online\"), \"!\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }\n    }, \"when you realized you don't need to read more about the Math library\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }\n    }, \"woohoo!\"), \" you made it to recap!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 10\n      }\n    }), \"...we know \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 16\n      }\n    }, \"just for java\"), \" is as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 60\n      }\n    }, \"addicting\"), \" as the newest Netflix binge, so what are you waiting for? \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 135\n      }\n    }, \"keep coding!\"));\n  }\n\n}\n\nexport default Mathematics;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Mathematics.js"],"names":["React","Mathematics","Component","constructor","props","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Mathematics extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\twe've already discussed <b>+</b>, <b>-</b>, <b>*</b>, <b>/</b>, and <b>%</b> (<b className=\"note\">psst. need a reminder</b> on what these operators mean? check out the <b className=\"pageName\">arithmetics page</b>!). but what if we want to do more <b>complex math operations</b>, such as raising a number to a power, or getting the absolute value of a number? luckily for us, the <b>Math</b> library provides us with a variety of math constants and complex functions. let's take a look at all of the brand new and super cool functionality the <b>Math</b> library gives us! \n\t\t\t\t<br/>\n\t\t\t\t(<b className=\"note\">btw:</b> if you don't understand some of the mathematical concepts discussed below, that is <b>completely okay</b>. knowing every single aspect of the Math library isn't essential to your programming journey. the goal of talking about the Math library is simply to <b>add more tools into your programming toolbox</b>. you may never use some of the functionality, but you may use other functionality frequently.)\n\t\t\t\t<br/>\n\t\t\t\t<h3>when you just want to eat some good pie</h3>\n\t\t\t\tlet's first talk about two <b>mathematical constants</b> that the Math library gives us access to: <b>pi</b> and <b>e</b>. (<b className=\"note\">btw:</b> just some quick technical definitions – pi is the circumference of a circle divided by its diameter, and e is the base of the natural logarithm.) here is the blueprint for <b>retrieving the double value of pi or e</b>:\n\t\t\t\t<br/>\n\t\t\t\t<b>\n\t\t\t\tMath.PI\n\t\t\t\t<br/>\n\t\t\t\tMath.E\n\t\t\t\t</b>\n\t\t\t\t<br/><br/>\n\t\t\t\tnow let's try to use this blueprint in code! create a program that creates a double variable to store the <b>radius</b> of a circle. then your program should create another double variable to store the <b>circumference</b> of the circle. (<b className=\"note\">hint:</b> the formula for the circumference of a circle is 2*pi*<i>r</i>, where <i>r</i> is its radius.)\n\t\t\t\t<br/>\n\t\t\t\tyour program should look something like this:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tdouble radius = 3.0; <div className=\"comment\">//can be any value you want</div>\n\t\t\t\t<br/>\n\t\t\t\tdouble circumference = 2 * Math.PI * radius;\n\t\t\t\t</div>\n\t\t\t\t<h3>when you maxed out your credit card on a shopping spree</h3>\n\t\t\t\tlet's learn how to get the <b>maximum value</b> and the <b>minimum value</b> between two numbers using the Math library. the two numbers you are comparing can either both be <b>integers</b> or both be <b>doubles</b> (<b className=\"note\">psst. need a reminder</b> on what the difference is between an <b>int</b> and a <b>double</b>? check out the <b className=\"pageName\">variables page</b>!). here is the blueprint for getting the max and min between two numbers:\n\t\t\t\t<br/>\n\t\t\t\t<b>\n\t\t\t\tMath.max(<i>&lt;first int or double&gt;</i>, <i>&lt;second int or double&gt;</i>)\n\t\t\t\t<br/>\n\t\t\t\tMath.min(<i>&lt;first int or double&gt;</i>, <i>&lt;second int or double&gt;</i>)\n\t\t\t\t</b>\n\t\t\t\t<br/><br/>\n\t\t\t\there's a basic example of some code using <b>Math.min()</b> that prints out the younger age between two variables: <i>myAge</i> and <i>yourAge</i> (<b className=\"note\">psst. need a reminder</b> on why there's a <b>+</b> sign after the String in the print statement at the bottom of the code? check out the <b className=\"pageName\">Strings page</b>!). try to predict what will be printed out to the console!\n\t\t\t\t<div className=\"code\">\n\t\t\t\tint myAge = 18;\n\t\t\t\t<br/>\n\t\t\t\tint yourAge = 16;\n\t\t\t\t<br/>\n\t\t\t\tSystem.out.print(\"the younger age is \" + Math.min(myAge, yourAge));\n\t\t\t\t</div>\n\t\t\t\tgot your prediction of what will get printed out? let's take a look at the console and see if you were right:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tthe younger age is 16\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\tnow let's do an advanced example – <b>try to find the max integer between three integers.</b> you might be thinking, doesn't <b>Math.max()</b> only take in <b>two</b> integers? you're right... and that's where the challenge comes in. (<b className=\"note\">hint:</b> you may need to use Math.max() more than once...) think you have an answer? let's take a look at the code below:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tint maxedOut = Math.max(5, Math.max(-1, 13)); <div className=\"comment\">//maxedOut will store 13</div>\n\t\t\t\t</div>\n\t\t\t\tthe variable <i>maxedOut</i> will store the max integer between <b>5</b> and <b>Math.max(-1, 13)</b>. and <b>Math.max(-1, 13)</b> is equivalent to <b>13</b>. so now we know that <i>maxedOut</i> will store <b>Math.max(5, 13)</b>, which is equivalent to <b>13</b>. and there you have it! you're a max/min master!\n\t\t\t\t<h3>when you have all the power in the world</h3>\n\t\t\t\thow can we <b>raise a number to a power</b>? (<b className=\"note\">btw:</b> raising a number, <i>base</i>, to a power, <i>exponent</i>, can be denoted as <i>base^exponent</i>. which means that we are multiplying <i>base</i> by itself <i>exponent</i> times.) we can use <b>Math.pow()</b>! here is the blueprint for raising a number, <i>base</i>, to a power, <i>exponent</i>:\n\t\t\t\t<br/><b>Math.pow(<i>&lt;base&gt;</i>, <i>&lt;exponent&gt;</i>)</b>\n\t\t\t\t<br/><br/>\n\t\t\t\tready to try it out in code? let's go:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tSystem.out.println(Math.pow(5, 2));\n\t\t\t\t<br/>\n\t\t\t\tSystem.out.println(Math.pow(2, 3));\n\t\t\t\t</div>\n\t\t\t\twhat prints in the console?\n\t\t\t\t<div className=\"code\">\n\t\t\t\t25.0\n\t\t\t\t<br/>\n\t\t\t\t8.0\n\t\t\t\t</div>\n\t\t\t\t<h3>when you're rooting for your favorite team</h3>\n\t\t\t\tcan we do the opposite of raising a number to a power? yes yes yes! we can <b>square root</b> and <b>cube root</b> a number using <b>Math.sqrt()</b> and <b>Math.cbrt()</b>, respectively. (<b className=\"note\">btw:</b> square rooting a number is the exact opposite of raising a number to the power of 2; cube rooting a number is the exact opposite of raising a number to the power of 3.) here is the blueprint for calculating the square root and cube root of a number, <i>num</i>:\n\t\t\t\t<b>\n\t\t\t\tMath.sqrt(<i>&lt;num&gt;</i>)\n\t\t\t\t<br/>\n\t\t\t\tMath.cbrt(<i>&lt;num&gt;</i>)\n\t\t\t\t</b>\n\t\t\t\t<br/><br/>\n\t\t\t\tready to try it out in code? let's go:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tSystem.out.println(Math.sqrt(25));\n\t\t\t\t<br/>\n\t\t\t\tSystem.out.println(Math.cbrt(8));\n\t\t\t\t</div>\n\t\t\t\twhat prints in the console?\n\t\t\t\t<div className=\"code\">\n\t\t\t\t5.0\n\t\t\t\t<br/>\n\t\t\t\t2.0\n\t\t\t\t</div>\n\t\t\t\t<h3>when you wish you had a six pack</h3>\n\t\t\t\tnext up: <b>absolute value</b>! (<b className=\"note\">btw:</b> the absolute value of a number is its magnitude; in other words, the absolute value of a number is the number without its sign, so the number is always positive.) you can use <b>Math.abs()</b> to get the absolute value of either an <b>integer</b> or a <b>double</b>. here is the blueprint for getting absolute value using the Math library:\n\t\t\t\t<br/>\n\t\t\t\t<b>Math.abs(<i>&lt;int or double&gt;</i>)</b>\n\t\t\t\t<br/><br/>\n\t\t\t\tpretty simple, right? let's see <b>abs in action</b>!\n\t\t\t\t<div className=\"code\">\n\t\t\t\tint numberOfAbsIHave = Math.abs(-6); <div className=\"comment\">//Math.abs(-6) = 6</div>\n\t\t\t\t</div>\n\t\t\t\t<h3>when you forgot everything you learned in trigonometry</h3>\n\t\t\t\tif you don't know, don't like, or don't care about trigonometry, feel free to skip this section. otherwise, let's get into <b>SOHCAHTOA</b> (<b className=\"note\">btw:</b> sin = opposite/hypotenuse, cos = adjacent/hypotenuse, tan = opposite/adjacent)! here is the blueprint for calculating <b>sine</b>, <b>cosine</b>, and <b>tangent</b> of an angle, in radians:\n\t\t\t\t<br/>\n\t\t\t\t<b>\n\t\t\t\tMath.sin(<i>&lt;angle_in_radians&gt;</i>)\n\t\t\t\t<br/>\n\t\t\t\tMath.cos(<i>&lt;angle_in_radians&gt;</i>)\n\t\t\t\t<br/>\n\t\t\t\tMath.tan(<i>&lt;angle_in_radians&gt;</i>)\n\t\t\t\t</b>\n\t\t\t\t<br/><br/>\n\t\t\t\tand here's some sample code using all three of these trigonometric functions – and using Math.PI:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tdouble soh = Math.sin(Math.PI/2); <div className=\"comment\">//soh = 1.0</div>\n\t\t\t\t<br/>\n\t\t\t\tdouble cah = Math.cos(Math.PI/3); <div className=\"comment\">//cah = 0.5</div>\n\t\t\t\t<br/>\n\t\t\t\tdouble toa = Math.tan(Math.PI); <div className=\"comment\">//toa = 0.0</div>\n\t\t\t\t</div>\n\t\t\t\t<h3>when you're partying on the dance floor</h3>\n\t\t\t\tfloor\n\t\t\t\t<h3>when you're lying in bed staring at the ceiling</h3>\n\t\t\t\tceil\n\t\t\t\t<h3>when you're going round and round on the carousel</h3>\n\t\t\t\tround\n\t\t\t\t<h3>when you want to buy everything in the mall</h3>\n\t\t\t\tthere is so much more cool and complex math functions you can utilize with the Math library! (<b className=\"note\">btw:</b> if you love trigonometry, the Math library has even more trig functions that you can play with.) unfortunately, we didn't have room to talk about everything in the Math library on this page, but <b>if you want to learn more about the Math library, simply search online</b>!\n\t\t\t\t<h3>when you realized you don't need to read more about the Math library</h3>\n\t\t\t\t<b>woohoo!</b> you made it to recap!\n\t\t\t\t<br/><br/>\n\t\t\t\t...we know <b className=\"note\">just for java</b> is as <b>addicting</b> as the newest Netflix binge, so what are you waiting for? <b className=\"pageName\">keep coding!</b>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Mathematics;"]},"metadata":{},"sourceType":"module"}