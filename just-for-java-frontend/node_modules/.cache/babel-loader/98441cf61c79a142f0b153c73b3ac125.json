{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Overloading.js\";\nimport React from 'react';\nimport ProgressUpdater from './ProgressUpdater';\nimport Hint from './Hint';\n\nclass Overloading extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: \"todo\"\n    };\n  }\n\n  updateProgressState(progress) {\n    this.setState({\n      progress: progress\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ProgressUpdater, {\n      page: this.props.page,\n      user: this.props.user,\n      progress: this.state.progress,\n      update: progress => this.updateProgressState(progress),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }), \"mwahaha \\u2013\\xA0we aren't done with \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 44\n      }\n    }, \"functions\"), \" quite yet! there's one last concept we need to address, called \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 124\n      }\n    }, \"overloading\"), \".\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }\n    }, \"overloading, as in you put too many clothes in the laundry machine?\"), \"not rly... but appreciate the effort. \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 52\n      }\n    }, \"overloading\"), \", or more explicitly called method overloading, allows \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 125\n      }\n    }, \"multiple\"), \" functions to have the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 163\n      }\n    }, \"same name\"), \", as long as the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 196\n      }\n    }, \"number of parameters\"), \" and/or the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 235\n      }\n    }, \"type of parameters\"), \" are \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 265\n      }\n    }, \"different\"), \". (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 284\n      }\n    }, \"psst. need a reminder\"), \" on what a parameter is? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 368\n      }\n    }, \"functions page\"), \"!)\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }\n    }, \"woah that definition was overloaded with technical language\"), \"dw! to illustrate the concept of function overloading, let's go through \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 86\n      }\n    }, \"examples pertaining to each of the conditions\"), \".\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }\n    }, \"overloading by type of parameters\"), \"let's say that you want to make a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 48\n      }\n    }, \"sum function\"), \". pretty simple, right? our function \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 104\n      }\n    }, \"takes in two numbers\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 136\n      }\n    }, \"returns their sum\"), \".\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }\n    }, \"overloading by number of parameters\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }\n    }, \"what's the point of overloading anyway?!\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }\n    }, \"feelin' overloaded with info? time to recap!\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }\n    }, \"dang!\"), \" you made it to recap!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }, \"pit stop\"), /*#__PURE__*/React.createElement(ProgressUpdater, {\n      page: this.props.page,\n      user: this.props.user,\n      progress: this.state.progress,\n      update: progress => this.updateProgressState(progress),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }\n    }), \"...we know \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, \"just for java\"), \" is as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 69\n      }\n    }, \"addicting\"), \" as the newest Netflix binge, so what are you waiting for? \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 144\n      }\n    }, \"keep coding!\"));\n  }\n\n}\n\nexport default Overloading;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Overloading.js"],"names":["React","ProgressUpdater","Hint","Overloading","Component","constructor","props","state","progress","updateProgressState","setState","render","page","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProgressUpdater from './ProgressUpdater';\nimport Hint from './Hint';\n\nclass Overloading extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state={\n\t\t\tprogress: \"todo\"\n\t\t}\n\t}\n\n\tupdateProgressState(progress){\n\t\tthis.setState({\n\t\t\tprogress: progress\n\t\t});\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ProgressUpdater\n\t              page={this.props.page} \n\t              user={this.props.user}\n\t              progress={this.state.progress}\n\t              update={(progress)=>this.updateProgressState(progress)}\n\t            />\n\t            mwahaha – we aren't done with <b>functions</b> quite yet! there's one last concept we need to address, called <b>overloading</b>.\n\t            <h3>overloading, as in you put too many clothes in the laundry machine?</h3>\n\t            not rly... but appreciate the effort. <b>overloading</b>, or more explicitly called method overloading, allows <b>multiple</b> functions to have the <b>same name</b>, as long as the <b>number of parameters</b> and/or the <b>type of parameters</b> are <b>different</b>. (<b className=\"note\">psst. need a reminder</b> on what a parameter is? check out the <b className=\"pageName\">functions page</b>!)\n\t            <h3>woah that definition was overloaded with technical language</h3>\n\t            dw! to illustrate the concept of function overloading, let's go through <b>examples pertaining to each of the conditions</b>.\n\t            <h3>overloading by type of parameters</h3>\n\t            let's say that you want to make a <b>sum function</b>. pretty simple, right? our function <b>takes in two numbers</b> and <b>returns their sum</b>. \n\t            <h3>overloading by number of parameters</h3>\n\t            \n\t            <h3>what's the point of overloading anyway?!</h3>\n\n\t            <h3>feelin' overloaded with info? time to recap!</h3>\n\t            <b>dang!</b> you made it to recap!\n\t\t\t\t<br/><br/>\n\t\t\t\t<h3>pit stop</h3>\n\t            <ProgressUpdater\n\t              page={this.props.page} \n\t              user={this.props.user}\n\t              progress={this.state.progress}\n\t              update={(progress)=>this.updateProgressState(progress)}\n\t            />\n\t            ...we know <b className=\"note\">just for java</b> is as <b>addicting</b> as the newest Netflix binge, so what are you waiting for? <b className=\"pageName\">keep coding!</b>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Overloading;"]},"metadata":{},"sourceType":"module"}