{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/ForEachLoop.js\";\nimport React from 'react';\nimport ProgressUpdater from './ProgressUpdater';\nimport Hint from './Hint';\n\nclass ForEachLoop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: \"todo\"\n    };\n  }\n\n  updateProgressState(progress) {\n    this.setState({\n      progress: progress\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ProgressUpdater, {\n      page: this.props.page,\n      user: this.props.user,\n      progress: this.state.progress,\n      update: progress => this.updateProgressState(progress),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }), \"remember when we talked about \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 44\n      }\n    }, \"good ol' for loops\"), \"? (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 72\n      }\n    }, \"psst. need a reminder\"), \" on what these good ol' for loops are? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 170\n      }\n    }, \"for loop page\"), \"!) well there's actually another type of for loop that we haven't talked about yet. (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 296\n      }\n    }, \"btw:\"), \" sry for hiding secrets from you... do you forgive us?) it's called a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 394\n      }\n    }, \"for-each loop\"), \"!\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }\n    }, \"a for-each loop? ngl that sounds kinda lame\"), \"well it isn't.\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }\n    }, \"System.out.print(\\\"haters. back. off.\\\");\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }\n    }, \"only positive vibes allowed beyond this point !!\"), \"for-each loops are used to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 41\n      }\n    }, \"iterate through arrays and other collections that we will talk about later\"), \". burning to know how to make one yourself? here is the blueprint for constructing a for-each loop:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }\n    }, \"for(\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }\n    }, \"<type>\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 38\n      }\n    }, \"<item>\"), \" : \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 60\n      }\n    }, \"<array>\"), \"){\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"*code*\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }\n    }), \"}\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }\n    }), \"let's walk through each of these components\\xA0\\u2013 but in a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 69\n      }\n    }, \"backwards order\"), \" because that makes it the easiest to understand:\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, \"array\"), \" \\u2013 the array or collection you want to iterate through\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, \"item\"), \" \\u2013 each value in the array or collection is stored in this variable each iteration\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, \"type\"), \" \\u2013 the type of the values in the array or collection\")), \"here's a common example of the use of a for-each loop: \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 69\n      }\n    }, \"print the elements of an array\"), \". let's say the array we want to print out is the \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 156\n      }\n    }, \"colors\"), \" array:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }\n    }, \"String[] colors = {\\\"red\\\", \\\"orange\\\", \\\"yellow\\\", \\\"green\\\", \\\"blue\\\", \\\"indigo\\\", \\\"violet\\\"};\"), \"what should our for-each loop look like? (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 56\n      }\n    }, \"hint:\"), \" what would each of the components be?) let's walk through what each of the components should be:\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, \"array\"), \" \\u2013 the array we want to iterate through is \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 74\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 77\n      }\n    }, \"colors\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, \"item\"), \" \\u2013 we can call this variable whatever we want; we can call it \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 92\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 95\n      }\n    }, \"color\")), \", since it stores each value in our array\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, \"type\"), \" \\u2013 our array holds String values, so the type is \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 79\n      }\n    }, \"String\"))), \"inside our loop, we can simply print out \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 55\n      }\n    }, \"color\"), \". check out the code below with our completed for-each loop:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }\n    }, \"for(String color : colors) {\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, \"System.out.println(color);\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }), \"}\"), \"can you guess what shows up in the console? (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 59\n      }\n    }, \"hint:\"), \" what is \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 97\n      }\n    }, \"color\"), \" storing? an index or the actual value?) take a look at the console below, which \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 190\n      }\n    }, \"displays each value in our \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 220\n      }\n    }, \"colors\"), \" array\"), \":\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }\n    }, \"red\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), \"orange\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }\n    }), \"yellow\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 20\n      }\n    }), \"green\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }), \"blue\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }\n    }), \"indigo\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 20\n      }\n    }), \"violet\"), /*#__PURE__*/React.createElement(ProgressUpdater, {\n      page: this.props.page,\n      user: this.props.user,\n      progress: this.state.progress,\n      update: progress => this.updateProgressState(progress),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 14\n      }\n    }), \"...we know \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, \"just for java\"), \" is as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 69\n      }\n    }, \"addicting\"), \" as the newest Netflix binge, so what are you waiting for? \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 144\n      }\n    }, \"keep coding!\"));\n  }\n\n}\n\nexport default ForEachLoop;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/ForEachLoop.js"],"names":["React","ProgressUpdater","Hint","ForEachLoop","Component","constructor","props","state","progress","updateProgressState","setState","render","page","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProgressUpdater from './ProgressUpdater';\nimport Hint from './Hint';\n\nclass ForEachLoop extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state={\n\t\t\tprogress: \"todo\"\n\t\t}\n\t}\n\n\tupdateProgressState(progress){\n\t\tthis.setState({\n\t\t\tprogress: progress\n\t\t});\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ProgressUpdater\n\t              page={this.props.page} \n\t              user={this.props.user}\n\t              progress={this.state.progress}\n\t              update={(progress)=>this.updateProgressState(progress)}\n\t            />\n\t            remember when we talked about <b>good ol' for loops</b>? (<b className=\"note\">psst. need a reminder</b> on what these good ol' for loops are? check out the <b className=\"pageName\">for loop page</b>!) well there's actually another type of for loop that we haven't talked about yet. (<b className=\"note\">btw:</b> sry for hiding secrets from you... do you forgive us?) it's called a <b>for-each loop</b>!\n\t            <h3>a for-each loop? ngl that sounds kinda lame</h3>\n\t            well it isn't.\n\t            <div className=\"code\">\n\t            System.out.print(\"haters. back. off.\");\n\t            </div>\n\t            <h3>only positive vibes allowed beyond this point !!</h3>\n\t            for-each loops are used to <b>iterate through arrays and other collections that we will talk about later</b>. burning to know how to make one yourself? here is the blueprint for constructing a for-each loop:\n\t            <br/>\n\t            <b>\n\t            for(<i>&lt;type&gt;</i> <i>&lt;item&gt;</i> : <i>&lt;array&gt;</i>)&#123;\n\t            <br/>\n\t        \t<p>\n\t        \t\t*code*\n\t        \t</p>\n\t            <br/>\n\t            &#125;\n\t            </b>\n\t            <br/>\n\t            <br/>\n\t            let's walk through each of these components – but in a <b>backwards order</b> because that makes it the easiest to understand:\n\t            <ul>\n\t            \t<li><b>array</b> – the array or collection you want to iterate through</li>\n\t            \t<li><b>item</b> – each value in the array or collection is stored in this variable each iteration</li>\n\t            \t<li><b>type</b> – the type of the values in the array or collection</li>\n\t            </ul>\n\t            here's a common example of the use of a for-each loop: <b>print the elements of an array</b>. let's say the array we want to print out is the <i>colors</i> array:\n\t            <div className=\"code\">\n\t            String[] colors = &#123;\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"&#125;;\n\t            </div>\n\t            what should our for-each loop look like? (<b className=\"note\">hint:</b> what would each of the components be?) let's walk through what each of the components should be:\n\t            <ul>\n\t            \t<li><b>array</b> – the array we want to iterate through is <b><i>colors</i></b></li>\n\t            \t<li><b>item</b> – we can call this variable whatever we want; we can call it <b><i>color</i></b>, since it stores each value in our array</li>\n\t            \t<li><b>type</b> – our array holds String values, so the type is <b>String</b></li>\n\t            </ul>\n\t            inside our loop, we can simply print out <i>color</i>. check out the code below with our completed for-each loop:\n\t            <div className=\"code\">\n\t            for(String color : colors) &#123;\n\t\t\t\t<br/>\n\t\t\t\t<p>\n\t\t\t\t\tSystem.out.println(color);\n\t\t\t\t</p>\n\t\t\t\t<br/>\n\t\t\t\t&#125;\n\t            </div>\n\t            can you guess what shows up in the console? (<b className=\"note\">hint:</b> what is <i>color</i> storing? an index or the actual value?) take a look at the console below, which <b>displays each value in our <i>colors</i> array</b>:\n\t            <div className=\"code\">\n\t            red<br/>\n\t            orange<br/>\n\t            yellow<br/>\n\t            green<br/>\n\t            blue<br/>\n\t            indigo<br/>\n\t            violet\n\t            </div>\n\t            <ProgressUpdater\n\t              page={this.props.page} \n\t              user={this.props.user}\n\t              progress={this.state.progress}\n\t              update={(progress)=>this.updateProgressState(progress)}\n\t            />\n\t            ...we know <b className=\"note\">just for java</b> is as <b>addicting</b> as the newest Netflix binge, so what are you waiting for? <b className=\"pageName\">keep coding!</b>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ForEachLoop;"]},"metadata":{},"sourceType":"module"}