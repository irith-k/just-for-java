{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Arithmetic.js\";\nimport React from 'react';\n\nclass Arithmetic extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }\n    }, \"we learned on the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 23\n      }\n    }, \"variables page\"), \" how to create \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 80\n      }\n    }, \"integers\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 100\n      }\n    }, \"doubles\"), \". on this page, we are going to use these two variable types in \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 178\n      }\n    }, \"arithmetic operations\"), \". oooh, fancy right? not really. \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 239\n      }\n    }, \"arithmetic\"), \" is just a cool-sounding word for the study of numbers and operations on them, such as addition, subtraction, multiplication, and division. here are the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 409\n      }\n    }, \"five operations\"), \" and their corresponding \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 456\n      }\n    }, \"operator symbols\"), \" that java provides:\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 10\n      }\n    }, \"addition\"), \", denoted using \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 41\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 6\n      }\n    }, \"subtraction, denoted using \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 37\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 6\n      }\n    }, \"multiplication, denoted using \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 40\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }\n    }, \"division, denoted using \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 34\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 6\n      }\n    }, \"modulus, denoted using \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 33\n      }\n    }, \"%\"))), \"before we go over each of these arithmetic operations, there is an important nuance we need to discuss. you can apply any of the arithmetic operations listed above between:\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 10\n      }\n    }, \"two integers\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, \"if you perform an operation between two integers, then the resulting value is an \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 92\n      }\n    }, \"integer\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }\n    }, \"two doubles\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, \"if you perform an operation between two doubles, then the resulting value is an \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 91\n      }\n    }, \"double\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }\n    }, \"an integer and a double\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, \"if you perform an operation between an integer and a double, no matter the order, then the resulting value is an \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 124\n      }\n    }, \"double\")))), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, \"+ addition +\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, \"addition\"), \" is denoted using \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 38\n      }\n    }, \"+\"), \" in java.\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, \"- subtraction -\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, \"* multiplication *\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, \"/ division /\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, \"% modulus %\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, \":) recap :)\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, \"gr8!\"), \" you made it to recap!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }\n    }), \"...we know \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }\n    }, \"just for java\"), \" is as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 60\n      }\n    }, \"addicting\"), \" as the newest Netflix binge, so what are you waiting for? \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 135\n      }\n    }, \"keep coding!\"));\n  }\n\n}\n\nexport default Arithmetic;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Arithmetic.js"],"names":["React","Arithmetic","Component","constructor","props","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Arithmetic extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\twe learned on the <b className=\"pageName\">variables page</b> how to create <b>integers</b> and <b>doubles</b>. on this page, we are going to use these two variable types in <b>arithmetic operations</b>. oooh, fancy right? not really. <b>arithmetic</b> is just a cool-sounding word for the study of numbers and operations on them, such as addition, subtraction, multiplication, and division. here are the <b>five operations</b> and their corresponding <b>operator symbols</b> that java provides:\n\t\t\t\t<ul>\n\t\t\t\t\t<li><b>addition</b>, denoted using <b>+</b></li>\n\t\t\t\t\t<li>subtraction, denoted using <b>-</b></li>\n\t\t\t\t\t<li>multiplication, denoted using <b>*</b></li>\n\t\t\t\t\t<li>division, denoted using <b>/</b></li>\n\t\t\t\t\t<li>modulus, denoted using <b>%</b></li>\n\t\t\t\t</ul>\n\t\t\t\tbefore we go over each of these arithmetic operations, there is an important nuance we need to discuss. you can apply any of the arithmetic operations listed above between:\n\t\t\t\t<ul>\n\t\t\t\t\t<li><b>two integers</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>if you perform an operation between two integers, then the resulting value is an <b>integer</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li><b>two doubles</b></li>  \n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>if you perform an operation between two doubles, then the resulting value is an <b>double</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li><b>an integer and a double</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>if you perform an operation between an integer and a double, no matter the order, then the resulting value is an <b>double</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</ul>\n\t\t\t\t<h3>+ addition +</h3>\n\t\t\t\t<b>addition</b> is denoted using <b>+</b> in java.\n\t\t\t\t<h3>- subtraction -</h3>\n\t\t\t\t<h3>* multiplication *</h3>\n\t\t\t\t<h3>/ division /</h3>\n\t\t\t\t<h3>% modulus %</h3>\n\t\t\t\t<h3>:) recap :)</h3>\n\t\t\t\t<b>gr8!</b> you made it to recap!\n\t\t\t\t<br/><br/>\n\t\t\t\t...we know <b className=\"note\">just for java</b> is as <b>addicting</b> as the newest Netflix binge, so what are you waiting for? <b className=\"pageName\">keep coding!</b>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Arithmetic;"]},"metadata":{},"sourceType":"module"}