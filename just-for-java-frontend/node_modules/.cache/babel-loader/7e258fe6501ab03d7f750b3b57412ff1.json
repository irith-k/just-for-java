{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/ProgressUpdater.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nconst options = [{\n  label: \"todo\",\n  value: \"todo\"\n}, {\n  label: \"in progress\",\n  value: \"in progress\"\n}, {\n  label: \"complete\",\n  value: \"complete\"\n}];\n\nclass ProgressUpdater extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption: selectedOption\n      }, () => {\n        axios.post(\"https://us-central1-just-for-java.cloudfunctions.net/app/api/update-topic-status\", {\n          id: this.props.user.uid,\n          topic: this.props.page,\n          status: this.state.selectedOption.value\n        }).then(res => {\n          console.log(res.data);\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.getTopicStatus();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.user && !prevProps.user) {\n      this.getTopicStatus();\n    }\n  }\n\n  getTopicStatus() {\n    axios.get(\"https://us-central1-just-for-java.cloudfunctions.net/app/api/get-topic-status\", {\n      params: {\n        id: this.props.user.uid,\n        topic: this.props.page\n      }\n    }).then(res => {\n      console.log(res.data);\n\n      if (!res.data.status) {\n        this.props.update(\"todo\");\n      } else {\n        this.props.update(res.data.status);\n      }\n    });\n  }\n\n  updateTopicStatus() {\n    var status = document.getElementById(\"myProgressUpdater\").value;\n    this.props.update(status);\n    axios.post(\"https://us-central1-just-for-java.cloudfunctions.net/app/api/update-topic-status\", {\n      id: this.props.user.uid,\n      topic: this.props.page,\n      status: this.state.selectedOption\n    }).then(res => {\n      console.log(res.data);\n    });\n  }\n\n  render() {\n    const selectedOption = {\n      label: this.props.progress,\n      value: this.props.progress\n    };\n    const customStyles = {\n      option: (provided, state) => ({ ...provided,\n        backgroundColor: state.value == \"todo\" ? '#6B9080' : state.value == \"in progress\" ? '#A4C3B2' : '#cce3de',\n        color: '#172A3A'\n      }),\n      control: (provided, state) => ({ ...provided,\n        backgroundColor: this.props.progress == \"todo\" ? '#6B9080' : this.props.progress == \"in progress\" ? '#A4C3B2' : '#cce3de',\n        border: this.props.progress == \"todo\" ? '#6B9080' : this.props.progress == \"in progress\" ? '#A4C3B2' : '#cce3de'\n      }),\n      singleValue: (provided, state) => ({\n        color: '#172A3A'\n      })\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 4\n      }\n    }, this.props.user ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      styles: customStyles,\n      value: selectedOption,\n      onChange: this.handleChange,\n      options: options,\n      isSearchable: false,\n      theme: theme => ({ ...theme,\n        borderRadius: 8,\n        colors: { ...theme.colors,\n          primary: '#FFA69E',\n          primary50: '#FFA69E',\n          neutral20: '#172A3A',\n          neutral60: '#FFA69E',\n          neutral90: '#172A3A'\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    })) : /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 8\n      }\n    }, \"sign in to save your progress! it just takes 13 seconds :)\"));\n  }\n\n}\n\nexport default ProgressUpdater;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/ProgressUpdater.js"],"names":["React","axios","Select","options","label","value","ProgressUpdater","Component","constructor","props","handleChange","selectedOption","setState","post","id","user","uid","topic","page","status","state","then","res","console","log","data","componentDidMount","getTopicStatus","componentDidUpdate","prevProps","get","params","update","updateTopicStatus","document","getElementById","render","progress","customStyles","option","provided","backgroundColor","color","control","border","singleValue","theme","borderRadius","colors","primary","primary50","neutral20","neutral60","neutral90"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\n\nconst options = [\n  { label: \"todo\", value: \"todo\" },\n  { label: \"in progress\", value: \"in progress\" },\n  { label: \"complete\", value: \"complete\" }\n];\n\nclass ProgressUpdater extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.user) {\n\t\t\tthis.getTopicStatus();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif(this.props.user && !prevProps.user) {\n\t    \tthis.getTopicStatus();\n\t\t}\n\t}\n\n\thandleChange = selectedOption => {\n    \tthis.setState({ \n    \t\tselectedOption: selectedOption\n    \t}, () => {\n\t    \taxios.post(\"https://us-central1-just-for-java.cloudfunctions.net/app/api/update-topic-status\", { \n\t\t\t\tid: this.props.user.uid,\n\t\t\t\ttopic: this.props.page,\n\t\t\t\tstatus: this.state.selectedOption.value\n\t\t\t})\n\t\t      .then(res => {\n\t\t        console.log(res.data);\n\t\t      })\n\t    })\n\t};\n\n\tgetTopicStatus() {\n    \taxios.get(\"https://us-central1-just-for-java.cloudfunctions.net/app/api/get-topic-status\", { \n\t\t\tparams: {\n      \t\t\tid: this.props.user.uid,\n\t\t\t\ttopic: this.props.page\n    \t\t}\n\t\t})\n\t      .then(res => {\n\t        console.log(res.data);\n\t        if(!res.data.status) {\n\t        \tthis.props.update(\"todo\");\n\t        } else {\n\t        \tthis.props.update(res.data.status);\n\t        }\n\t      })\n\t}\n\n\tupdateTopicStatus(){\n\t\tvar status = document.getElementById(\"myProgressUpdater\").value;\n\t\tthis.props.update(status);\n    \taxios.post(\"https://us-central1-just-for-java.cloudfunctions.net/app/api/update-topic-status\", { \n\t\t\tid: this.props.user.uid,\n\t\t\ttopic: this.props.page,\n\t\t\tstatus: this.state.selectedOption\n\t\t})\n\t      .then(res => {\n\t        console.log(res.data);\n\t      })\n\t}\n\n\trender(){\n\t\tconst selectedOption = { label: this.props.progress, value: this.props.progress }\n\t\tconst customStyles = {\n\t\t  option: (provided, state) => ({\n\t\t    ...provided,\n\t\t    backgroundColor: state.value == \"todo\" ? '#6B9080' : state.value == \"in progress\" ? '#A4C3B2' : '#cce3de',\n\t\t    color: '#172A3A',\n\t\t  }),\n\t\t  control: (provided, state) => ({\n\t\t  \t...provided,\n\t\t  \tbackgroundColor: this.props.progress == \"todo\" ? '#6B9080' : this.props.progress == \"in progress\" ? '#A4C3B2' : '#cce3de',\n\t\t    border: this.props.progress == \"todo\" ? '#6B9080' : this.props.progress == \"in progress\" ? '#A4C3B2' : '#cce3de',\n\t\t  }),\n\t\t  singleValue: (provided, state) => ({\n\t\t  \tcolor: '#172A3A',\n\t\t  }),\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"progress\">\n\t\t\t\t{this.props.user ? \n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tstyles={customStyles}\n\t\t\t\t\t      \tvalue={selectedOption}\n\t\t\t\t\t      \tonChange={this.handleChange}\n\t\t\t\t\t      \toptions={options}\n\t\t\t\t\t      \tisSearchable={false}\n\t\t\t\t\t      \ttheme={theme => ({\n\t\t\t\t\t\t      ...theme,\n\t\t\t\t\t\t      borderRadius: 8,\n\t\t\t\t\t\t      colors: {\n\t\t\t\t\t\t        ...theme.colors,\n\t\t\t\t\t\t        primary: '#FFA69E',\n\t\t\t\t\t\t        primary50: '#FFA69E',\n\t\t\t\t\t\t        neutral20: '#172A3A',\n\t\t\t\t\t\t\t\tneutral60: '#FFA69E',\n\t\t\t\t\t\t        neutral90: '#172A3A',\n\t\t\t\t\t\t      },\n\t\t\t\t\t\t    })}\n\t\t\t\t\t    />\n\t\t\t\t\t</div>\n\t\t\t\t\t: <b className=\"pageName\">sign in to save your progress! it just takes 13 seconds :)</b>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default ProgressUpdater;"]},"metadata":{},"sourceType":"module"}