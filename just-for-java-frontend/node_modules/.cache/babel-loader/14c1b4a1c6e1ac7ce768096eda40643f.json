{"ast":null,"code":"import _classCallCheck from\"/Users/irithkatiyar/Desktop/just-for-java-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/irithkatiyar/Desktop/just-for-java-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/irithkatiyar/Desktop/just-for-java-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/irithkatiyar/Desktop/just-for-java-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import ProgressUpdater from'./ProgressUpdater';import Hint from'./Hint';import{Link}from\"react-router-dom\";var ForLoop=/*#__PURE__*/function(_React$Component){_inherits(ForLoop,_React$Component);var _super=_createSuper(ForLoop);function ForLoop(props){var _this;_classCallCheck(this,ForLoop);_this=_super.call(this,props);_this.state={progress:\"todo\"};return _this;}_createClass(ForLoop,[{key:\"updateProgressState\",value:function updateProgressState(progress){this.setState({progress:progress});}},{key:\"render\",value:function render(){var _this2=this;window.scrollTo(0,0);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,this.props.page,\":\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(ProgressUpdater,{page:this.props.page,user:this.props.user,progress:this.state.progress,update:function update(progress){return _this2.updateProgressState(progress);}}),\"a \",/*#__PURE__*/React.createElement(\"b\",null,\"loop\"),\" is \",/*#__PURE__*/React.createElement(\"b\",null,\"a repeating block of code\"),\". here, we will focus on \",/*#__PURE__*/React.createElement(\"b\",null,\"for loops\"),\", a type of loop that iterates through your block of code a \",/*#__PURE__*/React.createElement(\"b\",null,\"specific number of times\"),\".\",/*#__PURE__*/React.createElement(\"h3\",null,\"wait, so how do you create a for loop?\"),\"here is the blueprint for creating a for loop:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"b\",null,\"for(\",/*#__PURE__*/React.createElement(\"i\",null,\"initialize\"),\" ; \",/*#__PURE__*/React.createElement(\"i\",null,\"condition\"),\" ; \",/*#__PURE__*/React.createElement(\"i\",null,\"iterate\"),\"){ \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,\"*code*\"),\" \",/*#__PURE__*/React.createElement(\"br\",null),\"}\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"as you can see from the blueprint above, there are three main components to creating a for loop:\",/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"initialize\"),/*#__PURE__*/React.createElement(\"li\",null,\"condition\"),/*#__PURE__*/React.createElement(\"li\",null,\"iterate\")),\"let's walk through each of these components...\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h3\",null,\"what in the world is initialize?\"),\"good question! initializing is the \",/*#__PURE__*/React.createElement(\"b\",null,\"first component\"),\" of your for loop. it works to \",/*#__PURE__*/React.createElement(\"b\",null,\"create the variable\"),\" that you will use to go through your for loop. for initalizing, we always use an \",/*#__PURE__*/React.createElement(\"b\",null,\"int variable\"),\", often denoted by the letter \",/*#__PURE__*/React.createElement(\"b\",null,\"i\"),\". in the initialize section, we create i and set it equal to the \",/*#__PURE__*/React.createElement(\"b\",null,\"start value\"),\". \",/*#__PURE__*/React.createElement(\"br\",null),\"for example, if you want your for loop to print the numbers 1-5, you would \",/*#__PURE__*/React.createElement(\"b\",null,\"set i equal to 1\"),\", because that's the number you want to print first. (\",/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"psst. need a reminder\"),\" on how to create a variable? check out the \",/*#__PURE__*/React.createElement(Link,{className:\"contentLink\",to:\"/variables\"},/*#__PURE__*/React.createElement(\"b\",{className:\"pageName\"},\"variables page\")),\"!)\",/*#__PURE__*/React.createElement(\"h3\",null,\"and what's condition?\"),\"the condition is the \",/*#__PURE__*/React.createElement(\"b\",null,\"second component\"),\". it works to \",/*#__PURE__*/React.createElement(\"b\",null,\"determine when the loop should stop\"),\". you can denote this using \",/*#__PURE__*/React.createElement(\"b\",null,\"<\"),\", \",/*#__PURE__*/React.createElement(\"b\",null,\"<=\"),\", \",/*#__PURE__*/React.createElement(\"b\",null,\">\"),\", or \",/*#__PURE__*/React.createElement(\"b\",null,\">=\"),\" depending on what you want your loop to do.\",/*#__PURE__*/React.createElement(\"br\",null),\"going back to our example of printing out the numbers 1-5, we can make our condition in two ways: \",/*#__PURE__*/React.createElement(\"b\",null,\"i <= 5\"),\" or \",/*#__PURE__*/React.createElement(\"b\",null,\"i < 6\"),\". which one you choose is up to you.\",/*#__PURE__*/React.createElement(\"h3\",null,\"hey, wait! you still have to explain iterate!\"),\"don't worry, we didn't forget :). the iterate portion is our \",/*#__PURE__*/React.createElement(\"b\",null,\"last component\"),\" and works to \",/*#__PURE__*/React.createElement(\"b\",null,\"increment your integer variable\"),\". you can increment by however much you want, \",/*#__PURE__*/React.createElement(\"b\",null,\"either increasing or decreasing\"),\" depending on the direction you would like your loop to go in. if you want your integer to be increased by a certain number, you would type \",/*#__PURE__*/React.createElement(\"b\",null,\"i += \",/*#__PURE__*/React.createElement(\"i\",null,\"<number you want to increase by each time>\")),\". if you want your integer to be decreased by a certain number, you would type \",/*#__PURE__*/React.createElement(\"b\",null,\"i -= \",/*#__PURE__*/React.createElement(\"i\",null,\"<number you want to decrease by each time>\")),\". a shortcut for increasing i by 1 each time is typing \",/*#__PURE__*/React.createElement(\"b\",null,\"i++\"),\", while a shortcut for decreasing i by 1 is... you guessed it: \",/*#__PURE__*/React.createElement(\"b\",null,\"i--\"),\". you can also use multiplication (\",/*#__PURE__*/React.createElement(\"b\",null,\"i *=\"),\")and division (\",/*#__PURE__*/React.createElement(\"b\",null,\"i /=\"),\"), but addition and subtraction are the most common.\",/*#__PURE__*/React.createElement(\"br\",null),\"going back to our example of printing numbers 1-5, we would want to increase i by 1 each time. so, for our last component of the for loop, we would type \",/*#__PURE__*/React.createElement(\"b\",null,\"i++\"),\". (\",/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"btw:\"),\" don't forget the semicolons between each of the three components.)\",/*#__PURE__*/React.createElement(\"h3\",null,\"and for some examples...\"),\"here is our example from above fully coded out:\",/*#__PURE__*/React.createElement(\"div\",{className:\"code\"},\"for(int i = 1; i <= 5; i++) { \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,\"System.out.print(i + \\\" \\\");\"),\" \",/*#__PURE__*/React.createElement(\"div\",{className:\"comment\"},\"//the \\\" \\\" is to add a space between the numbers when printing\"),/*#__PURE__*/React.createElement(\"br\",null),\"}\",/*#__PURE__*/React.createElement(\"br\",null)),\"the code above prints out the following in the console:\",/*#__PURE__*/React.createElement(\"div\",{className:\"code\"},\"1 2 3 4 5\"),/*#__PURE__*/React.createElement(\"h3\",null,\"...and here's another example:\"),\"in this example, we want to use a for loop to add up the powers of 2 between 1 and 100. sounds difficult, i know, but let's break down the problem.\",/*#__PURE__*/React.createElement(\"br\",null),\"remember, the first thing we want to do is \",/*#__PURE__*/React.createElement(\"b\",null,\"make our integer i\"),\". (\",/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"hint:\"),\" think about what number we want to start at.) next, we want our \",/*#__PURE__*/React.createElement(\"b\",null,\"condition\"),\". (\",/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"hint:\"),\" there are two ways to write this part.) and lastly, we will need to \",/*#__PURE__*/React.createElement(\"b\",null,\"increment our integer\"),\" in a way to get the \",/*#__PURE__*/React.createElement(\"b\",null,\"powers of 2\"),\". i'll let you think of that one for a bit. (\",/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"hint:\"),\" think back to your math class.)\",/*#__PURE__*/React.createElement(\"br\",null),\"now, inside the for loop we will need a way to add our number to a sum... hmm... might need to remember some things from the \",/*#__PURE__*/React.createElement(Link,{className:\"contentLink\",to:\"/variables\"},/*#__PURE__*/React.createElement(\"b\",{className:\"pageName\"},\"variables page\")),\" for this part. ok, got it? let's see it coded out!\",/*#__PURE__*/React.createElement(\"div\",{className:\"code\"},\"int sum = 0; \",/*#__PURE__*/React.createElement(\"div\",{className:\"comment\"},\"//this variable will keep track of our sum in our for loop\"),/*#__PURE__*/React.createElement(\"br\",null),\"for(int i = 1; i <= 100; i*=2){\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,\"sum += i; \",/*#__PURE__*/React.createElement(\"div\",{className:\"comment\"},\"//+= is a shortcut for saying sum = sum + i.\")),/*#__PURE__*/React.createElement(\"br\",null),\"}\"),/*#__PURE__*/React.createElement(\"b\",null,\"i*=2\"),\" works by multiplying i by 2 each time it iterates through the for loop. so, with this in mind, i would start at 1, then 2, then 4, then 8, then 16, and so on.\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h3\",null,\"...and last example, we promise:\"),\"in the first example, we printed out \",/*#__PURE__*/React.createElement(\"b\",null,\"i\"),\", and in the second example, we added \",/*#__PURE__*/React.createElement(\"b\",null,\"i\"),\" to a \",/*#__PURE__*/React.createElement(\"i\",null,\"sum\"),\" variable. in this last example, i want to show you a different way that you can use the iterator variable, \",/*#__PURE__*/React.createElement(\"b\",null,\"int i\"),\". what if \",/*#__PURE__*/React.createElement(\"b\",null,\"i\"),\" represented an \",/*#__PURE__*/React.createElement(\"b\",null,\"index\"),\" in a \",/*#__PURE__*/React.createElement(\"b\",null,\"String\"),\"? (\",/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"psst. need a reminder\"),\" on what an index is and how it relates to Strings? check out the \",/*#__PURE__*/React.createElement(Link,{className:\"contentLink\",to:\"/strings\"},/*#__PURE__*/React.createElement(\"b\",{className:\"pageName\"},\"strings page\")),\"!) let's try to use a for loop to \",/*#__PURE__*/React.createElement(\"b\",null,\"iterate through each character in a String\"),\".\",/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"for the first component of our for loop, \",/*#__PURE__*/React.createElement(\"b\",null,\"initialize\"),\", we want to set \",/*#__PURE__*/React.createElement(\"b\",null,\"int i\"),\" to the starting value. what should our starting value be? (\",/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"hint:\"),\" think about what number indexing start at.) because \",/*#__PURE__*/React.createElement(\"b\",null,\"indexing starts at 0\"),\", our first component should be \",/*#__PURE__*/React.createElement(\"b\",null,\"int i = 0\"),\".\"),/*#__PURE__*/React.createElement(\"li\",null,\"for the second component of our for loop, \",/*#__PURE__*/React.createElement(\"b\",null,\"condition\"),\", we want to answer the question: when should our for loop stop? (\",/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"hint:\"),\" our for loop should stop after we've looped through each index in the given String.) we learned on the \",/*#__PURE__*/React.createElement(Link,{className:\"contentLink\",to:\"/strings\"},/*#__PURE__*/React.createElement(\"b\",{className:\"pageName\"},\"strings page\")),\" that indexing goes from 0, inclusive, till the length of the String, exclusive (\",/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"btw:\"),\" the length of a String is equal to the number of characters in the String). that means that we want our for loop to keep going as long as \",/*#__PURE__*/React.createElement(\"b\",null,\"i is less than the length of the String\"),\". (\",/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"btw:\"),\" to get the length of a String \",/*#__PURE__*/React.createElement(\"i\",null,\"str\"),\", use the syntax \",/*#__PURE__*/React.createElement(\"b\",null,\"str.length()\"),\".) therefore, our second component should be \",/*#__PURE__*/React.createElement(\"b\",null,\"i < str.length()\"),\".\"),/*#__PURE__*/React.createElement(\"li\",null,\"for the third component of our for loop, \",/*#__PURE__*/React.createElement(\"b\",null,\"iterate\"),\", we want to think about what should happen to \",/*#__PURE__*/React.createElement(\"b\",null,\"i\"),\" each time we iterate. since \",/*#__PURE__*/React.createElement(\"b\",null,\"i\"),\" is the index, we want \",/*#__PURE__*/React.createElement(\"b\",null,\"i\"),\" to increase by 1 each time since \",/*#__PURE__*/React.createElement(\"b\",null,\"we are moving to the next index each iteration\"),\", so our third component should be \",/*#__PURE__*/React.createElement(\"b\",null,\"i++\"),\".\")),\"now that we have all three components of our for loop, \",/*#__PURE__*/React.createElement(\"b\",null,\"let's code it!\"),\" let's have our program print out each character in String \",/*#__PURE__*/React.createElement(\"i\",null,\"str\"),\" on its own line. (\",/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"psst. need a reminder\"),\" of how to use \",/*#__PURE__*/React.createElement(\"b\",null,\"charAt()\"),\" to get the character at a given index in a String? check out the \",/*#__PURE__*/React.createElement(Link,{className:\"contentLink\",to:\"/strings\"},/*#__PURE__*/React.createElement(\"b\",{className:\"pageName\"},\"strings page\")),\"!)\",/*#__PURE__*/React.createElement(\"div\",{className:\"code\"},\"String str = \\\"happy birthday\\\";\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"comment\"},\"//loop through each character in str\"),/*#__PURE__*/React.createElement(\"br\",null),\"for(int i = 0; i <= str.length(); i++){\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"comment\"},\"//use charAt() to print out each character on its own line\"),/*#__PURE__*/React.createElement(\"br\",null),\"System.out.println(str.charAt(i));\"),/*#__PURE__*/React.createElement(\"br\",null),\"}\"),\"the code above prints out the following in the console:\",/*#__PURE__*/React.createElement(\"div\",{className:\"code\"},\"h\",/*#__PURE__*/React.createElement(\"br\",null),\"a\",/*#__PURE__*/React.createElement(\"br\",null),\"p\",/*#__PURE__*/React.createElement(\"br\",null),\"p\",/*#__PURE__*/React.createElement(\"br\",null),\"y\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"b\",/*#__PURE__*/React.createElement(\"br\",null),\"i\",/*#__PURE__*/React.createElement(\"br\",null),\"r\",/*#__PURE__*/React.createElement(\"br\",null),\"t\",/*#__PURE__*/React.createElement(\"br\",null),\"h\",/*#__PURE__*/React.createElement(\"br\",null),\"d\",/*#__PURE__*/React.createElement(\"br\",null),\"a\",/*#__PURE__*/React.createElement(\"br\",null),\"y\",/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"h3\",null,\"is it really time for recap? get it. for. hehe.\"),/*#__PURE__*/React.createElement(\"b\",null,\"ayyyyyy!\"),\" you made it to recap!\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"now, i know that was a lot, so here's a lil' summary:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"a \",/*#__PURE__*/React.createElement(\"b\",null,\"loop\"),\" is a repeating block of code. one type of loop is a \",/*#__PURE__*/React.createElement(\"b\",null,\"for loop\"),\", which helps to loop through a block of code a \",/*#__PURE__*/React.createElement(\"b\",null,\"specific number of times\"),\". here is the blueprint for creating a for loop:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"b\",null,\"for(\",/*#__PURE__*/React.createElement(\"i\",null,\"initialize\"),\" ; \",/*#__PURE__*/React.createElement(\"i\",null,\"condition\"),\" ; \",/*#__PURE__*/React.createElement(\"i\",null,\"iterate\"),\"){ \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,\"*code*\"),\" \",/*#__PURE__*/React.createElement(\"br\",null),\"}\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"there are three parts to a for loop:\",/*#__PURE__*/React.createElement(\"ol\",null,/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"b\",null,\"initialize\"),\", when you make your integer \",/*#__PURE__*/React.createElement(\"b\",null,\"i\"),\" and set it equal to the start number\"),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"b\",null,\"condition\"),\", where you decide \",/*#__PURE__*/React.createElement(\"b\",null,\"how\"),\" and \",/*#__PURE__*/React.createElement(\"b\",null,\"when\"),\" your loop should stop using the different signs\"),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"b\",null,\"iterate\"),\", where you \",/*#__PURE__*/React.createElement(\"b\",null,\"increment\"),\" your integer a specific amount each time it loops through your code\")),/*#__PURE__*/React.createElement(\"h3\",null,\"pit stop\"),/*#__PURE__*/React.createElement(\"div\",{className:\"problem\"},/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"blast off:\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"your \",/*#__PURE__*/React.createElement(\"b\",null,\"goal\"),\" is to use \",/*#__PURE__*/React.createElement(\"b\",null,\"for loops\"),\" to \",/*#__PURE__*/React.createElement(\"b\",null,\"print out a count down before the blast off of a rocket ship\"),\". this will require two steps:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"ol\",null,/*#__PURE__*/React.createElement(\"li\",null,\"construct a for loop that counts down from 5 to 1\"),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"each number should be printed to the console on its own line\")),/*#__PURE__*/React.createElement(\"li\",null,\"after the for loop is over, print \\\"blast off!\\\" to the console\")),/*#__PURE__*/React.createElement(Hint,{hints:[\"for step 1, your initialize component should be int i = 5 since your countdown begins at 5\",\"for step 1, your condition component should be i >= 1 because your countdown ends at 1, so as long as i is greater than or equal to 1, the countdown should keep going\",\"for step 1, your iterate component should be i-- because you want i to decrement, or decrease by 1, each iteration, since you are counting down\"],id:\"for-loop-blast-off\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"repl\"},/*#__PURE__*/React.createElement(\"iframe\",{height:\"400px\",width:\"100%\",src:\"https://repl.it/@justforjava/for-loop-blast-off?lite=true\",scrolling:\"no\",frameborder:\"no\",allowtransparency:\"true\",allowfullscreen:\"true\",sandbox:\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"solution\"},/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"our solution:\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"below is \",/*#__PURE__*/React.createElement(\"b\",null,\"our solution\"),\" for the problem above. the \",/*#__PURE__*/React.createElement(\"b\",null,\"comments\"),\" help to explain how to code each step. hopefully your code looks similar to ours \",/*#__PURE__*/React.createElement(\"b\",null,\":)\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"repl\"},/*#__PURE__*/React.createElement(\"iframe\",{height:\"400px\",width:\"100%\",src:\"https://repl.it/@justforjava/for-loop-blast-off-solution?lite=true\",scrolling:\"no\",frameborder:\"no\",allowtransparency:\"true\",allowfullscreen:\"true\",sandbox:\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"problem\"},/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"nibble nibble nom nom:\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"your \",/*#__PURE__*/React.createElement(\"b\",null,\"goal\"),\" is to use \",/*#__PURE__*/React.createElement(\"b\",null,\"for loops\"),\" to print out \",/*#__PURE__*/React.createElement(\"b\",null,\"nibble\"),\" and \",/*#__PURE__*/React.createElement(\"b\",null,\"nom\"),\" multiple times; an example output may look like this: \\\"nibble nibble nibble nom nom nom\\\". this will require four steps: \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"ol\",null,/*#__PURE__*/React.createElement(\"li\",null,\"create a variable \",/*#__PURE__*/React.createElement(\"i\",null,\"n\"),\" that stores how many times you want to print out nibble and nom\"),/*#__PURE__*/React.createElement(\"li\",null,\"construct a for loop that iterates \",/*#__PURE__*/React.createElement(\"i\",null,\"n\"),\" times\"),/*#__PURE__*/React.createElement(\"li\",null,\"inside the for loop, print out nibble\"),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"we want our nibbles and noms to all appear on the same line when they are printed\"),/*#__PURE__*/React.createElement(\"li\",null,\"we also want a space in between each nibble and nom\")),/*#__PURE__*/React.createElement(\"li\",null,\"construct a second for loop that prints out nom \",/*#__PURE__*/React.createElement(\"i\",null,\"n\"),\" times\"),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"this construction should be almost identical to what you did in steps 2 and 3\"),/*#__PURE__*/React.createElement(\"li\",null,\"the only difference is that you are printing nom instead of nibble\"))),/*#__PURE__*/React.createElement(Hint,{hints:[\"for step 2, your initialize component should be int i = 1 and your iterate component should be i++, because you want i to increment each time you loop\",\"for step 2, since you want your for loop to iterate n times, where n is how many times you want to print out nibble and nom, your condition component should be i <= n\",\"for step 3, you can use same-line printing - System.out.print() – so that your nibbles and noms are on the same line in the console\",\"for step 3, add a space after nibble and nom when you print them out inside your for loops\"],id:\"for-loop-nibble-nibble-nom-nom\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"repl\"},/*#__PURE__*/React.createElement(\"iframe\",{height:\"400px\",width:\"100%\",src:\"https://repl.it/@justforjava/for-loop-nibble-nibble-nom-nom?lite=true\",scrolling:\"no\",frameborder:\"no\",allowtransparency:\"true\",allowfullscreen:\"true\",sandbox:\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"solution\"},/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"our solution:\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"below is \",/*#__PURE__*/React.createElement(\"b\",null,\"our solution\"),\" for the problem above. the \",/*#__PURE__*/React.createElement(\"b\",null,\"comments\"),\" help to explain how to code each step. hopefully your code looks similar to ours \",/*#__PURE__*/React.createElement(\"b\",null,\":)\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"repl\"},/*#__PURE__*/React.createElement(\"iframe\",{height:\"400px\",width:\"100%\",src:\"https://repl.it/@justforjava/for-loop-nibble-nibble-nom-nom-solution?lite=true\",scrolling:\"no\",frameborder:\"no\",allowtransparency:\"true\",allowfullscreen:\"true\",sandbox:\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(ProgressUpdater,{page:this.props.page,user:this.props.user,progress:this.state.progress,update:function update(progress){return _this2.updateProgressState(progress);}}),\"...we know \",/*#__PURE__*/React.createElement(\"b\",{className:\"note\"},\"just for java\"),\" is as \",/*#__PURE__*/React.createElement(\"b\",null,\"addicting\"),\" as the newest Netflix binge, so what are you waiting for? \",/*#__PURE__*/React.createElement(Link,{className:\"contentLink\",to:\"/while-loop\"},/*#__PURE__*/React.createElement(\"b\",{className:\"pageName\"},\"keep coding!\")));}}]);return ForLoop;}(React.Component);export default ForLoop;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/ForLoop.js"],"names":["React","ProgressUpdater","Hint","Link","ForLoop","props","state","progress","setState","window","scrollTo","page","user","updateProgressState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProgressUpdater from './ProgressUpdater';\nimport Hint from './Hint';\nimport {\n  Link\n} from \"react-router-dom\";\n\n\nclass ForLoop extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state={\n\t\t\tprogress: \"todo\"\n\t\t}\n\t}\n\n\tupdateProgressState(progress){\n\t\tthis.setState({\n\t\t\tprogress: progress\n\t\t});\n\t}\n\n\n\trender(){\n\t\twindow.scrollTo(0, 0);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>{this.props.page}:</h2><br/>\n\t\t\t\t<ProgressUpdater\n\t              page={this.props.page} \n\t              user={this.props.user}\n\t              progress={this.state.progress}\n\t              update={(progress)=>this.updateProgressState(progress)}\n\t            />\n\t\t\t\ta <b>loop</b> is <b>a repeating block of code</b>. here, we will focus on <b>for loops</b>, a type of loop that iterates through your block of code a <b>specific number of times</b>.\n\t\t\t\t<h3>wait, so how do you create a for loop?</h3>\n\t\t\t\there is the blueprint for creating a for loop:<br/>\n\t\t\t\t<b>for(<i>initialize</i> ; <i>condition</i> ; <i>iterate</i>)&#123; <br/>\n\t\t\t\t<p>*code*</p> <br/>\n\t\t\t\t&#125;</b><br/><br/>\n\t\t\t\tas you can see from the blueprint above, there are three main components to creating a for loop: \n\t\t\t\t<ul>\n\t\t\t\t\t<li>initialize</li>\n\t\t\t\t\t<li>condition</li>\n\t\t\t\t\t<li>iterate</li>\n\t\t\t\t</ul>\n\t\t\t\tlet's walk through each of these components...\n\t\t\t\t<br/>\n\t\t\t\t<h3>what in the world is initialize?</h3>\n\t\t\t\tgood question! initializing is the <b>first component</b> of your for loop. it works to <b>create the variable</b> that you will use to go through your for loop.\n\t\t\t\tfor initalizing, we always use an <b>int variable</b>, often denoted by the letter <b>i</b>.  \n\t\t\t\tin the initialize section, we create i and set it equal to the <b>start value</b>. <br/>\n\t\t\t\tfor example, if you want your for loop to print the numbers 1-5, you would <b>set i equal to 1</b>, because that's the number you want to print first.\n\t\t\t\t(<b className=\"note\">psst. need a reminder</b> on how to create a variable? check out the <Link className=\"contentLink\" to=\"/variables\"><b className=\"pageName\">variables page</b></Link>!)\n\n\t\t\t\t<h3>and what's condition?</h3>\n\t\t\t\tthe condition is the <b>second component</b>. it works to <b>determine when the loop should stop</b>. you can denote this using <b>&lt;</b>, <b>&lt;=</b>, <b>&gt;</b>, or <b>&gt;=</b> depending on what you want your loop to do.\n\t\t\t\t<br/>going back to our example of printing out the numbers 1-5, we can make our condition in two ways: <b>i &lt;= 5</b> or <b>i &lt; 6</b>. which one you choose is up to you.\n\t\t\t\t\n\t\t\t\t<h3>hey, wait! you still have to explain iterate!</h3>\n\t\t\t\tdon't worry, we didn't forget :). the iterate portion is our <b>last component</b> and works to <b>increment your integer variable</b>. you can increment by however much you want, <b>either increasing or decreasing</b> depending on the direction you would like your loop to go in. \n\t\t\t\tif you want your integer to be increased by a certain number, you would type <b>i += <i>&lt;number you want to increase by each time&gt;</i></b>. \n\t\t\t\tif you want your integer to be decreased by a certain number, you would type <b>i -= <i>&lt;number you want to decrease by each time&gt;</i></b>.\n\t\t\t\ta shortcut for increasing i by 1 each time is typing <b>i++</b>, while a shortcut for decreasing i by 1 is... you guessed it: <b>i--</b>.\n\t\t\t\tyou can also use multiplication (<b>i *=</b>)and division (<b>i /=</b>), but addition and subtraction are the most common.\n\t\t\t\t<br/>going back to our example of printing numbers 1-5, we would want to increase i by 1 each time. so, for our last component of the for loop, we would type <b>i++</b>.\n\t\t\t\t(<b className=\"note\">btw:</b> don't forget the semicolons between each of the three components.)\n\t\t\t\t<h3>and for some examples...</h3>\n\t\t\t\there is our example from above fully coded out: \n\t\t\t\t<div className=\"code\">\n\t\t\t\t\tfor(int i = 1; i &lt;= 5; i++) &#123; <br/>\n\t\t\t\t\t\t<p>System.out.print(i + \" \");</p> <div className = \"comment\">//the \" \" is to add a space between the numbers when printing</div><br/>\n\t\t\t\t\t&#125;<br/>\n\t\t\t\t</div>\n\t\t\t\tthe code above prints out the following in the console:\n\t\t\t\t<div className=\"code\">\n\t\t\t\t\t1 2 3 4 5\n\t\t\t\t</div>\n\t\t\t\t<h3>...and here's another example:</h3>\n\t\t\t\tin this example, we want to use a for loop to add up the powers of 2 between 1 and 100. sounds difficult, i know, but let's break down the problem.<br/>\n\t\t\t\tremember, the first thing we want to do is <b>make our integer i</b>. (<b className=\"note\">hint:</b> think about what number we want to start at.) \n\t\t\t\tnext, we want our <b>condition</b>. (<b className=\"note\">hint:</b> there are two ways to write this part.)\n\t\t\t\tand lastly, we will need to <b>increment our integer</b> in a way to get the <b>powers of 2</b>. i'll let you think of that one for a bit. (<b className=\"note\">hint:</b> think back to your math class.)<br/> \n\t\t\t\tnow, inside the for loop we will need a way to add our number to a sum... hmm... might need to remember some things from the <Link className=\"contentLink\" to=\"/variables\"><b className=\"pageName\">variables page</b></Link> for this part.\n\t\t\t\tok, got it? let's see it coded out!\n\t\t\t\t<div className=\"code\">\n\t\t\t\t\tint sum = 0; <div className = \"comment\">//this variable will keep track of our sum in our for loop</div><br/>\n\t\t\t\t\tfor(int i = 1; i &lt;= 100; i*=2)&#123;<br/>\n\t\t\t\t\t\t<p>sum += i; <div className=\"comment\">//+= is a shortcut for saying sum = sum + i.</div></p><br/>\n\t\t\t\t\t&#125;\n\t\t\t\t</div>\n\t\t\t\t<b>i*=2</b> works by multiplying i by 2 each time it iterates through the for loop. so, with this in mind, i would start at 1, then 2, then 4, then 8, then 16, and so on.<br/>\n\t\t\t\t<h3>...and last example, we promise:</h3>\n\t\t\t\tin the first example, we printed out <b>i</b>, and in the second example, we added <b>i</b> to a <i>sum</i> variable. in this last example, i want to show you a different way that you can use the iterator variable, <b>int i</b>. \n\t\t\t\twhat if <b>i</b> represented an <b>index</b> in a <b>String</b>? (<b className=\"note\">psst. need a reminder</b> on what an index is and how it relates to Strings? check out the <Link className=\"contentLink\" to=\"/strings\"><b className=\"pageName\">strings page</b></Link>!) let's try to use a for loop to <b>iterate through each character in a String</b>. \n\t\t\t\t<ul>\n\t\t\t\t\t<li>for the first component of our for loop, <b>initialize</b>, we want to set <b>int i</b> to the starting value. what should our starting value be? (<b className=\"note\">hint:</b> think about what number indexing start at.) because <b>indexing starts at 0</b>, our first component should be <b>int i = 0</b>.</li>\n\t\t\t\t\t<li>for the second component of our for loop, <b>condition</b>, we want to answer the question: when should our for loop stop? (<b className=\"note\">hint:</b> our for loop should stop after we've looped through each index in the given String.) we learned on the <Link className=\"contentLink\" to=\"/strings\"><b className=\"pageName\">strings page</b></Link> that indexing goes from 0, inclusive, till the length of the String, exclusive (<b className=\"note\">btw:</b> the length of a String is equal to the number of characters in the String). that means that we want our for loop to keep going as long as <b>i is less than the length of the String</b>. (<b className=\"note\">btw:</b> to get the length of a String <i>str</i>, use the syntax <b>str.length()</b>.) therefore, our second component should be <b>i &lt; str.length()</b>.</li>\n\t\t\t\t\t<li>for the third component of our for loop, <b>iterate</b>, we want to think about what should happen to <b>i</b> each time we iterate. since <b>i</b> is the index, we want <b>i</b> to increase by 1 each time since <b>we are moving to the next index each iteration</b>, so our third component should be <b>i++</b>.</li>\n\t\t\t\t</ul>\n\t\t\t\tnow that we have all three components of our for loop, <b>let's code it!</b> let's have our program print out each character in String <i>str</i> on its own line. (<b className=\"note\">psst. need a reminder</b> of how to use <b>charAt()</b> to get the character at a given index in a String? check out the <Link className=\"contentLink\" to=\"/strings\"><b className=\"pageName\">strings page</b></Link>!)\n\t\t\t\t<div className=\"code\">\n\t\t\t\tString str = \"happy birthday\";\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"comment\">//loop through each character in str</div>\n\t\t\t\t<br/>\n\t\t\t\tfor(int i = 0; i &lt;= str.length(); i++)&#123;<br/>\n\t\t\t\t<p>\n\t\t\t\t\t<div className=\"comment\">//use charAt() to print out each character on its own line</div><br/>\n\t\t\t\t\tSystem.out.println(str.charAt(i));\n\t\t\t\t</p><br/>\n\t\t\t\t&#125;\n\t\t\t\t</div>\n\t\t\t\tthe code above prints out the following in the console:\n\t\t\t\t<div className=\"code\">\n\t\t\t\th<br/>\n\t\t\t\ta<br/>\n\t\t\t\tp<br/>\n\t\t\t\tp<br/>\n\t\t\t\ty<br/>\n\t\t\t\t <br/>\n\t\t\t\tb<br/>\n\t\t\t\ti<br/>\n\t\t\t\tr<br/>\n\t\t\t\tt<br/>\n\t\t\t\th<br/>\n\t\t\t\td<br/>\n\t\t\t\ta<br/>\n\t\t\t\ty<br/>\n\t\t\t\t</div>\n\t\t\t\t<h3>is it really time for recap? get it. for. hehe.</h3>\n\t\t\t\t<b>ayyyyyy!</b> you made it to recap!<br/><br/>\n\t\t\t\tnow, i know that was a lot, so here's a lil' summary:<br/><br/>\n\t\t\t\ta <b>loop</b> is a repeating block of code. one type of loop is a <b>for loop</b>, which helps to loop through a block of code a <b>specific number of times</b>. here is the blueprint for creating a for loop:<br/>\n\t\t\t\t<b>for(<i>initialize</i> ; <i>condition</i> ; <i>iterate</i>)&#123; <br/>\n\t\t\t\t<p>*code*</p> <br/>\n\t\t\t\t&#125;</b><br/><br/>\n\t\t\t\tthere are three parts to a for loop: \n\t\t\t\t<ol>\n\t\t\t\t\t<li><b>initialize</b>, when you make your integer <b>i</b> and set it equal to the start number</li>\n\t\t\t\t\t<li><b>condition</b>, where you decide <b>how</b> and <b>when</b> your loop should stop using the different signs</li>\n\t\t\t\t\t<li><b>iterate</b>, where you <b>increment</b> your integer a specific amount each time it loops through your code</li>\n\t\t\t\t</ol>\n\t\t\t\t<h3>pit stop</h3>\n\t\t\t\t<div className=\"problem\">\n\t\t\t\t\t<b className=\"note\">blast off:</b><br/><br/>\n\t\t\t\t\tyour <b>goal</b> is to use <b>for loops</b> to <b>print out a count down before the blast off of a rocket ship</b>. this will require two steps:<br/>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t<li>construct a for loop that counts down from 5 to 1</li>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>each number should be printed to the console on its own line</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<li>after the for loop is over, print \"blast off!\" to the console</li>\n\t\t\t\t\t</ol>\n\t\t\t\t\t<Hint\n\t\t\t\t\t\thints={[\n\t\t\t\t\t\t\t\"for step 1, your initialize component should be int i = 5 since your countdown begins at 5\",\n\t\t\t\t\t\t\t\"for step 1, your condition component should be i >= 1 because your countdown ends at 1, so as long as i is greater than or equal to 1, the countdown should keep going\",\n\t\t\t\t\t\t\t\"for step 1, your iterate component should be i-- because you want i to decrement, or decrease by 1, each iteration, since you are counting down\"\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tid=\"for-loop-blast-off\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"repl\">\n\t\t\t\t\t\t<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@justforjava/for-loop-blast-off?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"solution\">\n\t\t\t\t\t<b className=\"note\">our solution:</b><br/><br/>\n\t\t\t\t\tbelow is <b>our solution</b> for the problem above. the <b>comments</b> help to explain how to code each step. hopefully your code looks similar to ours <b>:)</b><br/><br/>\n\t\t\t\t\t<div className=\"repl\">\n\t\t\t\t\t\t<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@justforjava/for-loop-blast-off-solution?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"problem\">\n\t\t\t\t\t<b className=\"note\">nibble nibble nom nom:</b><br/><br/>\n\t\t\t\t\tyour <b>goal</b> is to use <b>for loops</b> to print out <b>nibble</b> and <b>nom</b> multiple times; an example output may look like this: \"nibble nibble nibble nom nom nom\".\n\t\t\t\t\tthis will require four steps: <br/>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t<li>create a variable <i>n</i> that stores how many times you want to print out nibble and nom</li>\n\t\t\t\t\t\t<li>construct a for loop that iterates <i>n</i> times</li>\n\t\t\t\t\t\t<li>inside the for loop, print out nibble</li>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>we want our nibbles and noms to all appear on the same line when they are printed</li>\n\t\t\t\t\t\t\t<li>we also want a space in between each nibble and nom</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<li>construct a second for loop that prints out nom <i>n</i> times</li>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>this construction should be almost identical to what you did in steps 2 and 3</li>\n\t\t\t\t\t\t\t<li>the only difference is that you are printing nom instead of nibble</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</ol>\n\t\t\t\t\t<Hint\n\t\t\t\t\t\thints={[\n\t\t\t\t\t\t\t\"for step 2, your initialize component should be int i = 1 and your iterate component should be i++, because you want i to increment each time you loop\",\n\t\t\t\t\t\t\t\"for step 2, since you want your for loop to iterate n times, where n is how many times you want to print out nibble and nom, your condition component should be i <= n\",\n\t\t\t\t\t\t\t\"for step 3, you can use same-line printing - System.out.print() – so that your nibbles and noms are on the same line in the console\",\n\t\t\t\t\t\t\t\"for step 3, add a space after nibble and nom when you print them out inside your for loops\"\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tid=\"for-loop-nibble-nibble-nom-nom\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"repl\">\n\t\t\t\t\t\t<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@justforjava/for-loop-nibble-nibble-nom-nom?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"solution\">\n\t\t\t\t\t<b className=\"note\">our solution:</b><br/><br/>\n\t\t\t\t\tbelow is <b>our solution</b> for the problem above. the <b>comments</b> help to explain how to code each step. hopefully your code looks similar to ours <b>:)</b><br/><br/>\n\t\t\t\t\t<div className=\"repl\">\n\t\t\t\t\t\t<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@justforjava/for-loop-nibble-nibble-nom-nom-solution?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\t<ProgressUpdater\n\t              page={this.props.page} \n\t              user={this.props.user}\n\t              progress={this.state.progress}\n\t              update={(progress)=>this.updateProgressState(progress)}\n\t            />\n\t\t\t\t...we know <b className=\"note\">just for java</b> is as <b>addicting</b> as the newest Netflix binge, so what are you waiting for? <Link className=\"contentLink\" to=\"/while-loop\"><b className=\"pageName\">keep coding!</b></Link>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ForLoop;"]},"metadata":{},"sourceType":"module"}