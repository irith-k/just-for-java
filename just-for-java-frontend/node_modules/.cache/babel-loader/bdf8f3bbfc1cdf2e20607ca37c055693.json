{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/TwoDimArrays.js\";\nimport React from 'react';\nimport ProgressUpdater from './ProgressUpdater';\nimport Hint from './Hint';\nimport { Link } from \"react-router-dom\";\n\nclass TwoDimArrays extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: \"todo\"\n    };\n  }\n\n  updateProgressState(progress) {\n    this.setState({\n      progress: progress\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, this.props.page, \":\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(ProgressUpdater, {\n      page: this.props.page,\n      user: this.props.user,\n      progress: this.state.progress,\n      update: progress => this.updateProgressState(progress),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }), \"on the \", /*#__PURE__*/React.createElement(Link, {\n      className: \"contentLink\",\n      to: \"/array\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 63\n      }\n    }, \"array page\")), \", we learned that an \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 129\n      }\n    }, \"array\"), \" is a list of values, where each value is assigned an index. arrays can store any variable type: integers, doubles, booleans, chars, Strings... \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 285\n      }\n    }, \"even arrays\"), \". yep. you heard that right. today we are going to be making \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 364\n      }\n    }, \"arrays of arrays\"), \", called a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 398\n      }\n    }, \"two-dimensional array\"), \", or \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 431\n      }\n    }, \"2d array\"), \" for short. we know it sounds daunting, but if you have a solid understanding of what a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 534\n      }\n    }, \"one-dimensional array\"), \" is (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 567\n      }\n    }, \"btw:\"), \" a one-dimensional array is simply just the normal arrays that we've been discussing so far), you're good to go!\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }\n    }, \"how do you make an array of arrays?\"), \"the construction of a 2d array looks similar to that of a 1d array, with some minor changes. here's the blueprint of a 2d array:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }\n    }, \"<type>\"), \"[][] \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 38\n      }\n    }, \"<name>\"), \" = new \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 64\n      }\n    }, \"<type>\"), \"[\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 84\n      }\n    }, \"<number of rows>\"), \"][\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 115\n      }\n    }, \"<number of columns>\"), \"];\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }\n    }, \"the sweet taste of recap\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }\n    }, \"yummy.\"), \" you made it to recap!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, \"pit stop\"), /*#__PURE__*/React.createElement(ProgressUpdater, {\n      page: this.props.page,\n      user: this.props.user,\n      progress: this.state.progress,\n      update: progress => this.updateProgressState(progress),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }), \"...we know \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"just for java\"), \" is as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 69\n      }\n    }, \"addicting\"), \" as the newest Netflix binge, so what are you waiting for? \", /*#__PURE__*/React.createElement(Link, {\n      className: \"contentLink\",\n      to: \"/arraylist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 144\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 190\n      }\n    }, \"keep coding!\")));\n  }\n\n}\n\nexport default TwoDimArrays;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/TwoDimArrays.js"],"names":["React","ProgressUpdater","Hint","Link","TwoDimArrays","Component","constructor","props","state","progress","updateProgressState","setState","componentDidMount","window","scrollTo","render","page","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProgressUpdater from './ProgressUpdater';\nimport Hint from './Hint';\nimport {\n  Link\n} from \"react-router-dom\";\n\n\nclass TwoDimArrays extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state={\n\t\t\tprogress: \"todo\"\n\t\t}\n\t}\n\n\tupdateProgressState(progress){\n\t\tthis.setState({\n\t\t\tprogress: progress\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.scrollTo(0, 0);\n  \t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>{this.props.page}:</h2><br/>\n\t\t\t\t<ProgressUpdater\n\t              page={this.props.page} \n\t              user={this.props.user}\n\t              progress={this.state.progress}\n\t              update={(progress)=>this.updateProgressState(progress)}\n\t            />\n\t            on the <Link className=\"contentLink\" to=\"/array\"><b className=\"pageName\">array page</b></Link>, we learned that an <b>array</b> is a list of values, where each value is assigned an index. arrays can store any variable type: integers, doubles, booleans, chars, Strings... <b>even arrays</b>. yep. you heard that right. today we are going to be making <b>arrays of arrays</b>, called a <b>two-dimensional array</b>, or <b>2d array</b> for short. we know it sounds daunting, but if you have a solid understanding of what a <b>one-dimensional array</b> is (<b className=\"note\">btw:</b> a one-dimensional array is simply just the normal arrays that we've been discussing so far), you're good to go!\n\t            <h3>how do you make an array of arrays?</h3>\n\t            the construction of a 2d array looks similar to that of a 1d array, with some minor changes. here's the blueprint of a 2d array:\n\t            <br/>\n\t            <b>\n\t            <i>&lt;type&gt;</i>[][] <i>&lt;name&gt;</i> = new <i>&lt;type&gt;</i>[<i>&lt;number of rows&gt;</i>][<i>&lt;number of columns&gt;</i>];\n\t            </b>\n\t            <br/>\n\t            \n\t            <h3>the sweet taste of recap</h3>\n\t            <b>yummy.</b> you made it to recap!\n\t\t\t\t<br/><br/>\n\t\t\t\t<h3>pit stop</h3>\n\t\t\t\t<ProgressUpdater\n\t              page={this.props.page} \n\t              user={this.props.user}\n\t              progress={this.state.progress}\n\t              update={(progress)=>this.updateProgressState(progress)}\n\t            />\n\t            ...we know <b className=\"note\">just for java</b> is as <b>addicting</b> as the newest Netflix binge, so what are you waiting for? <Link className=\"contentLink\" to=\"/arraylist\"><b className=\"pageName\">keep coding!</b></Link>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default TwoDimArrays;"]},"metadata":{},"sourceType":"module"}