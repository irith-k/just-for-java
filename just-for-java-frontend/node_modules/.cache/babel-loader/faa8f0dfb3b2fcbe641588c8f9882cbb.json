{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/BooleanLogic.js\";\nimport React from 'react';\n\nclass BooleanLogic extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }\n    }, \"welcome to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 16\n      }\n    }, \"boolean logic\"), \"! our goal for this page is for you to understand what \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 91\n      }\n    }, \"2B||!2B\"), \" means!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }\n    }), \"we are going to learn how to make our \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 43\n      }\n    }, \"if statements\"), \" more complex so that we can check multiple things at once (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 123\n      }\n    }, \"psst. need a reminder\"), \" on what in the world if statements are? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 223\n      }\n    }, \"if statements page\"), \"!). and of course, as the name suggests, we are going to work with \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 336\n      }\n    }, \"booleans\"), \"! (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 354\n      }\n    }, \"btw:\"), \" throwback to the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 400\n      }\n    }, \"variables page\"), \"... a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 448\n      }\n    }, \"boolean\"), \" is a variable type that has only two possible values: \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 517\n      }\n    }, \"true\"), \" or \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 532\n      }\n    }, \"false\"), \".)\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }), \"are you ready for a bunch of fun symbols like \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 51\n      }\n    }, \"!\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 61\n      }\n    }, \"&&\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 72\n      }\n    }, \"||\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 87\n      }\n    }, \"()\"), \"? are you ready for tons of tables filled with \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 143\n      }\n    }, \"true\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 159\n      }\n    }, \"false\"), \"? cool. let's do this.\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }\n    }, \"! = not this\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }\n    }, \"&& = this and this\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, \"|| = this or this\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }, \"() = do this first\"), \"if we combine \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }\n    }, \"!\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, \"&&\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 44\n      }\n    }, \"||\"), \" in a giant if statement, then there is a precedence on what happens first, just like how \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 143\n      }\n    }, \"*\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 153\n      }\n    }, \"/\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 167\n      }\n    }, \"%\"), \" happen before \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 190\n      }\n    }, \"+\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 203\n      }\n    }, \"-\"), \". (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 214\n      }\n    }, \"psst. need a reminder\"), \" on the order of operations? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 302\n      }\n    }, \"arithmetics page\"), \"!) let's take a look at \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 370\n      }\n    }, \"logical precedence\"), \":\", /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }\n    }, \"()\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }\n    }, \"!\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 6\n      }\n    }, \"&&\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }\n    }, \"||\")), \"just like with arithmetic, \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 32\n      }\n    }, \"parentheses\"), \" are used to signify \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 71\n      }\n    }, \"\\\"hey! do this first!\\\"\"), \". between \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 109\n      }\n    }, \"!\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 119\n      }\n    }, \"&&\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 134\n      }\n    }, \"||\"), \", you always do \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 159\n      }\n    }, \"!\"), \" first, then \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 180\n      }\n    }, \"&&\"), \", and finally \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 203\n      }\n    }, \"||\"), \". to understand logical precedence better, let's take a look at some examples:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, \"true || !false && false\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }\n    }, \"do we have ()? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }\n    }, \"do we have !? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, \"!false = true, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 41\n      }\n    }, \"true || true && false\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }\n    }, \"do we have &&? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, \"true && false = false, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 49\n      }\n    }, \"true || false\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }\n    }, \"do we have ||? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, \"true || false = true, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 48\n      }\n    }, \"true\")))), \"thus, true || !false && false = \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 37\n      }\n    }, \"true\"), \".\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, \"!(true && false || false)\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }\n    }, \"do we have ()? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, \"true && false || false should be done first\"), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }\n    }, \"do we have ()? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 27\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }\n    }, \"do we have !? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 26\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 8\n      }\n    }, \"do we have &&? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"true && false = false, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 51\n      }\n    }, \"false || false\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }\n    }, \"do we have ||? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"false || false = false, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 52\n      }\n    }, \"false\")))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, \"so now we have !false\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }\n    }, \"do we have !? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 24\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, \"!false = true, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 41\n      }\n    }, \"true\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }\n    }, \"do we have &&? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }\n    }, \"do we have ||? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"no.\"))), \"thus, !(true && false || false) = \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 39\n      }\n    }, \"true\"), \".\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, \"false && (true || true) && true\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }\n    }, \"do we have ()? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, \"true || true should be done first\"), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 8\n      }\n    }, \"do we have ()? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 27\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 8\n      }\n    }, \"do we have !? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 26\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 8\n      }\n    }, \"do we have &&? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 27\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 8\n      }\n    }, \"do we have ||? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 27\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"true || true = true, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 49\n      }\n    }, \"true\")))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, \"so now we have false && true\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 6\n      }\n    }, \"do we have !? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 24\n      }\n    }, \"no.\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 6\n      }\n    }, \"do we have &&? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, \"yes.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, \"false && true && false = false && false = false, so now we have \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 75\n      }\n    }, \"false\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }\n    }, \"do we have ||? \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"no.\"))), \"thus, false && (true || true) && true = \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 45\n      }\n    }, \"false\"), \".\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }, \"!(!recap)\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }, \"awesome!\"), \" you made it to recap!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 10\n      }\n    }), \"to end with, hamlet once said, \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 36\n      }\n    }, \"2B||!2B\"), \", that is the question... i guess shakespeare did have a knack for coding...\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 10\n      }\n    }), \"...we know \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 16\n      }\n    }, \"just for java\"), \" is as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 60\n      }\n    }, \"addicting\"), \" as the newest Netflix binge, so what are you waiting for? \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 135\n      }\n    }, \"keep coding!\"));\n  }\n\n}\n\nexport default BooleanLogic;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/BooleanLogic.js"],"names":["React","BooleanLogic","Component","constructor","props","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass BooleanLogic extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\twelcome to <b>boolean logic</b>! our goal for this page is for you to understand what <b>2B||!2B</b> means! \n\t\t\t\t<br/>\n\t\t\t\twe are going to learn how to make our <b>if statements</b> more complex so that we can check multiple things at once (<b className=\"note\">psst. need a reminder</b> on what in the world if statements are? check out the <b className=\"pageName\">if statements page</b>!). and of course, as the name suggests, we are going to work with <b>booleans</b>! (<b className=\"note\">btw:</b> throwback to the <b className=\"pageName\">variables page</b>... a <b>boolean</b> is a variable type that has only two possible values: <b>true</b> or <b>false</b>.) \n\t\t\t\t<br/>\n\t\t\t\tare you ready for a bunch of fun symbols like <b>!</b>, <b>&&</b>, <b>||</b>, and <b>()</b>? are you ready for tons of tables filled with <b>true</b> and <b>false</b>? cool. let's do this.\n\t\t\t\t<h3>! = not this</h3>\n\n\t\t\t\t<h3>&& = this and this</h3>\n\n\t\t\t\t<h3>|| = this or this</h3>\n\t\t\t\t\n\t\t\t\t<h3>() = do this first</h3>\n\t\t\t\tif we combine <b>!</b>, <b>&&</b>, and <b>||</b> in a giant if statement, then there is a precedence on what happens first, just like how <b>*</b>, <b>/</b>, and <b>%</b> happen before <b>+</b> and <b>-</b>. (<b className=\"note\">psst. need a reminder</b> on the order of operations? check out the <b className=\"pageName\">arithmetics page</b>!) let's take a look at <b>logical precedence</b>:\n\t\t\t\t<ol>\n\t\t\t\t\t<li>()</li>\n\t\t\t\t\t<li>!</li>\n\t\t\t\t\t<li>&&</li>\n\t\t\t\t\t<li>||</li>\n\t\t\t\t</ol>\n\t\t\t\tjust like with arithmetic, <b>parentheses</b> are used to signify <b>\"hey! do this first!\"</b>. between <b>!</b>, <b>&&</b>, and <b>||</b>, you always do <b>!</b> first, then <b>&&</b>, and finally <b>||</b>. to understand logical precedence better, let's take a look at some examples:\n\t\t\t\t<br/><br/>\n\t\t\t\t<b>true || !false && false</b>\n\t\t\t\t<br/>\n\t\t\t\t<ol>\n\t\t\t\t\t<li>do we have ()? <b>no.</b></li>\n\t\t\t\t\t<li>do we have !? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>!false = true, so now we have <b>true || true && false</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li>do we have &&? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>true && false = false, so now we have <b>true || false</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li>do we have ||? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>true || false = true, so now we have <b>true</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</ol>\n\t\t\t\tthus, true || !false && false = <b>true</b>.\n\t\t\t\t<br/><br/>\n\t\t\t\t<b>!(true && false || false)</b>\n\t\t\t\t<br/>\n\t\t\t\t<ol>\n\t\t\t\t\t<li>do we have ()? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>true && false || false should be done first</li>\n\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t<li>do we have ()? <b>no.</b></li>\n\t\t\t\t\t\t\t<li>do we have !? <b>no.</b></li>\n\t\t\t\t\t\t\t<li>do we have &&? <b>yes.</b></li>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>true && false = false, so now we have <b>false || false</b></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<li>do we have ||? <b>yes.</b></li>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>false || false = false, so now we have <b>false</b></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t<li>so now we have !false</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li>do we have !? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>!false = true, so now we have <b>true</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li>do we have &&? <b>no.</b></li>\n\t\t\t\t\t<li>do we have ||? <b>no.</b></li>\n\t\t\t\t</ol>\n\t\t\t\tthus, !(true && false || false) = <b>true</b>.\n\t\t\t\t<br/><br/>\n\t\t\t\t<b>false && (true || true) && true</b>\n\t\t\t\t<br/>\n\t\t\t\t<ol>\n\t\t\t\t\t<li>do we have ()? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>true || true should be done first</li>\n\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t<li>do we have ()? <b>no.</b></li>\n\t\t\t\t\t\t\t<li>do we have !? <b>no.</b></li>\n\t\t\t\t\t\t\t<li>do we have &&? <b>no.</b></li>\n\t\t\t\t\t\t\t<li>do we have ||? <b>yes.</b></li>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>true || true = true, so now we have <b>true</b></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t<li>so now we have false && true</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li>do we have !? <b>no.</b></li>\n\t\t\t\t\t<li>do we have &&? <b>yes.</b></li>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>false && true && false = false && false = false, so now we have <b>false</b></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<li>do we have ||? <b>no.</b></li>\n\t\t\t\t</ol>\n\t\t\t\tthus, false && (true || true) && true = <b>false</b>.\n\t\t\t\t<h3>!(!recap)</h3>\n\t\t\t\t<b>awesome!</b> you made it to recap!\n\t\t\t\t<br/><br/>\n\n\t\t\t\t<br/><br/>\n\t\t\t\tto end with, hamlet once said, <b>2B||!2B</b>, that is the question... i guess shakespeare did have a knack for coding...\n\t\t\t\t<br/><br/>\n\t\t\t\t...we know <b className=\"note\">just for java</b> is as <b>addicting</b> as the newest Netflix binge, so what are you waiting for? <b className=\"pageName\">keep coding!</b>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default BooleanLogic;"]},"metadata":{},"sourceType":"module"}