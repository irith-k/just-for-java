{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Comments.js\";\nimport React from 'react';\n\nclass Comments extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }\n    }, \"comments\"), \" are used to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 33\n      }\n    }, \"write notes\"), \" next to your code \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 70\n      }\n    }, \"that aren't executed when you run your code\"), \". if, on the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    }, \"variables page\"), \", you saw notes denoted with two forward slashes, those were comments!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 10\n      }\n    }), \"there are two types of comments you can make:\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }\n    }, \"single-line comments\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 6\n      }\n    }, \"multi-line comments\")), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }\n    }, \"wait, so how do you make a comment?\"), \"here's the blueprint on how to make a single-line comment:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 63\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }, \"//\", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 10\n      }\n    }, \"<your note here>\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 48\n      }\n    }), \"and here's the blueprint on how to make a multi-line comment:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 66\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }, \"/*\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 8\n      }\n    }, \"<your note here>\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 41\n      }\n    }), \"*/\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }, \"ok, but what's the point of that?\"), \"commenting your code is a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 31\n      }\n    }, \"really good habit\"), \" that you should start right now. like seriously. go. i'm waiting... still here. waiting. or shall i say, //waiting. \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 172\n      }\n    }), \"in all seriousness, it's really helpful for you and others who might be reading your code to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 98\n      }\n    }, \"understand what certain lines of code do\"), \", improving your code's \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 169\n      }\n    }, \"readability\"), \".\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, \"here's an example\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, \"boolean understandComments = false; \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 42\n      }\n    }, \"//starts out not understanding comments\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }\n    }, \"/*\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, \"because you've read the information above, you now understand comments and how important they are. so, we can set understandComments to true!\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 155\n      }\n    }), \"*/\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }), \"understandComments = true;\"), \"in the code above, you can see both single-line and multi-line comments being used.\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, \"//is it already time for recap?\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, \"yayyyy!\"), \" you made it to reacap!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 47\n      }\n    }), \"so, just to sum up, the two types of comments are \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 55\n      }\n    }, \"single-line comments\"), \", denoted by \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 95\n      }\n    }, \"//\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 110\n      }\n    }, \"multi-line comments\"), \", denoted by \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 149\n      }\n    }, \"/* ... */\"), \". \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 167\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 172\n      }\n    }), \"comments are \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }\n    }, \"really important\"), \" because they help increase your code's \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 81\n      }\n    }, \"readability\"), \". now, going forward, be sure to comment on your code! :)\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }\n    }), \"...we know \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }\n    }, \"just for java\"), \" is as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 60\n      }\n    }, \"addicting\"), \" as the newest Netflix binge, so what are you waiting for? \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 135\n      }\n    }, \"keep coding!\"));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Comments.js"],"names":["React","Comments","Component","constructor","props","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Comments extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<b>comments</b> are used to <b>write notes</b> next to your code <b>that aren't executed when you run your code</b>. \n\t\t\t\tif, on the <b className=\"pageName\">variables page</b>, you saw notes denoted with two forward slashes, those were comments!\n\t\t\t\t<br/><br/>\n\t\t\t\tthere are two types of comments you can make:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>single-line comments</li>\n\t\t\t\t\t<li>multi-line comments</li>\n\t\t\t\t</ul>\n\t\t\t\t<h3>wait, so how do you make a comment?</h3>\n\t\t\t\there's the blueprint on how to make a single-line comment:<br/>\n\t\t\t\t<b>//<i>&lt;your note here&gt;</i></b><br/><br/>\n\t\t\t\tand here's the blueprint on how to make a multi-line comment:<br/>\n\t\t\t\t<b>/*<br/>\n\t\t\t\t<p><i>&lt;your note here&gt;</i></p><br/>\n\t\t\t\t*/</b><br/>\n\t\t\t\t<h3>ok, but what's the point of that?</h3>\n\t\t\t\tcommenting your code is a <b>really good habit</b> that you should start right now. like seriously. go. i'm waiting... still here. waiting. or shall i say, //waiting. <br/>\n\t\t\t\tin all seriousness, it's really helpful for you and others who might be reading your code to <b>understand what certain lines of code do</b>, improving your code's <b>readability</b>.\n\t\t\t\t<h3>here's an example</h3>\n\t\t\t\t<div className=\"code\">\n\t\t\t\t\tboolean understandComments = false; <div className=\"comment\">//starts out not understanding comments</div>\n\t\t\t\t\t<div className=\"comment\">\n\t\t\t\t\t\t/*<br/>\n\t\t\t\t\t\t<p>because you've read the information above, you now understand comments and how important they are. so, we can set understandComments to true!</p><br/>\n\t\t\t\t\t\t*/\n\t\t\t\t\t</div><br/>\n\t\t\t\t\tunderstandComments = true;\n\t\t\t\t</div>\n\t\t\t\tin the code above, you can see both single-line and multi-line comments being used.\n\t\t\t\t<h3>//is it already time for recap?</h3>\n\t\t\t\t<b>yayyyy!</b> you made it to reacap!<br/><br/>\n\t\t\t\tso, just to sum up, the two types of comments are <b>single-line comments</b>, denoted by <b>//</b>, and <b>multi-line comments</b>, denoted by <b>/* ... */</b>. <br/><br/>\n\t\t\t\tcomments are <b>really important</b> because they help increase your code's <b>readability</b>. now, going forward, be sure to comment on your code! :)\n\t\t\t\t<br/><br/>\n\t\t\t\t...we know <b className=\"note\">just for java</b> is as <b>addicting</b> as the newest Netflix binge, so what are you waiting for? <b className=\"pageName\">keep coding!</b>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}