{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Variables.js\";\nimport React from 'react';\n\nclass Variables extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }\n    }, \" variables:\"), \"variables are used to store information.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 10\n      }\n    }), \"to create a variable, you should write: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 8\n      }\n    }, \" <type> <name> = <value>\")), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 62\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }\n    }), \"there are multiple types of things that variables can store:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 6\n      }\n    }, \"integer\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 6\n      }\n    }, \"double\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 6\n      }\n    }, \"string\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }\n    }, \"character\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }\n    }, \"boolean\")), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, \"integers\"), \" stores any whole number, such as 1, 2, 3, etc. to make an integer variable, you need to write \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 115\n      }\n    }, \"int\"), \" as the type.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 138\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }, \"doubles\"), \" store any number with decimal, such as 0.1 or 123.5. to make a double variable, you need to write \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 118\n      }\n    }, \" double\"), \" as they type\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 145\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, \"strings\"), \" store text, and is denoted using double quotation marks. to make a string variable, you need to write \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 122\n      }\n    }, \"String\"), \" as the type.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 148\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, \"characters\"), \" store a single letter, digit, or symbol, and is denoted using single quotation marks. to make a character variable, you need to write \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 157\n      }\n    }, \"char\"), \" as the type.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 181\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, \"booleans\"), \" store either a value of true or false. to make a boolean variable, you need to write \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 106\n      }\n    }, \" boolean\"), \" as the type.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 134\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }), \"for example, let's say you want to make an integer variable with the name \\\"number\\\" to store the number 5.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }), \"you would need to write: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, \"int number = 5\"));\n  }\n\n}\n\nexport default Variables;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Variables.js"],"names":["React","Variables","Component","constructor","props","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAuC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA;;AAGDC,EAAAA,MAAM,GAAE;AACP,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,2DAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,eAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHN,2DAIyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJzC,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAH,CALD,oBAK0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAL1D,eAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,+EAO6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAP7D,eAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJD,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALD,CARD,eAeC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfD,kHAe+G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAf/G,gCAesI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAftI,eAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAhBD,sHAgBkH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAhBlH,gCAgB6I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhB7I,eAiBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAjBD,0HAiBsH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBtH,gCAiBgJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBhJ,eAkBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBD,0JAkByJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBzJ,gCAkBiL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBjL,eAmBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBD,yGAmBsG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBtG,gCAmBkI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBlI,eAoBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBD,8HAsBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBD,4CAsB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtB/B,eAuBC;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAvBD,CADD;AA+BA;;AAtCqC;;AAyCvC,eAAeJ,SAAf","sourcesContent":["import React from 'react';\n\nclass Variables extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2> variables:</h2>\n\t\t\t\tvariables are used to store information. \n\t\t\t\t<br/><br/>\n\t\t\t\tto create a variable, you should write: <br/>\n\t\t\t\t<b><i> &lt;type&gt; &lt;name&gt; = &lt;value&gt;</i></b> <br/>\n\t\t\t\t<br/>\n\t\t\t\tthere are multiple types of things that variables can store:<br/>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>integer</li>\n\t\t\t\t\t<li>double</li>\n\t\t\t\t\t<li>string</li>\n\t\t\t\t\t<li>character</li>\n\t\t\t\t\t<li>boolean</li>\n\t\t\t\t</ul>\n\t\t\t\t<b>integers</b> stores any whole number, such as 1, 2, 3, etc. to make an integer variable, you need to write <b>int</b> as the type.<br/>\n\t\t\t\t<b>doubles</b> store any number with decimal, such as 0.1 or 123.5. to make a double variable, you need to write <b> double</b> as they type<br/>\n\t\t\t\t<b>strings</b> store text, and is denoted using double quotation marks. to make a string variable, you need to write <b>String</b> as the type.<br/>\n\t\t\t\t<b>characters</b> store a single letter, digit, or symbol, and is denoted using single quotation marks. to make a character variable, you need to write <b>char</b> as the type.<br/> \n\t\t\t\t<b>booleans</b> store either a value of true or false. to make a boolean variable, you need to write <b> boolean</b> as the type.<br/>\n\t\t\t\t<br/>\n\t\t\t\tfor example, let's say you want to make an integer variable with the name \"number\" to store the number 5. \n\t\t\t\t<br/>you would need to write: <br/>\n\t\t\t\t<div className = \"code\">\n\t\t\t\t\tint number = 5\n\t\t\t\t</div> \n\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Variables;"]},"metadata":{},"sourceType":"module"}