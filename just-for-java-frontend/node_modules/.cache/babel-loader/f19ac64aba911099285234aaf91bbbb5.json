{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Nesting.js\";\nimport React from 'react';\n\nclass Nesting extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }\n    }, \"in programming, \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }\n    }, \"nesting\"), \" simply means \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 49\n      }\n    }, \"putting code blocks inside each other\"), \", such as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 103\n      }\n    }, \"if statements\"), \", \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 125\n      }\n    }, \"for loops\"), \", and \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 147\n      }\n    }, \"while loops\"), \". (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 168\n      }\n    }, \"psst. need a reminder\"), \" on how these three code blocks work? check out the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 265\n      }\n    }, \"if statement page\"), \", the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 316\n      }\n    }, \"for loop page\"), \", and the \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 367\n      }\n    }, \"while loop page\"), \"!) now, you might be thinking, what's the point of putting an if statement inside a while loop inside a for loop? nesting allows our programs to become \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 562\n      }\n    }, \"more complex in their functionality\"), \"!\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }\n    }, \"don't believe us?\"), \"let's take a look at the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 30\n      }\n    }, \"classic example\"), \" we used to demonstrate how for loops and while loops work: \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 112\n      }\n    }, \"print the numbers 1-5\"), \". just to refresh you, here is the classic example coded out using a for loop:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }, \"for(int i = 1; i \\u2264 5; i++) { \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }\n    }, \"System.out.print(i + \\\" \\\");\"), \"}\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    })), \"and using a while loop:\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }), \"now, let's change things up a bit. say we wanted to \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 57\n      }\n    }, \"print the numbers 1-5, except for the number 4\"), \". how can we do this? well, we already have the code to print the numbers 1-5, so all we need to do is not print the number if it is equal to 4! (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 256\n      }\n    }, \"btw:\"), \" did you notice the word \\\"if\\\" in that sentence?). let's add an \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 347\n      }\n    }, \"if statement inside our loop\"), \" that checks if the number is not equal to 4, and if so, prints the number. (\", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 459\n      }\n    }, \"hint:\"), \" you can use \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 501\n      }\n    }, \"!=\"), \" to check if the number is not equal 4.) take a look at the code below!\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, \"for(int i = 1; i \\u2264 5; i++) { \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }\n    }, \"if(i != 4) { \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 27\n      }\n    }, \"//if i does not equal 4, print i\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 94\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"indent1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, \"System.out.print(i + \\\" \\\");\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 60\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }\n    }, \"}\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }\n    }), \"}\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    })), \"finally, let's take a look at the console to see if our program worked!\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, \"1 2 3 5\"), \"sweet!\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, \"hmu with another example\"), \"for sure!\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, \"let's get funky\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, \"{ { recap } }\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, \"yo!\"), \" you made it to recap!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }\n    }), \"...we know \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    }, \"just for java\"), \" is as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 60\n      }\n    }, \"addicting\"), \" as the newest Netflix binge, so what are you waiting for? \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"pageName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 135\n      }\n    }, \"keep coding!\"));\n  }\n\n}\n\nexport default Nesting;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/Nesting.js"],"names":["React","Nesting","Component","constructor","props","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Nesting extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tin programming, <b>nesting</b> simply means <b>putting code blocks inside each other</b>, such as <b>if statements</b>, <b>for loops</b>, and <b>while loops</b>. (<b className=\"note\">psst. need a reminder</b> on how these three code blocks work? check out the <b className=\"pageName\">if statement page</b>, the <b className=\"pageName\">for loop page</b>, and the <b className=\"pageName\">while loop page</b>!) now, you might be thinking, what's the point of putting an if statement inside a while loop inside a for loop? nesting allows our programs to become <b>more complex in their functionality</b>!\n\t\t\t\t<h3>don't believe us?</h3>\n\t\t\t\tlet's take a look at the <b>classic example</b> we used to demonstrate how for loops and while loops work: <b>print the numbers 1-5</b>. just to refresh you, here is the classic example coded out using a for loop:\n\t\t\t\t<div className=\"code\">\n\t\t\t\tfor(int i = 1; i &le; 5; i++) &#123; <br/>\n\t\t\t\t\t<p>System.out.print(i + \" \");</p>\n\t\t\t\t&#125;<br/>\n\t\t\t\t</div>\n\t\t\t\tand using a while loop:\n\t\t\t\t<div className=\"code\">\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\tnow, let's change things up a bit. say we wanted to <b>print the numbers 1-5, except for the number 4</b>. how can we do this? well, we already have the code to print the numbers 1-5, so all we need to do is not print the number if it is equal to 4! (<b className=\"note\">btw:</b> did you notice the word \"if\" in that sentence?). let's add an <b>if statement inside our loop</b> that checks if the number is not equal to 4, and if so, prints the number. (<b className=\"note\">hint:</b> you can use <b>!=</b> to check if the number is not equal 4.) take a look at the code below!\n\t\t\t\t<div className=\"code\">\n\t\t\t\tfor(int i = 1; i &le; 5; i++) &#123; <br/>\n\t\t\t\t\t<p>if(i != 4) &#123; <div className=\"comment\">//if i does not equal 4, print i</div></p><br/>\n\t\t\t\t\t\t<p className=\"indent1\">System.out.print(i + \" \");</p><br/>\n\t\t\t\t\t<p>&#125;</p><br/>\n\t\t\t\t&#125;<br/>\n\t\t\t\t</div>\n\t\t\t\tfinally, let's take a look at the console to see if our program worked!\n\t\t\t\t<div className=\"code\">\n\t\t\t\t1 2 3 5\n\t\t\t\t</div>\n\t\t\t\tsweet!\n\t\t\t\t<h3>hmu with another example</h3>\n\t\t\t\tfor sure! \n\t\t\t\t<h3>let's get funky</h3>\n\t\t\t\t<h3>&#123; &#123; recap &#125; &#125;</h3>\n\t\t\t\t<b>yo!</b> you made it to recap!\n\t\t\t\t<br/><br/>\n\t\t\t\t...we know <b className=\"note\">just for java</b> is as <b>addicting</b> as the newest Netflix binge, so what are you waiting for? <b className=\"pageName\">keep coding!</b>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Nesting;"]},"metadata":{},"sourceType":"module"}