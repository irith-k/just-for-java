{"ast":null,"code":"var _jsxFileName = \"/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/UserInput.js\";\nimport React from 'react';\n\nclass UserInput extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }\n    }, \"sometimes in our program we want to get information from the user, such as their name. you will learn how to get \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 118\n      }\n    }, \"user input from the console\"), \", which will allow you to create super cool programs that can actually interact with the user!\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }\n    }, \"just some setting up we have to do\"), \"there are two steps we need to do before we can actually start getting input from the user:\", /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 6\n      }\n    }, \"we need to import the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 32\n      }\n    }, \"Scanner\"), \" class to help us\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }\n    }, \"we need to create a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 30\n      }\n    }, \"Scanner\"), \" variable in our main method, which we will use to get user input\")), \"let's walk through each of these steps...\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }, \"step 1: import the Scanner class\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }), \"we need to import the Scanner class to help us get user input. to do this, type the following line of code at the very top of your program:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, \"import java.util.Scanner;\"), \"once we import the Scanner class, then we can create a Scanner variable (\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 78\n      }\n    }, \"btw:\"), \" make sure to capitalize the S in Scanner)\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, \"step 2: create a Scanner variable\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }), \"creating a Scanner variable is slightly different than the other variables we have created so far, since it uses a different construction. type the following line of code in your main method to create a Scanner variable:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, \"Scanner in = new Scanner(System.in);\"), \"this means that we can now get user input from the console (\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 65\n      }\n    }, \"btw:\"), \" the console is where you see anything printed out, and that is also where the user will enter their input)\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, \"finally! let's get the user's name\"), \"now let's learn how to get user input. we are going to create a program that asks the user to type their name and says hello to them. there are three steps we need to do in order to create our program (note that these steps can be applied to any type of program you are creating involving user input):\", /*#__PURE__*/React.createElement(\"ol\", {\n      start: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }\n    }, \"print\"), \" out a prompt for the user to answer to\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }\n    }, \"get the \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }\n    }, \"user input\"), \" and store it in a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 54\n      }\n    }, \"variable\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }\n    }, \"do something with the user input in your program\")), \"let's walk through each of these steps...\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, \"step 3: print out a prompt\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }), \"whenever we print out a prompt for the user to answer to, we usually want the user to answer on the same line as the prompt. this means that we will have to use \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 166\n      }\n    }, \"System.out.print()\"), \" when we are printing a prompt for the user to answer to (\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 249\n      }\n    }, \"btw:\"), \" remember that \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 275\n      }\n    }, \"System.out.print()\"), \" prints whatever is in between the parentheses without creating a new line, or entering, after).\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, \"step 4: get and store the user input\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, \"step 5: do something with it\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }), \"this step will vary depending on what your program is supposed to do. for our program, we want to say hello to the user. now that we have the user's name stored in the variable \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 182\n      }\n    }, \"name\"), \", we can print out a greeting to the user saying hello \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 248\n      }\n    }, \"name\"), \". to do this, we can use \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 284\n      }\n    }, \"String concatenation\"), \" to add our variable \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 332\n      }\n    }, \"name\"), \" to \\\"hello \\\" (\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 357\n      }\n    }, \"btw:\"), \" remember that you can use \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 395\n      }\n    }, \"+\"), \" to add a variable to a \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 427\n      }\n    }, \"String\"), \"). make sure you add a space after hello so that there is a space between hello and the user's name.\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }, \"System.out.println(\\\"hello \\\" + name);\"), \"awesome! we now have a fully functional program that asks the user for their name and prints out \\\"hello \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 109\n      }\n    }, \"name\"), \"\\\".\", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, \"how about getting the user's age?\"));\n  }\n\n}\n\nexport default UserInput;","map":{"version":3,"sources":["/Users/irithkatiyar/Desktop/just-for-java-frontend/src/components/UserInput.js"],"names":["React","UserInput","Component","constructor","props","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAuC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA;;AAGDC,EAAAA,MAAM,GAAE;AACP,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIACkH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADlH,iHAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFD,8GAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA1B,sBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAxB,sEAFD,CAJD,4DASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATD,eAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVD,eAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAXD,eAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZD,eAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbD,8JAeC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfD,eAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBD,eAiBC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAjBD,4FAkB0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlB1E,6DAmBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBD,eAoBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBD,eAqBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CArBD,eAsBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBD,+OAwBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBD,eAyBC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAzBD,+EA0B6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1B7D,8HA2BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CA3BD,gUA8BC;AAAI,MAAA,KAAK,EAAC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAJ,4CADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAZ,sCAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhD,CAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAHD,CA9BD,4DAoCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCD,eAqCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArCD,eAsCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAtCD,eAuCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCD,oLAwCkK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAxClK,6EAwCqP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCrP,kCAwC+Q;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAxC/Q,mHAyCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCD,eA0CC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CA1CD,eA2CC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CD,eA4CC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CD,eA6CC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCA7CD,eA8CC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9CD,oMA+CkL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/ClL,0EA+CoP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/CpP,4CA+CwR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BA/CxR,wCA+CwU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/CxU,mCA+CiW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/CjW,8CA+CuY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA/CvY,2CA+Cua;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/Cva,uHAgDC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAhDD,4HAiDyG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjDzG,sBAkDC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAlDD,CADD;AAsDA;;AA7DqC;;AAgEvC,eAAeJ,SAAf","sourcesContent":["import React from 'react';\n\nclass UserInput extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tsometimes in our program we want to get information from the user, such as their name. you will learn how to get <b>user input from the console</b>, which will allow you to create super cool programs that can actually interact with the user!\n\t\t\t\t<h3>just some setting up we have to do</h3>\n\t\t\t\tthere are two steps we need to do before we can actually start getting input from the user:\n\t\t\t\t<ol>\n\t\t\t\t\t<li>we need to import the <b>Scanner</b> class to help us</li>\n\t\t\t\t\t<li>we need to create a <b>Scanner</b> variable in our main method, which we will use to get user input</li>\n\t\t\t\t</ol>\n\t\t\t\tlet's walk through each of these steps...\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\t<b>step 1: import the Scanner class</b>\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\twe need to import the Scanner class to help us get user input. to do this, type the following line of code at the very top of your program:\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"code\">import java.util.Scanner;</div>\n\t\t\t\tonce we import the Scanner class, then we can create a Scanner variable (<b>btw:</b> make sure to capitalize the S in Scanner)\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\t<b>step 2: create a Scanner variable</b>\n\t\t\t\t<br/>\n\t\t\t\tcreating a Scanner variable is slightly different than the other variables we have created so far, since it uses a different construction. type the following line of code in your main method to create a Scanner variable:\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"code\">Scanner in = new Scanner(System.in);</div>\n\t\t\t\tthis means that we can now get user input from the console (<b>btw:</b> the console is where you see anything printed out, and that is also where the user will enter their input)\n\t\t\t\t<h3>finally! let's get the user's name</h3>\n\t\t\t\tnow let's learn how to get user input. we are going to create a program that asks the user to type their name and says hello to them.\n\t\t\t\tthere are three steps we need to do in order to create our program (note that these steps can be applied to any type of program you are creating involving user input):\n\t\t\t\t<ol start=\"3\">\n\t\t\t\t\t<li><b>print</b> out a prompt for the user to answer to</li>\n\t\t\t\t\t<li>get the <b>user input</b> and store it in a <b>variable</b></li>\n\t\t\t\t\t<li>do something with the user input in your program</li>\n\t\t\t\t</ol>\n\t\t\t\tlet's walk through each of these steps...\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\t<b>step 3: print out a prompt</b>\n\t\t\t\t<br/>\n\t\t\t\twhenever we print out a prompt for the user to answer to, we usually want the user to answer on the same line as the prompt. this means that we will have to use <b>System.out.print()</b> when we are printing a prompt for the user to answer to (<b>btw:</b> remember that <b>System.out.print()</b> prints whatever is in between the parentheses without creating a new line, or entering, after).\n\t\t\t\t<br></br>\n\t\t\t\t<b>step 4: get and store the user input</b>\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\t<b>step 5: do something with it</b>\n\t\t\t\t<br/>\n\t\t\t\tthis step will vary depending on what your program is supposed to do. for our program, we want to say hello to the user. now that we have the user's name stored in the variable <i>name</i>, we can print out a greeting to the user saying hello <i>name</i>. to do this, we can use <b>String concatenation</b> to add our variable <i>name</i> to \"hello \" (<b>btw:</b> remember that you can use <b>+</b> to add a variable to a <b>String</b>). make sure you add a space after hello so that there is a space between hello and the user's name.\n\t\t\t\t<div className=\"code\">System.out.println(\"hello \" + name);</div>\n\t\t\t\tawesome! we now have a fully functional program that asks the user for their name and prints out \"hello <i>name</i>\".\n\t\t\t\t<h3>how about getting the user's age?</h3>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default UserInput;"]},"metadata":{},"sourceType":"module"}